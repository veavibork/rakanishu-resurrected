var _____WB$wombat$assign$function_____ = function(name) {
    return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name];
};
if (!self.__WB_pmw) {
    self.__WB_pmw = function(obj) {
        this.__WB_source = obj;
        return this;
    }
} {
    let window = _____WB$wombat$assign$function_____("window");
    let self = _____WB$wombat$assign$function_____("self");
    let document = _____WB$wombat$assign$function_____("document");
    let location = _____WB$wombat$assign$function_____("location");
    let top = _____WB$wombat$assign$function_____("top");
    let parent = _____WB$wombat$assign$function_____("parent");
    let frames = _____WB$wombat$assign$function_____("frames");
    let opener = _____WB$wombat$assign$function_____("opener");

    (self.webpackChunkrakanishu = self.webpackChunkrakanishu || []).push([
        [179], {
            952: (me, _e, L) => {
                "use strict";

                function A(t) {
                    return "function" == typeof t
                }

                function w(t) {
                    const e = t(i => {
                        Error.call(i), i.stack = (new Error).stack
                    });
                    return e.prototype = Object.create(Error.prototype), e.prototype.constructor = e, e
                }
                const z = w(t => function(e) {
                    t(this), this.message = e ? `${e.length} errors occurred during unsubscription:\n${e.map((i,r)=>`${r+1}) ${i.toString()}`).join("\n  ")}` : "", this.name = "UnsubscriptionError", this.errors = e
                });

                function j(t, n) {
                    if (t) {
                        const e = t.indexOf(n);
                        0 <= e && t.splice(e, 1)
                    }
                }
                class X {
                    constructor(n) {
                        this.initialTeardown = n, this.closed = !1, this._parentage = null, this._teardowns = null
                    }
                    unsubscribe() {
                        let n;
                        if (!this.closed) {
                            this.closed = !0;
                            const {
                                _parentage: e
                            } = this;
                            if (e)
                                if (this._parentage = null, Array.isArray(e))
                                    for (const s of e) s.remove(this);
                                else e.remove(this);
                            const {
                                initialTeardown: i
                            } = this;
                            if (A(i)) try {
                                i()
                            } catch (s) {
                                n = s instanceof z ? s.errors : [s]
                            }
                            const {
                                _teardowns: r
                            } = this;
                            if (r) {
                                this._teardowns = null;
                                for (const s of r) try {
                                    b(s)
                                } catch (o) {
                                    n = null != n ? n : [], o instanceof z ? n = [...n, ...o.errors] : n.push(o)
                                }
                            }
                            if (n) throw new z(n)
                        }
                    }
                    add(n) {
                        var e;
                        if (n && n !== this)
                            if (this.closed) b(n);
                            else {
                                if (n instanceof X) {
                                    if (n.closed || n._hasParent(this)) return;
                                    n._addParent(this)
                                }(this._teardowns = null !== (e = this._teardowns) && void 0 !== e ? e : []).push(n)
                            }
                    }
                    _hasParent(n) {
                        const {
                            _parentage: e
                        } = this;
                        return e === n || Array.isArray(e) && e.includes(n)
                    }
                    _addParent(n) {
                        const {
                            _parentage: e
                        } = this;
                        this._parentage = Array.isArray(e) ? (e.push(n), e) : e ? [e, n] : n
                    }
                    _removeParent(n) {
                        const {
                            _parentage: e
                        } = this;
                        e === n ? this._parentage = null : Array.isArray(e) && j(e, n)
                    }
                    remove(n) {
                        const {
                            _teardowns: e
                        } = this;
                        e && j(e, n), n instanceof X && n._removeParent(this)
                    }
                }
                X.EMPTY = (() => {
                    const t = new X;
                    return t.closed = !0, t
                })();
                const B = X.EMPTY;

                function U(t) {
                    return t instanceof X || t && "closed" in t && A(t.remove) && A(t.add) && A(t.unsubscribe)
                }

                function b(t) {
                    A(t) ? t() : t.unsubscribe()
                }
                const C = {
                        onUnhandledError: null,
                        onStoppedNotification: null,
                        Promise: void 0,
                        useDeprecatedSynchronousErrorHandling: !1,
                        useDeprecatedNextContext: !1
                    },
                    N = {
                        setTimeout(...t) {
                            const {
                                delegate: n
                            } = N;
                            return ((null == n ? void 0 : n.setTimeout) || setTimeout)(...t)
                        },
                        clearTimeout(t) {
                            const {
                                delegate: n
                            } = N;
                            return ((null == n ? void 0 : n.clearTimeout) || clearTimeout)(t)
                        },
                        delegate: void 0
                    };

                function v(t) {
                    N.setTimeout(() => {
                        const {
                            onUnhandledError: n
                        } = C;
                        if (!n) throw t;
                        n(t)
                    })
                }

                function T() {}
                const y = $("C", void 0, void 0);

                function $(t, n, e) {
                    return {
                        kind: t,
                        value: n,
                        error: e
                    }
                }
                let V = null;

                function x(t) {
                    if (C.useDeprecatedSynchronousErrorHandling) {
                        const n = !V;
                        if (n && (V = {
                                errorThrown: !1,
                                error: null
                            }), t(), n) {
                            const {
                                errorThrown: e,
                                error: i
                            } = V;
                            if (V = null, e) throw i
                        }
                    } else t()
                }
                class q extends X {
                    constructor(n) {
                        super(), this.isStopped = !1, n ? (this.destination = n, U(n) && n.add(this)) : this.destination = ae
                    }
                    static create(n, e, i) {
                        return new G(n, e, i)
                    }
                    next(n) {
                        this.isStopped ? de(function R(t) {
                            return $("N", t, void 0)
                        }(n), this) : this._next(n)
                    }
                    error(n) {
                        this.isStopped ? de(function S(t) {
                            return $("E", void 0, t)
                        }(n), this) : (this.isStopped = !0, this._error(n))
                    }
                    complete() {
                        this.isStopped ? de(y, this) : (this.isStopped = !0, this._complete())
                    }
                    unsubscribe() {
                        this.closed || (this.isStopped = !0, super.unsubscribe(), this.destination = null)
                    }
                    _next(n) {
                        this.destination.next(n)
                    }
                    _error(n) {
                        try {
                            this.destination.error(n)
                        } finally {
                            this.unsubscribe()
                        }
                    }
                    _complete() {
                        try {
                            this.destination.complete()
                        } finally {
                            this.unsubscribe()
                        }
                    }
                }
                class G extends q {
                    constructor(n, e, i) {
                        let r;
                        if (super(), A(n)) r = n;
                        else if (n) {
                            let s;
                            ({
                                next: r,
                                error: e,
                                complete: i
                            } = n), this && C.useDeprecatedNextContext ? (s = Object.create(n), s.unsubscribe = () => this.unsubscribe()) : s = n, r = null == r ? void 0 : r.bind(s), e = null == e ? void 0 : e.bind(s), i = null == i ? void 0 : i.bind(s)
                        }
                        this.destination = {
                            next: r ? K(r) : T,
                            error: K(null != e ? e : W),
                            complete: i ? K(i) : T
                        }
                    }
                }

                function K(t, n) {
                    return (...e) => {
                        try {
                            t(...e)
                        } catch (i) {
                            C.useDeprecatedSynchronousErrorHandling ? function E(t) {
                                C.useDeprecatedSynchronousErrorHandling && V && (V.errorThrown = !0, V.error = t)
                            }(i) : v(i)
                        }
                    }
                }

                function W(t) {
                    throw t
                }

                function de(t, n) {
                    const {
                        onStoppedNotification: e
                    } = C;
                    e && N.setTimeout(() => e(t, n))
                }
                const ae = {
                        closed: !0,
                        next: T,
                        error: W,
                        complete: T
                    },
                    fe = "function" == typeof Symbol && Symbol.observable || "@@observable";

                function ve(t) {
                    return t
                }
                let le = (() => {
                    class t {
                        constructor(e) {
                            e && (this._subscribe = e)
                        }
                        lift(e) {
                            const i = new t;
                            return i.source = this, i.operator = e, i
                        }
                        subscribe(e, i, r) {
                            const s = function Me(t) {
                                return t && t instanceof q || function ke(t) {
                                    return t && A(t.next) && A(t.error) && A(t.complete)
                                }(t) && U(t)
                            }(e) ? e : new G(e, i, r);
                            return x(() => {
                                const {
                                    operator: o,
                                    source: a
                                } = this;
                                s.add(o ? o.call(s, a) : a ? this._subscribe(s) : this._trySubscribe(s))
                            }), s
                        }
                        _trySubscribe(e) {
                            try {
                                return this._subscribe(e)
                            } catch (i) {
                                e.error(i)
                            }
                        }
                        forEach(e, i) {
                            return new(i = oe(i))((r, s) => {
                                const o = new G({
                                    next: a => {
                                        try {
                                            e(a)
                                        } catch (l) {
                                            s(l), o.unsubscribe()
                                        }
                                    },
                                    error: s,
                                    complete: r
                                });
                                this.subscribe(o)
                            })
                        }
                        _subscribe(e) {
                            var i;
                            return null === (i = this.source) || void 0 === i ? void 0 : i.subscribe(e)
                        } [fe]() {
                            return this
                        }
                        pipe(...e) {
                            return function ce(t) {
                                return 0 === t.length ? ve : 1 === t.length ? t[0] : function(e) {
                                    return t.reduce((i, r) => r(i), e)
                                }
                            }(e)(this)
                        }
                        toPromise(e) {
                            return new(e = oe(e))((i, r) => {
                                let s;
                                this.subscribe(o => s = o, o => r(o), () => i(s))
                            })
                        }
                    }
                    return t.create = n => new t(n), t
                })();

                function oe(t) {
                    var n;
                    return null !== (n = null != t ? t : C.Promise) && void 0 !== n ? n : Promise
                }
                const je = w(t => function() {
                    t(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed"
                });
                let Te = (() => {
                    class t extends le {
                        constructor() {
                            super(), this.closed = !1, this.observers = [], this.isStopped = !1, this.hasError = !1, this.thrownError = null
                        }
                        lift(e) {
                            const i = new J(this, this);
                            return i.operator = e, i
                        }
                        _throwIfClosed() {
                            if (this.closed) throw new je
                        }
                        next(e) {
                            x(() => {
                                if (this._throwIfClosed(), !this.isStopped) {
                                    const i = this.observers.slice();
                                    for (const r of i) r.next(e)
                                }
                            })
                        }
                        error(e) {
                            x(() => {
                                if (this._throwIfClosed(), !this.isStopped) {
                                    this.hasError = this.isStopped = !0, this.thrownError = e;
                                    const {
                                        observers: i
                                    } = this;
                                    for (; i.length;) i.shift().error(e)
                                }
                            })
                        }
                        complete() {
                            x(() => {
                                if (this._throwIfClosed(), !this.isStopped) {
                                    this.isStopped = !0;
                                    const {
                                        observers: e
                                    } = this;
                                    for (; e.length;) e.shift().complete()
                                }
                            })
                        }
                        unsubscribe() {
                            this.isStopped = this.closed = !0, this.observers = null
                        }
                        get observed() {
                            var e;
                            return (null === (e = this.observers) || void 0 === e ? void 0 : e.length) > 0
                        }
                        _trySubscribe(e) {
                            return this._throwIfClosed(), super._trySubscribe(e)
                        }
                        _subscribe(e) {
                            return this._throwIfClosed(), this._checkFinalizedStatuses(e), this._innerSubscribe(e)
                        }
                        _innerSubscribe(e) {
                            const {
                                hasError: i,
                                isStopped: r,
                                observers: s
                            } = this;
                            return i || r ? B : (s.push(e), new X(() => j(s, e)))
                        }
                        _checkFinalizedStatuses(e) {
                            const {
                                hasError: i,
                                thrownError: r,
                                isStopped: s
                            } = this;
                            i ? e.error(r) : s && e.complete()
                        }
                        asObservable() {
                            const e = new le;
                            return e.source = this, e
                        }
                    }
                    return t.create = (n, e) => new J(n, e), t
                })();
                class J extends Te {
                    constructor(n, e) {
                        super(), this.destination = n, this.source = e
                    }
                    next(n) {
                        var e, i;
                        null === (i = null === (e = this.destination) || void 0 === e ? void 0 : e.next) || void 0 === i || i.call(e, n)
                    }
                    error(n) {
                        var e, i;
                        null === (i = null === (e = this.destination) || void 0 === e ? void 0 : e.error) || void 0 === i || i.call(e, n)
                    }
                    complete() {
                        var n, e;
                        null === (e = null === (n = this.destination) || void 0 === n ? void 0 : n.complete) || void 0 === e || e.call(n)
                    }
                    _subscribe(n) {
                        var e, i;
                        return null !== (i = null === (e = this.source) || void 0 === e ? void 0 : e.subscribe(n)) && void 0 !== i ? i : B
                    }
                }

                function te(t) {
                    return n => {
                        if (function se(t) {
                                return A(null == t ? void 0 : t.lift)
                            }(n)) return n.lift(function(e) {
                            try {
                                return t(e, this)
                            } catch (i) {
                                this.error(i)
                            }
                        });
                        throw new TypeError("Unable to lift unknown Observable type")
                    }
                }
                class Z extends q {
                    constructor(n, e, i, r, s) {
                        super(n), this.onFinalize = s, this._next = e ? function(o) {
                            try {
                                e(o)
                            } catch (a) {
                                n.error(a)
                            }
                        } : super._next, this._error = r ? function(o) {
                            try {
                                r(o)
                            } catch (a) {
                                n.error(a)
                            } finally {
                                this.unsubscribe()
                            }
                        } : super._error, this._complete = i ? function() {
                            try {
                                i()
                            } catch (o) {
                                n.error(o)
                            } finally {
                                this.unsubscribe()
                            }
                        } : super._complete
                    }
                    unsubscribe() {
                        var n;
                        const {
                            closed: e
                        } = this;
                        super.unsubscribe(), !e && (null === (n = this.onFinalize) || void 0 === n || n.call(this))
                    }
                }

                function Ge(t, n) {
                    return te((e, i) => {
                        let r = 0;
                        e.subscribe(new Z(i, s => {
                            i.next(t.call(n, s, r++))
                        }))
                    })
                }

                function Ot(t) {
                    return this instanceof Ot ? (this.v = t, this) : new Ot(t)
                }

                function bi(t, n, e) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var r, i = e.apply(t, n || []),
                        s = [];
                    return r = {}, o("next"), o("throw"), o("return"), r[Symbol.asyncIterator] = function() {
                        return this
                    }, r;

                    function o(h) {
                        i[h] && (r[h] = function(m) {
                            return new Promise(function(M, I) {
                                s.push([h, m, M, I]) > 1 || a(h, m)
                            })
                        })
                    }

                    function a(h, m) {
                        try {
                            ! function l(h) {
                                h.value instanceof Ot ? Promise.resolve(h.value.v).then(c, u) : p(s[0][2], h)
                            }(i[h](m))
                        } catch (M) {
                            p(s[0][3], M)
                        }
                    }

                    function c(h) {
                        a("next", h)
                    }

                    function u(h) {
                        a("throw", h)
                    }

                    function p(h, m) {
                        h(m), s.shift(), s.length && a(s[0][0], s[0][1])
                    }
                }

                function Ta(t) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var e, n = t[Symbol.asyncIterator];
                    return n ? n.call(t) : (t = function vr(t) {
                        var n = "function" == typeof Symbol && Symbol.iterator,
                            e = n && t[n],
                            i = 0;
                        if (e) return e.call(t);
                        if (t && "number" == typeof t.length) return {
                            next: function() {
                                return t && i >= t.length && (t = void 0), {
                                    value: t && t[i++],
                                    done: !t
                                }
                            }
                        };
                        throw new TypeError(n ? "Object is not iterable." : "Symbol.iterator is not defined.")
                    }(t), e = {}, i("next"), i("throw"), i("return"), e[Symbol.asyncIterator] = function() {
                        return this
                    }, e);

                    function i(s) {
                        e[s] = t[s] && function(o) {
                            return new Promise(function(a, l) {
                                ! function r(s, o, a, l) {
                                    Promise.resolve(l).then(function(c) {
                                        s({
                                            value: c,
                                            done: a
                                        })
                                    }, o)
                                }(a, l, (o = t[s](o)).done, o.value)
                            })
                        }
                    }
                }
                const Bi = t => t && "number" == typeof t.length && "function" != typeof t;

                function Sa(t) {
                    return A(null == t ? void 0 : t.then)
                }

                function io(t) {
                    return A(t[fe])
                }

                function ro(t) {
                    return Symbol.asyncIterator && A(null == t ? void 0 : t[Symbol.asyncIterator])
                }

                function Ea(t) {
                    return new TypeError(`You provided ${null!==t&&"object"==typeof t?"an invalid object":`'${t}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)
                }
                const so = function Hc() {
                    return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator"
                }();

                function ka(t) {
                    return A(null == t ? void 0 : t[so])
                }

                function oo(t) {
                    return bi(this, arguments, function*() {
                        const e = t.getReader();
                        try {
                            for (;;) {
                                const {
                                    value: i,
                                    done: r
                                } = yield Ot(e.read());
                                if (r) return yield Ot(void 0);
                                yield yield Ot(i)
                            }
                        } finally {
                            e.releaseLock()
                        }
                    })
                }

                function Na(t) {
                    return A(null == t ? void 0 : t.getReader)
                }

                function Wt(t) {
                    if (t instanceof le) return t;
                    if (null != t) {
                        if (io(t)) return function jc(t) {
                            return new le(n => {
                                const e = t[fe]();
                                if (A(e.subscribe)) return e.subscribe(n);
                                throw new TypeError("Provided object does not correctly implement Symbol.observable")
                            })
                        }(t);
                        if (Bi(t)) return function Gc(t) {
                            return new le(n => {
                                for (let e = 0; e < t.length && !n.closed; e++) n.next(t[e]);
                                n.complete()
                            })
                        }(t);
                        if (Sa(t)) return function $c(t) {
                            return new le(n => {
                                t.then(e => {
                                    n.closed || (n.next(e), n.complete())
                                }, e => n.error(e)).then(null, v)
                            })
                        }(t);
                        if (ro(t)) return Ia(t);
                        if (ka(t)) return function Aa(t) {
                            return new le(n => {
                                for (const e of t)
                                    if (n.next(e), n.closed) return;
                                n.complete()
                            })
                        }(t);
                        if (Na(t)) return function qc(t) {
                            return Ia(oo(t))
                        }(t)
                    }
                    throw Ea(t)
                }

                function Ia(t) {
                    return new le(n => {
                        (function Oa(t, n) {
                            var e, i, r, s;
                            return function Cn(t, n, e, i) {
                                return new(e || (e = Promise))(function(s, o) {
                                    function a(u) {
                                        try {
                                            c(i.next(u))
                                        } catch (p) {
                                            o(p)
                                        }
                                    }

                                    function l(u) {
                                        try {
                                            c(i.throw(u))
                                        } catch (p) {
                                            o(p)
                                        }
                                    }

                                    function c(u) {
                                        u.done ? s(u.value) : function r(s) {
                                            return s instanceof e ? s : new e(function(o) {
                                                o(s)
                                            })
                                        }(u.value).then(a, l)
                                    }
                                    c((i = i.apply(t, n || [])).next())
                                })
                            }(this, void 0, void 0, function*() {
                                try {
                                    for (e = Ta(t); !(i = yield e.next()).done;)
                                        if (n.next(i.value), n.closed) return
                                } catch (o) {
                                    r = {
                                        error: o
                                    }
                                } finally {
                                    try {
                                        i && !i.done && (s = e.return) && (yield s.call(e))
                                    } finally {
                                        if (r) throw r.error
                                    }
                                }
                                n.complete()
                            })
                        })(t, n).catch(e => n.error(e))
                    })
                }

                function Zn(t, n, e, i = 0, r = !1) {
                    const s = n.schedule(function() {
                        e(), r ? t.add(this.schedule(null, i)) : this.unsubscribe()
                    }, i);
                    if (t.add(s), !r) return s
                }

                function Lt(t, n, e = 1 / 0) {
                    return A(n) ? Lt((i, r) => Ge((s, o) => n(i, s, r, o))(Wt(t(i, r))), e) : ("number" == typeof n && (e = n), te((i, r) => function Ra(t, n, e, i, r, s, o, a) {
                        const l = [];
                        let c = 0,
                            u = 0,
                            p = !1;
                        const h = () => {
                                p && !l.length && !c && n.complete()
                            },
                            m = I => c < i ? M(I) : l.push(I),
                            M = I => {
                                s && n.next(I), c++;
                                let H = !1;
                                Wt(e(I, u++)).subscribe(new Z(n, Y => {
                                    null == r || r(Y), s ? m(Y) : n.next(Y)
                                }, () => {
                                    H = !0
                                }, void 0, () => {
                                    if (H) try {
                                        for (c--; l.length && c < i;) {
                                            const Y = l.shift();
                                            o ? Zn(n, o, () => M(Y)) : M(Y)
                                        }
                                        h()
                                    } catch (Y) {
                                        n.error(Y)
                                    }
                                }))
                            };
                        return t.subscribe(new Z(n, m, () => {
                            p = !0, h()
                        })), () => {
                            null == a || a()
                        }
                    }(i, r, t, e)))
                }

                function Qn(t = 1 / 0) {
                    return Lt(ve, t)
                }
                const Ki = new le(t => t.complete());

                function qp(t) {
                    return t && A(t.schedule)
                }

                function Uc(t) {
                    return t[t.length - 1]
                }

                function Pa(t) {
                    return A(Uc(t)) ? t.pop() : void 0
                }

                function ao(t) {
                    return qp(Uc(t)) ? t.pop() : void 0
                }

                function Up(t, n = 0) {
                    return te((e, i) => {
                        e.subscribe(new Z(i, r => Zn(i, t, () => i.next(r), n), () => Zn(i, t, () => i.complete(), n), r => Zn(i, t, () => i.error(r), n)))
                    })
                }

                function zp(t, n = 0) {
                    return te((e, i) => {
                        i.add(t.schedule(() => e.subscribe(i), n))
                    })
                }

                function Wp(t, n) {
                    if (!t) throw new Error("Iterable cannot be null");
                    return new le(e => {
                        Zn(e, n, () => {
                            const i = t[Symbol.asyncIterator]();
                            Zn(e, n, () => {
                                i.next().then(r => {
                                    r.done ? e.complete() : e.next(r.value)
                                })
                            }, 0, !0)
                        })
                    })
                }

                function wr(t, n) {
                    return n ? function $b(t, n) {
                        if (null != t) {
                            if (io(t)) return function Lb(t, n) {
                                return Wt(t).pipe(zp(n), Up(n))
                            }(t, n);
                            if (Bi(t)) return function Hb(t, n) {
                                return new le(e => {
                                    let i = 0;
                                    return n.schedule(function() {
                                        i === t.length ? e.complete() : (e.next(t[i++]), e.closed || this.schedule())
                                    })
                                })
                            }(t, n);
                            if (Sa(t)) return function Vb(t, n) {
                                return Wt(t).pipe(zp(n), Up(n))
                            }(t, n);
                            if (ro(t)) return Wp(t, n);
                            if (ka(t)) return function jb(t, n) {
                                return new le(e => {
                                    let i;
                                    return Zn(e, n, () => {
                                        i = t[so](), Zn(e, n, () => {
                                            let r, s;
                                            try {
                                                ({
                                                    value: r,
                                                    done: s
                                                } = i.next())
                                            } catch (o) {
                                                return void e.error(o)
                                            }
                                            s ? e.complete() : e.next(r)
                                        }, 0, !0)
                                    }), () => A(null == i ? void 0 : i.return) && i.return()
                                })
                            }(t, n);
                            if (Na(t)) return function Gb(t, n) {
                                return Wp(oo(t), n)
                            }(t, n)
                        }
                        throw Ea(t)
                    }(t, n) : Wt(t)
                }

                function Yp(...t) {
                    const n = ao(t),
                        e = function Bb(t, n) {
                            return "number" == typeof Uc(t) ? t.pop() : n
                        }(t, 1 / 0),
                        i = t;
                    return i.length ? 1 === i.length ? Wt(i[0]) : Qn(e)(wr(i, n)) : Ki
                }

                function on(t) {
                    return t <= 0 ? () => Ki : te((n, e) => {
                        let i = 0;
                        n.subscribe(new Z(e, r => {
                            ++i <= t && (e.next(r), t <= i && e.complete())
                        }))
                    })
                }

                function Kp(t = {}) {
                    const {
                        connector: n = (() => new Te),
                        resetOnError: e = !0,
                        resetOnComplete: i = !0,
                        resetOnRefCountZero: r = !0
                    } = t;
                    return s => {
                        let o = null,
                            a = null,
                            l = null,
                            c = 0,
                            u = !1,
                            p = !1;
                        const h = () => {
                                null == a || a.unsubscribe(), a = null
                            },
                            m = () => {
                                h(), o = l = null, u = p = !1
                            },
                            M = () => {
                                const I = o;
                                m(), null == I || I.unsubscribe()
                            };
                        return te((I, H) => {
                            c++, !p && !u && h();
                            const Y = l = null != l ? l : n();
                            H.add(() => {
                                c--, 0 === c && !p && !u && (a = zc(M, r))
                            }), Y.subscribe(H), o || (o = new G({
                                next: P => Y.next(P),
                                error: P => {
                                    p = !0, h(), a = zc(m, e, P), Y.error(P)
                                },
                                complete: () => {
                                    u = !0, h(), a = zc(m, i), Y.complete()
                                }
                            }), wr(I).subscribe(o))
                        })(s)
                    }
                }

                function zc(t, n, ...e) {
                    return !0 === n ? (t(), null) : !1 === n ? null : n(...e).pipe(on(1)).subscribe(() => t())
                }

                function st(t) {
                    for (let n in t)
                        if (t[n] === st) return n;
                    throw Error("Could not find renamed property on target object.")
                }

                function nt(t) {
                    if ("string" == typeof t) return t;
                    if (Array.isArray(t)) return "[" + t.map(nt).join(", ") + "]";
                    if (null == t) return "" + t;
                    if (t.overriddenName) return `${t.overriddenName}`;
                    if (t.name) return `${t.name}`;
                    const n = t.toString();
                    if (null == n) return "" + n;
                    const e = n.indexOf("\n");
                    return -1 === e ? n : n.substring(0, e)
                }

                function Yc(t, n) {
                    return null == t || "" === t ? null === n ? "" : n : null == n || "" === n ? t : t + " " + n
                }
                const qb = st({
                    __forward_ref__: st
                });

                function Xe(t) {
                    return t.__forward_ref__ = Xe, t.toString = function() {
                        return nt(this())
                    }, t
                }

                function Be(t) {
                    return function Zp(t) {
                        return "function" == typeof t && t.hasOwnProperty(qb) && t.__forward_ref__ === Xe
                    }(t) ? t() : t
                }
                class Qe extends Error {
                    constructor(n, e) {
                        super(function Kc(t, n) {
                            return `NG0${Math.abs(t)}${n?": "+n:""}`
                        }(n, e)), this.code = n
                    }
                }

                function Oe(t) {
                    return "string" == typeof t ? t : null == t ? "" : String(t)
                }

                function an(t) {
                    return "function" == typeof t ? t.name || t.toString() : "object" == typeof t && null != t && "function" == typeof t.type ? t.type.name || t.type.toString() : Oe(t)
                }

                function Fa(t, n) {
                    const e = n ? ` in ${n}` : "";
                    throw new Qe(-201, `No provider for ${an(t)} found${e}`)
                }

                function Tn(t, n) {
                    null == t && function pt(t, n, e, i) {
                        throw new Error(`ASSERTION ERROR: ${t}` + (null == i ? "" : ` [Expected=> ${e} ${i} ${n} <=Actual]`))
                    }(n, t, null, "!=")
                }

                function $e(t) {
                    return {
                        token: t.token,
                        providedIn: t.providedIn || null,
                        factory: t.factory,
                        value: void 0
                    }
                }

                function ct(t) {
                    return {
                        providers: t.providers || [],
                        imports: t.imports || []
                    }
                }

                function Zc(t) {
                    return Qp(t, Ba) || Qp(t, Xp)
                }

                function Qp(t, n) {
                    return t.hasOwnProperty(n) ? t[n] : null
                }

                function Jp(t) {
                    return t && (t.hasOwnProperty(Qc) || t.hasOwnProperty(Qb)) ? t[Qc] : null
                }
                const Ba = st({
                        \u0275prov: st
                    }),
                    Qc = st({
                        \u0275inj: st
                    }),
                    Xp = st({
                        ngInjectableDef: st
                    }),
                    Qb = st({
                        ngInjectorDef: st
                    });
                var Le = (() => ((Le = Le || {})[Le.Default = 0] = "Default", Le[Le.Host = 1] = "Host", Le[Le.Self = 2] = "Self", Le[Le.SkipSelf = 4] = "SkipSelf", Le[Le.Optional = 8] = "Optional", Le))();
                let Jc;

                function Zi(t) {
                    const n = Jc;
                    return Jc = t, n
                }

                function eh(t, n, e) {
                    const i = Zc(t);
                    return i && "root" == i.providedIn ? void 0 === i.value ? i.value = i.factory() : i.value : e & Le.Optional ? null : void 0 !== n ? n : void Fa(nt(t), "Injector")
                }

                function Qi(t) {
                    return {
                        toString: t
                    }.toString()
                }
                var Jn = (() => ((Jn = Jn || {})[Jn.OnPush = 0] = "OnPush", Jn[Jn.Default = 1] = "Default", Jn))(),
                    Di = (() => {
                        return (t = Di || (Di = {}))[t.Emulated = 0] = "Emulated", t[t.None = 2] = "None", t[t.ShadowDom = 3] = "ShadowDom", Di;
                        var t
                    })();
                const Xb = "undefined" != typeof globalThis && globalThis,
                    eD = "undefined" != typeof window && window,
                    tD = "undefined" != typeof self && "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && self,
                    rt = Xb || "undefined" != typeof global && global || eD || tD,
                    Kr = {},
                    ot = [],
                    La = st({
                        \u0275cmp: st
                    }),
                    Xc = st({
                        \u0275dir: st
                    }),
                    eu = st({
                        \u0275pipe: st
                    }),
                    th = st({
                        \u0275mod: st
                    }),
                    Vi = st({
                        \u0275fac: st
                    }),
                    lo = st({
                        __NG_ELEMENT_ID__: st
                    });
                let nD = 0;

                function Xn(t) {
                    return Qi(() => {
                        const e = {},
                            i = {
                                type: t.type,
                                providersResolver: null,
                                decls: t.decls,
                                vars: t.vars,
                                factory: null,
                                template: t.template || null,
                                consts: t.consts || null,
                                ngContentSelectors: t.ngContentSelectors,
                                hostBindings: t.hostBindings || null,
                                hostVars: t.hostVars || 0,
                                hostAttrs: t.hostAttrs || null,
                                contentQueries: t.contentQueries || null,
                                declaredInputs: e,
                                inputs: null,
                                outputs: null,
                                exportAs: t.exportAs || null,
                                onPush: t.changeDetection === Jn.OnPush,
                                directiveDefs: null,
                                pipeDefs: null,
                                selectors: t.selectors || ot,
                                viewQuery: t.viewQuery || null,
                                features: t.features || null,
                                data: t.data || {},
                                encapsulation: t.encapsulation || Di.Emulated,
                                id: "c",
                                styles: t.styles || ot,
                                _: null,
                                setInput: null,
                                schemas: t.schemas || null,
                                tView: null
                            },
                            r = t.directives,
                            s = t.features,
                            o = t.pipes;
                        return i.id += nD++, i.inputs = sh(t.inputs, e), i.outputs = sh(t.outputs), s && s.forEach(a => a(i)), i.directiveDefs = r ? () => ("function" == typeof r ? r() : r).map(nh) : null, i.pipeDefs = o ? () => ("function" == typeof o ? o() : o).map(ih) : null, i
                    })
                }

                function nh(t) {
                    return Qt(t) || function Ji(t) {
                        return t[Xc] || null
                    }(t)
                }

                function ih(t) {
                    return function Cr(t) {
                        return t[eu] || null
                    }(t)
                }
                const rh = {};

                function ht(t) {
                    return Qi(() => {
                        const n = {
                            type: t.type,
                            bootstrap: t.bootstrap || ot,
                            declarations: t.declarations || ot,
                            imports: t.imports || ot,
                            exports: t.exports || ot,
                            transitiveCompileScopes: null,
                            schemas: t.schemas || null,
                            id: t.id || null
                        };
                        return null != t.id && (rh[t.id] = t.type), n
                    })
                }

                function sh(t, n) {
                    if (null == t) return Kr;
                    const e = {};
                    for (const i in t)
                        if (t.hasOwnProperty(i)) {
                            let r = t[i],
                                s = r;
                            Array.isArray(r) && (s = r[1], r = r[0]), e[r] = i, n && (n[r] = s)
                        } return e
                }
                const ye = Xn;

                function ln(t) {
                    return {
                        type: t.type,
                        name: t.name,
                        factory: null,
                        pure: !1 !== t.pure,
                        onDestroy: t.type.prototype.ngOnDestroy || null
                    }
                }

                function Qt(t) {
                    return t[La] || null
                }

                function Ln(t, n) {
                    const e = t[th] || null;
                    if (!e && !0 === n) throw new Error(`Type ${nt(t)} does not have '\u0275mod' property.`);
                    return e
                }

                function xi(t) {
                    return Array.isArray(t) && "object" == typeof t[1]
                }

                function ti(t) {
                    return Array.isArray(t) && !0 === t[1]
                }

                function iu(t) {
                    return 0 != (8 & t.flags)
                }

                function Ga(t) {
                    return 2 == (2 & t.flags)
                }

                function $a(t) {
                    return 1 == (1 & t.flags)
                }

                function ni(t) {
                    return null !== t.template
                }

                function lD(t) {
                    return 0 != (512 & t[2])
                }

                function Er(t, n) {
                    return t.hasOwnProperty(Vi) ? t[Vi] : null
                }
                class dD {
                    constructor(n, e, i) {
                        this.previousValue = n, this.currentValue = e, this.firstChange = i
                    }
                    isFirstChange() {
                        return this.firstChange
                    }
                }

                function xn() {
                    return ah
                }

                function ah(t) {
                    return t.type.prototype.ngOnChanges && (t.setInput = pD), fD
                }

                function fD() {
                    const t = ch(this),
                        n = null == t ? void 0 : t.current;
                    if (n) {
                        const e = t.previous;
                        if (e === Kr) t.previous = n;
                        else
                            for (let i in n) e[i] = n[i];
                        t.current = null, this.ngOnChanges(n)
                    }
                }

                function pD(t, n, e, i) {
                    const r = ch(t) || function hD(t, n) {
                            return t[lh] = n
                        }(t, {
                            previous: Kr,
                            current: null
                        }),
                        s = r.current || (r.current = {}),
                        o = r.previous,
                        a = this.declaredInputs[e],
                        l = o[a];
                    s[a] = new dD(l && l.currentValue, n, o === Kr), t[i] = n
                }
                xn.ngInherit = !0;
                const lh = "__ngSimpleChanges__";

                function ch(t) {
                    return t[lh] || null
                }
                let lu;

                function cu() {
                    return void 0 !== lu ? lu : "undefined" != typeof document ? document : void 0
                }

                function Ct(t) {
                    return !!t.listen
                }
                const uh = {
                    createRenderer: (t, n) => cu()
                };

                function Rt(t) {
                    for (; Array.isArray(t);) t = t[0];
                    return t
                }

                function qa(t, n) {
                    return Rt(n[t])
                }

                function jn(t, n) {
                    return Rt(n[t.index])
                }

                function uu(t, n) {
                    return t.data[n]
                }

                function es(t, n) {
                    return t[n]
                }

                function En(t, n) {
                    const e = n[t];
                    return xi(e) ? e : e[0]
                }

                function dh(t) {
                    return 4 == (4 & t[2])
                }

                function du(t) {
                    return 128 == (128 & t[2])
                }

                function Xi(t, n) {
                    return null == n ? null : t[n]
                }

                function fh(t) {
                    t[18] = 0
                }

                function fu(t, n) {
                    t[5] += n;
                    let e = t,
                        i = t[3];
                    for (; null !== i && (1 === n && 1 === e[5] || -1 === n && 0 === e[5]);) i[5] += n, e = i, i = i[3]
                }
                const Ie = {
                    lFrame: bh(null),
                    bindingsEnabled: !0,
                    isInCheckNoChangesMode: !1
                };

                function ph() {
                    return Ie.bindingsEnabled
                }

                function ne() {
                    return Ie.lFrame.lView
                }

                function Je() {
                    return Ie.lFrame.tView
                }

                function pe(t) {
                    return Ie.lFrame.contextLView = t, t[8]
                }

                function Vt() {
                    let t = hh();
                    for (; null !== t && 64 === t.type;) t = t.parent;
                    return t
                }

                function hh() {
                    return Ie.lFrame.currentTNode
                }

                function wi(t, n) {
                    const e = Ie.lFrame;
                    e.currentTNode = t, e.isParent = n
                }

                function pu() {
                    return Ie.lFrame.isParent
                }

                function hu() {
                    Ie.lFrame.isParent = !1
                }

                function Ua() {
                    return Ie.isInCheckNoChangesMode
                }

                function za(t) {
                    Ie.isInCheckNoChangesMode = t
                }

                function cn() {
                    const t = Ie.lFrame;
                    let n = t.bindingRootIndex;
                    return -1 === n && (n = t.bindingRootIndex = t.tView.bindingStartIndex), n
                }

                function Hi() {
                    return Ie.lFrame.bindingIndex
                }

                function ts() {
                    return Ie.lFrame.bindingIndex++
                }

                function ji(t) {
                    const n = Ie.lFrame,
                        e = n.bindingIndex;
                    return n.bindingIndex = n.bindingIndex + t, e
                }

                function AD(t, n) {
                    const e = Ie.lFrame;
                    e.bindingIndex = e.bindingRootIndex = t, gu(n)
                }

                function gu(t) {
                    Ie.lFrame.currentDirectiveIndex = t
                }

                function _h() {
                    return Ie.lFrame.currentQueryIndex
                }

                function _u(t) {
                    Ie.lFrame.currentQueryIndex = t
                }

                function OD(t) {
                    const n = t[1];
                    return 2 === n.type ? n.declTNode : 1 === n.type ? t[6] : null
                }

                function vh(t, n, e) {
                    if (e & Le.SkipSelf) {
                        let r = n,
                            s = t;
                        for (; !(r = r.parent, null !== r || e & Le.Host || (r = OD(s), null === r || (s = s[15], 10 & r.type))););
                        if (null === r) return !1;
                        n = r, t = s
                    }
                    const i = Ie.lFrame = yh();
                    return i.currentTNode = n, i.lView = t, !0
                }

                function Wa(t) {
                    const n = yh(),
                        e = t[1];
                    Ie.lFrame = n, n.currentTNode = e.firstChild, n.lView = t, n.tView = e, n.contextLView = t, n.bindingIndex = e.bindingStartIndex, n.inI18n = !1
                }

                function yh() {
                    const t = Ie.lFrame,
                        n = null === t ? null : t.child;
                    return null === n ? bh(t) : n
                }

                function bh(t) {
                    const n = {
                        currentTNode: null,
                        isParent: !0,
                        lView: null,
                        tView: null,
                        selectedIndex: -1,
                        contextLView: null,
                        elementDepthCount: 0,
                        currentNamespace: null,
                        currentDirectiveIndex: -1,
                        bindingRootIndex: -1,
                        bindingIndex: -1,
                        currentQueryIndex: 0,
                        parent: t,
                        child: null,
                        inI18n: !1
                    };
                    return null !== t && (t.child = n), n
                }

                function Dh() {
                    const t = Ie.lFrame;
                    return Ie.lFrame = t.parent, t.currentTNode = null, t.lView = null, t
                }
                const xh = Dh;

                function Ya() {
                    const t = Dh();
                    t.isParent = !0, t.tView = null, t.selectedIndex = -1, t.contextLView = null, t.elementDepthCount = 0, t.currentDirectiveIndex = -1, t.currentNamespace = null, t.bindingRootIndex = -1, t.bindingIndex = -1, t.currentQueryIndex = 0
                }

                function un() {
                    return Ie.lFrame.selectedIndex
                }

                function er(t) {
                    Ie.lFrame.selectedIndex = t
                }

                function Mt() {
                    const t = Ie.lFrame;
                    return uu(t.tView, t.selectedIndex)
                }

                function Ka(t, n) {
                    for (let e = n.directiveStart, i = n.directiveEnd; e < i; e++) {
                        const s = t.data[e].type.prototype,
                            {
                                ngAfterContentInit: o,
                                ngAfterContentChecked: a,
                                ngAfterViewInit: l,
                                ngAfterViewChecked: c,
                                ngOnDestroy: u
                            } = s;
                        o && (t.contentHooks || (t.contentHooks = [])).push(-e, o), a && ((t.contentHooks || (t.contentHooks = [])).push(e, a), (t.contentCheckHooks || (t.contentCheckHooks = [])).push(e, a)), l && (t.viewHooks || (t.viewHooks = [])).push(-e, l), c && ((t.viewHooks || (t.viewHooks = [])).push(e, c), (t.viewCheckHooks || (t.viewCheckHooks = [])).push(e, c)), null != u && (t.destroyHooks || (t.destroyHooks = [])).push(e, u)
                    }
                }

                function Za(t, n, e) {
                    wh(t, n, 3, e)
                }

                function Qa(t, n, e, i) {
                    (3 & t[2]) === e && wh(t, n, e, i)
                }

                function vu(t, n) {
                    let e = t[2];
                    (3 & e) === n && (e &= 2047, e += 1, t[2] = e)
                }

                function wh(t, n, e, i) {
                    const s = null != i ? i : -1,
                        o = n.length - 1;
                    let a = 0;
                    for (let l = void 0 !== i ? 65535 & t[18] : 0; l < o; l++)
                        if ("number" == typeof n[l + 1]) {
                            if (a = n[l], null != i && a >= i) break
                        } else n[l] < 0 && (t[18] += 65536), (a < s || -1 == s) && (GD(t, e, n, l), t[18] = (4294901760 & t[18]) + l + 2), l++
                }

                function GD(t, n, e, i) {
                    const r = e[i] < 0,
                        s = e[i + 1],
                        a = t[r ? -e[i] : e[i]];
                    if (r) {
                        if (t[2] >> 11 < t[18] >> 16 && (3 & t[2]) === n) {
                            t[2] += 2048;
                            try {
                                s.call(a)
                            } finally {}
                        }
                    } else try {
                        s.call(a)
                    } finally {}
                }
                class ho {
                    constructor(n, e, i) {
                        this.factory = n, this.resolving = !1, this.canSeeViewProviders = e, this.injectImpl = i
                    }
                }

                function Ja(t, n, e) {
                    const i = Ct(t);
                    let r = 0;
                    for (; r < e.length;) {
                        const s = e[r];
                        if ("number" == typeof s) {
                            if (0 !== s) break;
                            r++;
                            const o = e[r++],
                                a = e[r++],
                                l = e[r++];
                            i ? t.setAttribute(n, a, l, o) : n.setAttributeNS(o, a, l)
                        } else {
                            const o = s,
                                a = e[++r];
                            bu(o) ? i && t.setProperty(n, o, a) : i ? t.setAttribute(n, o, a) : n.setAttribute(o, a), r++
                        }
                    }
                    return r
                }

                function Ch(t) {
                    return 3 === t || 4 === t || 6 === t
                }

                function bu(t) {
                    return 64 === t.charCodeAt(0)
                }

                function Xa(t, n) {
                    if (null !== n && 0 !== n.length)
                        if (null === t || 0 === t.length) t = n.slice();
                        else {
                            let e = -1;
                            for (let i = 0; i < n.length; i++) {
                                const r = n[i];
                                "number" == typeof r ? e = r : 0 === e || Mh(t, e, r, null, -1 === e || 2 === e ? n[++i] : null)
                            }
                        } return t
                }

                function Mh(t, n, e, i, r) {
                    let s = 0,
                        o = t.length;
                    if (-1 === n) o = -1;
                    else
                        for (; s < t.length;) {
                            const a = t[s++];
                            if ("number" == typeof a) {
                                if (a === n) {
                                    o = -1;
                                    break
                                }
                                if (a > n) {
                                    o = s - 1;
                                    break
                                }
                            }
                        }
                    for (; s < t.length;) {
                        const a = t[s];
                        if ("number" == typeof a) break;
                        if (a === e) {
                            if (null === i) return void(null !== r && (t[s + 1] = r));
                            if (i === t[s + 1]) return void(t[s + 2] = r)
                        }
                        s++, null !== i && s++, null !== r && s++
                    } - 1 !== o && (t.splice(o, 0, n), s = o + 1), t.splice(s++, 0, e), null !== i && t.splice(s++, 0, i), null !== r && t.splice(s++, 0, r)
                }

                function Th(t) {
                    return -1 !== t
                }

                function ns(t) {
                    return 32767 & t
                }

                function is(t, n) {
                    let e = function WD(t) {
                            return t >> 16
                        }(t),
                        i = n;
                    for (; e > 0;) i = i[15], e--;
                    return i
                }
                let Du = !0;

                function el(t) {
                    const n = Du;
                    return Du = t, n
                }
                let YD = 0;

                function mo(t, n) {
                    const e = wu(t, n);
                    if (-1 !== e) return e;
                    const i = n[1];
                    i.firstCreatePass && (t.injectorIndex = n.length, xu(i.data, t), xu(n, null), xu(i.blueprint, null));
                    const r = tl(t, n),
                        s = t.injectorIndex;
                    if (Th(r)) {
                        const o = ns(r),
                            a = is(r, n),
                            l = a[1].data;
                        for (let c = 0; c < 8; c++) n[s + c] = a[o + c] | l[o + c]
                    }
                    return n[s + 8] = r, s
                }

                function xu(t, n) {
                    t.push(0, 0, 0, 0, 0, 0, 0, 0, n)
                }

                function wu(t, n) {
                    return -1 === t.injectorIndex || t.parent && t.parent.injectorIndex === t.injectorIndex || null === n[t.injectorIndex + 8] ? -1 : t.injectorIndex
                }

                function tl(t, n) {
                    if (t.parent && -1 !== t.parent.injectorIndex) return t.parent.injectorIndex;
                    let e = 0,
                        i = null,
                        r = n;
                    for (; null !== r;) {
                        const s = r[1],
                            o = s.type;
                        if (i = 2 === o ? s.declTNode : 1 === o ? r[6] : null, null === i) return -1;
                        if (e++, r = r[15], -1 !== i.injectorIndex) return i.injectorIndex | e << 16
                    }
                    return -1
                }

                function nl(t, n, e) {
                    ! function KD(t, n, e) {
                        let i;
                        "string" == typeof e ? i = e.charCodeAt(0) || 0 : e.hasOwnProperty(lo) && (i = e[lo]), null == i && (i = e[lo] = YD++);
                        const r = 255 & i;
                        n.data[t + (r >> 5)] |= 1 << r
                    }(t, n, e)
                }

                function kh(t, n, e) {
                    if (e & Le.Optional) return t;
                    Fa(n, "NodeInjector")
                }

                function Nh(t, n, e, i) {
                    if (e & Le.Optional && void 0 === i && (i = null), 0 == (e & (Le.Self | Le.Host))) {
                        const r = t[9],
                            s = Zi(void 0);
                        try {
                            return r ? r.get(n, i, e & Le.Optional) : eh(n, i, e & Le.Optional)
                        } finally {
                            Zi(s)
                        }
                    }
                    return kh(i, n, e)
                }

                function Ah(t, n, e, i = Le.Default, r) {
                    if (null !== t) {
                        const s = function XD(t) {
                            if ("string" == typeof t) return t.charCodeAt(0) || 0;
                            const n = t.hasOwnProperty(lo) ? t[lo] : void 0;
                            return "number" == typeof n ? n >= 0 ? 255 & n : QD : n
                        }(e);
                        if ("function" == typeof s) {
                            if (!vh(n, t, i)) return i & Le.Host ? kh(r, e, i) : Nh(n, e, i, r);
                            try {
                                const o = s(i);
                                if (null != o || i & Le.Optional) return o;
                                Fa(e)
                            } finally {
                                xh()
                            }
                        } else if ("number" == typeof s) {
                            let o = null,
                                a = wu(t, n),
                                l = -1,
                                c = i & Le.Host ? n[16][6] : null;
                            for ((-1 === a || i & Le.SkipSelf) && (l = -1 === a ? tl(t, n) : n[a + 8], -1 !== l && Rh(i, !1) ? (o = n[1], a = ns(l), n = is(l, n)) : a = -1); - 1 !== a;) {
                                const u = n[1];
                                if (Oh(s, a, u.data)) {
                                    const p = JD(a, n, e, o, i, c);
                                    if (p !== Ih) return p
                                }
                                l = n[a + 8], -1 !== l && Rh(i, n[1].data[a + 8] === c) && Oh(s, a, n) ? (o = u, a = ns(l), n = is(l, n)) : a = -1
                            }
                        }
                    }
                    return Nh(n, e, i, r)
                }
                const Ih = {};

                function QD() {
                    return new rs(Vt(), ne())
                }

                function JD(t, n, e, i, r, s) {
                    const o = n[1],
                        a = o.data[t + 8],
                        u = il(a, o, e, null == i ? Ga(a) && Du : i != o && 0 != (3 & a.type), r & Le.Host && s === a);
                    return null !== u ? _o(n, o, u, a) : Ih
                }

                function il(t, n, e, i, r) {
                    const s = t.providerIndexes,
                        o = n.data,
                        a = 1048575 & s,
                        l = t.directiveStart,
                        u = s >> 20,
                        h = r ? a + u : t.directiveEnd;
                    for (let m = i ? a : a + u; m < h; m++) {
                        const M = o[m];
                        if (m < l && e === M || m >= l && M.type === e) return m
                    }
                    if (r) {
                        const m = o[l];
                        if (m && ni(m) && m.type === e) return l
                    }
                    return null
                }

                function _o(t, n, e, i) {
                    let r = t[e];
                    const s = n.data;
                    if (function $D(t) {
                            return t instanceof ho
                        }(r)) {
                        const o = r;
                        o.resolving && function Ub(t, n) {
                            const e = n ? `. Dependency path: ${n.join(" > ")} > ${t}` : "";
                            throw new Qe(-200, `Circular dependency in DI detected for ${t}${e}`)
                        }(an(s[e]));
                        const a = el(o.canSeeViewProviders);
                        o.resolving = !0;
                        const l = o.injectImpl ? Zi(o.injectImpl) : null;
                        vh(t, i, Le.Default);
                        try {
                            r = t[e] = o.factory(void 0, s, t, i), n.firstCreatePass && e >= i.directiveStart && function jD(t, n, e) {
                                const {
                                    ngOnChanges: i,
                                    ngOnInit: r,
                                    ngDoCheck: s
                                } = n.type.prototype;
                                if (i) {
                                    const o = ah(n);
                                    (e.preOrderHooks || (e.preOrderHooks = [])).push(t, o), (e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(t, o)
                                }
                                r && (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - t, r), s && ((e.preOrderHooks || (e.preOrderHooks = [])).push(t, s), (e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(t, s))
                            }(e, s[e], n)
                        } finally {
                            null !== l && Zi(l), el(a), o.resolving = !1, xh()
                        }
                    }
                    return r
                }

                function Oh(t, n, e) {
                    return !!(e[n + (t >> 5)] & 1 << t)
                }

                function Rh(t, n) {
                    return !(t & Le.Self || t & Le.Host && n)
                }
                class rs {
                    constructor(n, e) {
                        this._tNode = n, this._lView = e
                    }
                    get(n, e, i) {
                        return Ah(this._tNode, this._lView, n, i, e)
                    }
                }

                function vo(t) {
                    return function ZD(t, n) {
                        if ("class" === n) return t.classes;
                        if ("style" === n) return t.styles;
                        const e = t.attrs;
                        if (e) {
                            const i = e.length;
                            let r = 0;
                            for (; r < i;) {
                                const s = e[r];
                                if (Ch(s)) break;
                                if (0 === s) r += 2;
                                else if ("number" == typeof s)
                                    for (r++; r < i && "string" == typeof e[r];) r++;
                                else {
                                    if (s === n) return e[r + 1];
                                    r += 2
                                }
                            }
                        }
                        return null
                    }(Vt(), t)
                }
                const os = "__parameters__";

                function ls(t, n, e) {
                    return Qi(() => {
                        const i = function Mu(t) {
                            return function(...e) {
                                if (t) {
                                    const i = t(...e);
                                    for (const r in i) this[r] = i[r]
                                }
                            }
                        }(n);

                        function r(...s) {
                            if (this instanceof r) return i.apply(this, s), this;
                            const o = new r(...s);
                            return a.annotation = o, a;

                            function a(l, c, u) {
                                const p = l.hasOwnProperty(os) ? l[os] : Object.defineProperty(l, os, {
                                    value: []
                                })[os];
                                for (; p.length <= u;) p.push(null);
                                return (p[u] = p[u] || []).push(o), l
                            }
                        }
                        return e && (r.prototype = Object.create(e.prototype)), r.prototype.ngMetadataName = t, r.annotationCls = r, r
                    })
                }
                class Ze {
                    constructor(n, e) {
                        this._desc = n, this.ngMetadataName = "InjectionToken", this.\u0275prov = void 0, "number" == typeof e ? this.__NG_ELEMENT_ID__ = e : void 0 !== e && (this.\u0275prov = $e({
                            token: this,
                            providedIn: e.providedIn || "root",
                            factory: e.factory
                        }))
                    }
                    toString() {
                        return `InjectionToken ${this._desc}`
                    }
                }

                function Gn(t, n) {
                    void 0 === n && (n = t);
                    for (let e = 0; e < t.length; e++) {
                        let i = t[e];
                        Array.isArray(i) ? (n === t && (n = t.slice(0, e)), Gn(i, n)) : n !== t && n.push(i)
                    }
                    return n
                }

                function Ci(t, n) {
                    t.forEach(e => Array.isArray(e) ? Ci(e, n) : n(e))
                }

                function Fh(t, n, e) {
                    n >= t.length ? t.push(e) : t.splice(n, 0, e)
                }

                function rl(t, n) {
                    return n >= t.length - 1 ? t.pop() : t.splice(n, 1)[0]
                }

                function Do(t, n) {
                    const e = [];
                    for (let i = 0; i < t; i++) e.push(n);
                    return e
                }

                function kn(t, n, e) {
                    let i = cs(t, n);
                    return i >= 0 ? t[1 | i] = e : (i = ~i, function ix(t, n, e, i) {
                        let r = t.length;
                        if (r == n) t.push(e, i);
                        else if (1 === r) t.push(i, t[0]), t[0] = e;
                        else {
                            for (r--, t.push(t[r - 1], t[r]); r > n;) t[r] = t[r - 2], r--;
                            t[n] = e, t[n + 1] = i
                        }
                    }(t, i, n, e)), i
                }

                function Su(t, n) {
                    const e = cs(t, n);
                    if (e >= 0) return t[1 | e]
                }

                function cs(t, n) {
                    return function Vh(t, n, e) {
                        let i = 0,
                            r = t.length >> e;
                        for (; r !== i;) {
                            const s = i + (r - i >> 1),
                                o = t[s << e];
                            if (n === o) return s << e;
                            o > n ? r = s : i = s + 1
                        }
                        return ~(r << e)
                    }(t, n, 1)
                }
                const xo = {},
                    ku = "__NG_DI_FLAG__",
                    ol = "ngTempTokenPath",
                    ux = /\n/gm,
                    jh = "__source",
                    fx = st({
                        provide: String,
                        useValue: st
                    });
                let wo;

                function Gh(t) {
                    const n = wo;
                    return wo = t, n
                }

                function px(t, n = Le.Default) {
                    if (void 0 === wo) throw new Qe(203, "");
                    return null === wo ? eh(t, void 0, n) : wo.get(t, n & Le.Optional ? null : void 0, n)
                }

                function Ce(t, n = Le.Default) {
                    return (function Jb() {
                        return Jc
                    }() || px)(Be(t), n)
                }

                function Nu(t) {
                    const n = [];
                    for (let e = 0; e < t.length; e++) {
                        const i = Be(t[e]);
                        if (Array.isArray(i)) {
                            if (0 === i.length) throw new Qe(900, "");
                            let r, s = Le.Default;
                            for (let o = 0; o < i.length; o++) {
                                const a = i[o],
                                    l = hx(a);
                                "number" == typeof l ? -1 === l ? r = a.token : s |= l : r = a
                            }
                            n.push(Ce(r, s))
                        } else n.push(Ce(i))
                    }
                    return n
                }

                function Co(t, n) {
                    return t[ku] = n, t.prototype[ku] = n, t
                }

                function hx(t) {
                    return t[ku]
                }
                const al = Co(ls("Inject", t => ({
                        token: t
                    })), -1),
                    us = Co(ls("Optional"), 8),
                    Mo = Co(ls("SkipSelf"), 4);
                let cl, ul;

                function fs(t) {
                    var n;
                    return (null === (n = function Iu() {
                        if (void 0 === cl && (cl = null, rt.trustedTypes)) try {
                            cl = rt.trustedTypes.createPolicy("angular", {
                                createHTML: t => t,
                                createScript: t => t,
                                createScriptURL: t => t
                            })
                        } catch (t) {}
                        return cl
                    }()) || void 0 === n ? void 0 : n.createHTML(t)) || t
                }

                function Yh(t) {
                    var n;
                    return (null === (n = function Ou() {
                        if (void 0 === ul && (ul = null, rt.trustedTypes)) try {
                            ul = rt.trustedTypes.createPolicy("angular#unsafe-bypass", {
                                createHTML: t => t,
                                createScript: t => t,
                                createScriptURL: t => t
                            })
                        } catch (t) {}
                        return ul
                    }()) || void 0 === n ? void 0 : n.createHTML(t)) || t
                }
                class Qh {
                    constructor(n) {
                        this.changingThisBreaksApplicationSecurity = n
                    }
                    toString() {
                        return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`
                    }
                }

                function nr(t) {
                    return t instanceof Qh ? t.changingThisBreaksApplicationSecurity : t
                }

                function So(t, n) {
                    const e = function Ix(t) {
                        return t instanceof Qh && t.getTypeName() || null
                    }(t);
                    if (null != e && e !== n) {
                        if ("ResourceURL" === e && "URL" === n) return !0;
                        throw new Error(`Required a safe ${n}, got a ${e} (see https://g.co/ng/security#xss)`)
                    }
                    return e === n
                }
                class Ox {
                    constructor(n) {
                        this.inertDocumentHelper = n
                    }
                    getInertBodyElement(n) {
                        n = "<body><remove></remove>" + n;
                        try {
                            const e = (new window.DOMParser).parseFromString(fs(n), "text/html").body;
                            return null === e ? this.inertDocumentHelper.getInertBodyElement(n) : (e.removeChild(e.firstChild), e)
                        } catch (e) {
                            return null
                        }
                    }
                }
                class Rx {
                    constructor(n) {
                        if (this.defaultDoc = n, this.inertDocument = this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"), null == this.inertDocument.body) {
                            const e = this.inertDocument.createElement("html");
                            this.inertDocument.appendChild(e);
                            const i = this.inertDocument.createElement("body");
                            e.appendChild(i)
                        }
                    }
                    getInertBodyElement(n) {
                        const e = this.inertDocument.createElement("template");
                        if ("content" in e) return e.innerHTML = fs(n), e;
                        const i = this.inertDocument.createElement("body");
                        return i.innerHTML = fs(n), this.defaultDoc.documentMode && this.stripCustomNsAttrs(i), i
                    }
                    stripCustomNsAttrs(n) {
                        const e = n.attributes;
                        for (let r = e.length - 1; 0 < r; r--) {
                            const o = e.item(r).name;
                            ("xmlns:ns1" === o || 0 === o.indexOf("ns1:")) && n.removeAttribute(o)
                        }
                        let i = n.firstChild;
                        for (; i;) i.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(i), i = i.nextSibling
                    }
                }
                const Fx = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
                    Bx = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;

                function dl(t) {
                    return (t = String(t)).match(Fx) || t.match(Bx) ? t : "unsafe:" + t
                }

                function Mi(t) {
                    const n = {};
                    for (const e of t.split(",")) n[e] = !0;
                    return n
                }

                function Eo(...t) {
                    const n = {};
                    for (const e of t)
                        for (const i in e) e.hasOwnProperty(i) && (n[i] = !0);
                    return n
                }
                const e0 = Mi("area,br,col,hr,img,wbr"),
                    t0 = Mi("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
                    n0 = Mi("rp,rt"),
                    Ru = Eo(e0, Eo(t0, Mi("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")), Eo(n0, Mi("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")), Eo(n0, t0)),
                    Pu = Mi("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
                    Fu = Mi("srcset"),
                    r0 = Eo(Pu, Fu, Mi("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"), Mi("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),
                    Lx = Mi("script,style,template");
                class Vx {
                    constructor() {
                        this.sanitizedSomething = !1, this.buf = []
                    }
                    sanitizeChildren(n) {
                        let e = n.firstChild,
                            i = !0;
                        for (; e;)
                            if (e.nodeType === Node.ELEMENT_NODE ? i = this.startElement(e) : e.nodeType === Node.TEXT_NODE ? this.chars(e.nodeValue) : this.sanitizedSomething = !0, i && e.firstChild) e = e.firstChild;
                            else
                                for (; e;) {
                                    e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                                    let r = this.checkClobberedElement(e, e.nextSibling);
                                    if (r) {
                                        e = r;
                                        break
                                    }
                                    e = this.checkClobberedElement(e, e.parentNode)
                                }
                        return this.buf.join("")
                    }
                    startElement(n) {
                        const e = n.nodeName.toLowerCase();
                        if (!Ru.hasOwnProperty(e)) return this.sanitizedSomething = !0, !Lx.hasOwnProperty(e);
                        this.buf.push("<"), this.buf.push(e);
                        const i = n.attributes;
                        for (let r = 0; r < i.length; r++) {
                            const s = i.item(r),
                                o = s.name,
                                a = o.toLowerCase();
                            if (!r0.hasOwnProperty(a)) {
                                this.sanitizedSomething = !0;
                                continue
                            }
                            let l = s.value;
                            Pu[a] && (l = dl(l)), Fu[a] && (t = l, l = (t = String(t)).split(",").map(n => dl(n.trim())).join(", ")), this.buf.push(" ", o, '="', s0(l), '"')
                        }
                        var t;
                        return this.buf.push(">"), !0
                    }
                    endElement(n) {
                        const e = n.nodeName.toLowerCase();
                        Ru.hasOwnProperty(e) && !e0.hasOwnProperty(e) && (this.buf.push("</"), this.buf.push(e), this.buf.push(">"))
                    }
                    chars(n) {
                        this.buf.push(s0(n))
                    }
                    checkClobberedElement(n, e) {
                        if (e && (n.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) throw new Error(`Failed to sanitize html because the element is clobbered: ${n.outerHTML}`);
                        return e
                    }
                }
                const Hx = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                    jx = /([^\#-~ |!])/g;

                function s0(t) {
                    return t.replace(/&/g, "&amp;").replace(Hx, function(n) {
                        return "&#" + (1024 * (n.charCodeAt(0) - 55296) + (n.charCodeAt(1) - 56320) + 65536) + ";"
                    }).replace(jx, function(n) {
                        return "&#" + n.charCodeAt(0) + ";"
                    }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
                }
                let fl;

                function Bu(t) {
                    return "content" in t && function $x(t) {
                        return t.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === t.nodeName
                    }(t) ? t.content : null
                }
                var Pt = (() => ((Pt = Pt || {})[Pt.NONE = 0] = "NONE", Pt[Pt.HTML = 1] = "HTML", Pt[Pt.STYLE = 2] = "STYLE", Pt[Pt.SCRIPT = 3] = "SCRIPT", Pt[Pt.URL = 4] = "URL", Pt[Pt.RESOURCE_URL = 5] = "RESOURCE_URL", Pt))();

                function fn(t) {
                    const n = ko();
                    return n ? Yh(n.sanitize(Pt.HTML, t) || "") : So(t, "HTML") ? Yh(nr(t)) : function Gx(t, n) {
                        let e = null;
                        try {
                            fl = fl || function Jh(t) {
                                const n = new Rx(t);
                                return function Px() {
                                    try {
                                        return !!(new window.DOMParser).parseFromString(fs(""), "text/html")
                                    } catch (t) {
                                        return !1
                                    }
                                }() ? new Ox(n) : n
                            }(t);
                            let i = n ? String(n) : "";
                            e = fl.getInertBodyElement(i);
                            let r = 5,
                                s = i;
                            do {
                                if (0 === r) throw new Error("Failed to sanitize html because the input is unstable");
                                r--, i = s, s = e.innerHTML, e = fl.getInertBodyElement(i)
                            } while (i !== s);
                            return fs((new Vx).sanitizeChildren(Bu(e) || e))
                        } finally {
                            if (e) {
                                const i = Bu(e) || e;
                                for (; i.firstChild;) i.removeChild(i.firstChild)
                            }
                        }
                    }(cu(), Oe(t))
                }

                function Ti(t) {
                    const n = ko();
                    return n ? n.sanitize(Pt.URL, t) || "" : So(t, "URL") ? nr(t) : dl(Oe(t))
                }

                function ko() {
                    const t = ne();
                    return t && t[12]
                }
                const l0 = "__ngContext__";

                function Xt(t, n) {
                    t[l0] = n
                }

                function Vu(t) {
                    const n = function No(t) {
                        return t[l0] || null
                    }(t);
                    return n ? Array.isArray(n) ? n : n.lView : null
                }

                function ju(t) {
                    return t.ngOriginalError
                }

                function sw(t, ...n) {
                    t.error(...n)
                }
                class ps {
                    constructor() {
                        this._console = console
                    }
                    handleError(n) {
                        const e = this._findOriginalError(n),
                            i = function rw(t) {
                                return t && t.ngErrorLogger || sw
                            }(n);
                        i(this._console, "ERROR", n), e && i(this._console, "ORIGINAL ERROR", e)
                    }
                    _findOriginalError(n) {
                        let e = n && ju(n);
                        for (; e && ju(e);) e = ju(e);
                        return e || null
                    }
                }
                const p0 = (() => ("undefined" != typeof requestAnimationFrame && requestAnimationFrame || setTimeout).bind(rt))();

                function Gu(t) {
                    return t.ownerDocument
                }

                function Si(t) {
                    return t instanceof Function ? t() : t
                }
                var Nn = (() => ((Nn = Nn || {})[Nn.Important = 1] = "Important", Nn[Nn.DashCase = 2] = "DashCase", Nn))();

                function qu(t, n) {
                    return undefined(t, n)
                }

                function Ao(t) {
                    const n = t[3];
                    return ti(n) ? n[3] : n
                }

                function Uu(t) {
                    return v0(t[13])
                }

                function zu(t) {
                    return v0(t[4])
                }

                function v0(t) {
                    for (; null !== t && !ti(t);) t = t[4];
                    return t
                }

                function gs(t, n, e, i, r) {
                    if (null != i) {
                        let s, o = !1;
                        ti(i) ? s = i : xi(i) && (o = !0, i = i[0]);
                        const a = Rt(i);
                        0 === t && null !== e ? null == r ? C0(n, e, a) : kr(n, e, a, r || null, !0) : 1 === t && null !== e ? kr(n, e, a, r || null, !0) : 2 === t ? function A0(t, n, e) {
                            const i = pl(t, n);
                            i && function Sw(t, n, e, i) {
                                Ct(t) ? t.removeChild(n, e, i) : n.removeChild(e)
                            }(t, i, n, e)
                        }(n, a, o) : 3 === t && n.destroyNode(a), null != s && function Nw(t, n, e, i, r) {
                            const s = e[7];
                            s !== Rt(e) && gs(n, t, i, s, r);
                            for (let a = 10; a < e.length; a++) {
                                const l = e[a];
                                Io(l[1], l, t, n, i, s)
                            }
                        }(n, t, s, e, r)
                    }
                }

                function Yu(t, n, e) {
                    if (Ct(t)) return t.createElement(n, e);
                    {
                        const i = null !== e ? function vD(t) {
                            const n = t.toLowerCase();
                            return "svg" === n ? "http://www.w3.org/2000/svg" : "math" === n ? "http://www.w3.org/1998/MathML/" : null
                        }(e) : null;
                        return null === i ? t.createElement(n) : t.createElementNS(i, n)
                    }
                }

                function b0(t, n) {
                    const e = t[9],
                        i = e.indexOf(n),
                        r = n[3];
                    1024 & n[2] && (n[2] &= -1025, fu(r, -1)), e.splice(i, 1)
                }

                function Ku(t, n) {
                    if (t.length <= 10) return;
                    const e = 10 + n,
                        i = t[e];
                    if (i) {
                        const r = i[17];
                        null !== r && r !== t && b0(r, i), n > 0 && (t[e - 1][4] = i[4]);
                        const s = rl(t, 10 + n);
                        ! function yw(t, n) {
                            Io(t, n, n[11], 2, null, null), n[0] = null, n[6] = null
                        }(i[1], i);
                        const o = s[19];
                        null !== o && o.detachView(s[1]), i[3] = null, i[4] = null, i[2] &= -129
                    }
                    return i
                }

                function D0(t, n) {
                    if (!(256 & n[2])) {
                        const e = n[11];
                        Ct(e) && e.destroyNode && Io(t, n, e, 3, null, null),
                            function xw(t) {
                                let n = t[13];
                                if (!n) return Zu(t[1], t);
                                for (; n;) {
                                    let e = null;
                                    if (xi(n)) e = n[13];
                                    else {
                                        const i = n[10];
                                        i && (e = i)
                                    }
                                    if (!e) {
                                        for (; n && !n[4] && n !== t;) xi(n) && Zu(n[1], n), n = n[3];
                                        null === n && (n = t), xi(n) && Zu(n[1], n), e = n && n[4]
                                    }
                                    n = e
                                }
                            }(n)
                    }
                }

                function Zu(t, n) {
                    if (!(256 & n[2])) {
                        n[2] &= -129, n[2] |= 256,
                            function Tw(t, n) {
                                let e;
                                if (null != t && null != (e = t.destroyHooks))
                                    for (let i = 0; i < e.length; i += 2) {
                                        const r = n[e[i]];
                                        if (!(r instanceof ho)) {
                                            const s = e[i + 1];
                                            if (Array.isArray(s))
                                                for (let o = 0; o < s.length; o += 2) {
                                                    const a = r[s[o]],
                                                        l = s[o + 1];
                                                    try {
                                                        l.call(a)
                                                    } finally {}
                                                } else try {
                                                    s.call(r)
                                                } finally {}
                                        }
                                    }
                            }(t, n),
                            function Mw(t, n) {
                                const e = t.cleanup,
                                    i = n[7];
                                let r = -1;
                                if (null !== e)
                                    for (let s = 0; s < e.length - 1; s += 2)
                                        if ("string" == typeof e[s]) {
                                            const o = e[s + 1],
                                                a = "function" == typeof o ? o(n) : Rt(n[o]),
                                                l = i[r = e[s + 2]],
                                                c = e[s + 3];
                                            "boolean" == typeof c ? a.removeEventListener(e[s], l, c) : c >= 0 ? i[r = c]() : i[r = -c].unsubscribe(), s += 2
                                        } else {
                                            const o = i[r = e[s + 1]];
                                            e[s].call(o)
                                        } if (null !== i) {
                                    for (let s = r + 1; s < i.length; s++) i[s]();
                                    n[7] = null
                                }
                            }(t, n), 1 === n[1].type && Ct(n[11]) && n[11].destroy();
                        const e = n[17];
                        if (null !== e && ti(n[3])) {
                            e !== n[3] && b0(e, n);
                            const i = n[19];
                            null !== i && i.detachView(t)
                        }
                    }
                }

                function x0(t, n, e) {
                    return function w0(t, n, e) {
                        let i = n;
                        for (; null !== i && 40 & i.type;) i = (n = i).parent;
                        if (null === i) return e[0];
                        if (2 & i.flags) {
                            const r = t.data[i.directiveStart].encapsulation;
                            if (r === Di.None || r === Di.Emulated) return null
                        }
                        return jn(i, e)
                    }(t, n.parent, e)
                }

                function kr(t, n, e, i, r) {
                    Ct(t) ? t.insertBefore(n, e, i, r) : n.insertBefore(e, i, r)
                }

                function C0(t, n, e) {
                    Ct(t) ? t.appendChild(n, e) : n.appendChild(e)
                }

                function M0(t, n, e, i, r) {
                    null !== i ? kr(t, n, e, i, r) : C0(t, n, e)
                }

                function pl(t, n) {
                    return Ct(t) ? t.parentNode(n) : n.parentNode
                }

                function T0(t, n, e) {
                    return E0(t, n, e)
                }
                let E0 = function S0(t, n, e) {
                    return 40 & t.type ? jn(t, e) : null
                };

                function hl(t, n, e, i) {
                    const r = x0(t, i, n),
                        s = n[11],
                        a = T0(i.parent || n[6], i, n);
                    if (null != r)
                        if (Array.isArray(e))
                            for (let l = 0; l < e.length; l++) M0(s, r, e[l], a, !1);
                        else M0(s, r, e, a, !1)
                }

                function gl(t, n) {
                    if (null !== n) {
                        const e = n.type;
                        if (3 & e) return jn(n, t);
                        if (4 & e) return Ju(-1, t[n.index]);
                        if (8 & e) {
                            const i = n.child;
                            if (null !== i) return gl(t, i);
                            {
                                const r = t[n.index];
                                return ti(r) ? Ju(-1, r) : Rt(r)
                            }
                        }
                        if (32 & e) return qu(n, t)() || Rt(t[n.index]);
                        {
                            const i = N0(t, n);
                            return null !== i ? Array.isArray(i) ? i[0] : gl(Ao(t[16]), i) : gl(t, n.next)
                        }
                    }
                    return null
                }

                function N0(t, n) {
                    return null !== n ? t[16][6].projection[n.projection] : null
                }

                function Ju(t, n) {
                    const e = 10 + t + 1;
                    if (e < n.length) {
                        const i = n[e],
                            r = i[1].firstChild;
                        if (null !== r) return gl(i, r)
                    }
                    return n[7]
                }

                function Xu(t, n, e, i, r, s, o) {
                    for (; null != e;) {
                        const a = i[e.index],
                            l = e.type;
                        if (o && 0 === n && (a && Xt(Rt(a), i), e.flags |= 4), 64 != (64 & e.flags))
                            if (8 & l) Xu(t, n, e.child, i, r, s, !1), gs(n, t, r, a, s);
                            else if (32 & l) {
                            const c = qu(e, i);
                            let u;
                            for (; u = c();) gs(n, t, r, u, s);
                            gs(n, t, r, a, s)
                        } else 16 & l ? I0(t, n, i, e, r, s) : gs(n, t, r, a, s);
                        e = o ? e.projectionNext : e.next
                    }
                }

                function Io(t, n, e, i, r, s) {
                    Xu(e, i, t.firstChild, n, r, s, !1)
                }

                function I0(t, n, e, i, r, s) {
                    const o = e[16],
                        l = o[6].projection[i.projection];
                    if (Array.isArray(l))
                        for (let c = 0; c < l.length; c++) gs(n, t, r, l[c], s);
                    else Xu(t, n, l, o[3], r, s, !0)
                }

                function O0(t, n, e) {
                    Ct(t) ? t.setAttribute(n, "style", e) : n.style.cssText = e
                }

                function ed(t, n, e) {
                    Ct(t) ? "" === e ? t.removeAttribute(n, "class") : t.setAttribute(n, "class", e) : n.className = e
                }

                function R0(t, n, e) {
                    let i = t.length;
                    for (;;) {
                        const r = t.indexOf(n, e);
                        if (-1 === r) return r;
                        if (0 === r || t.charCodeAt(r - 1) <= 32) {
                            const s = n.length;
                            if (r + s === i || t.charCodeAt(r + s) <= 32) return r
                        }
                        e = r + 1
                    }
                }
                const P0 = "ng-template";

                function Iw(t, n, e) {
                    let i = 0;
                    for (; i < t.length;) {
                        let r = t[i++];
                        if (e && "class" === r) {
                            if (r = t[i], -1 !== R0(r.toLowerCase(), n, 0)) return !0
                        } else if (1 === r) {
                            for (; i < t.length && "string" == typeof(r = t[i++]);)
                                if (r.toLowerCase() === n) return !0;
                            return !1
                        }
                    }
                    return !1
                }

                function F0(t) {
                    return 4 === t.type && t.value !== P0
                }

                function Ow(t, n, e) {
                    return n === (4 !== t.type || e ? t.value : P0)
                }

                function Rw(t, n, e) {
                    let i = 4;
                    const r = t.attrs || [],
                        s = function Bw(t) {
                            for (let n = 0; n < t.length; n++)
                                if (Ch(t[n])) return n;
                            return t.length
                        }(r);
                    let o = !1;
                    for (let a = 0; a < n.length; a++) {
                        const l = n[a];
                        if ("number" != typeof l) {
                            if (!o)
                                if (4 & i) {
                                    if (i = 2 | 1 & i, "" !== l && !Ow(t, l, e) || "" === l && 1 === n.length) {
                                        if (ii(i)) return !1;
                                        o = !0
                                    }
                                } else {
                                    const c = 8 & i ? l : n[++a];
                                    if (8 & i && null !== t.attrs) {
                                        if (!Iw(t.attrs, c, e)) {
                                            if (ii(i)) return !1;
                                            o = !0
                                        }
                                        continue
                                    }
                                    const p = Pw(8 & i ? "class" : l, r, F0(t), e);
                                    if (-1 === p) {
                                        if (ii(i)) return !1;
                                        o = !0;
                                        continue
                                    }
                                    if ("" !== c) {
                                        let h;
                                        h = p > s ? "" : r[p + 1].toLowerCase();
                                        const m = 8 & i ? h : null;
                                        if (m && -1 !== R0(m, c, 0) || 2 & i && c !== h) {
                                            if (ii(i)) return !1;
                                            o = !0
                                        }
                                    }
                                }
                        } else {
                            if (!o && !ii(i) && !ii(l)) return !1;
                            if (o && ii(l)) continue;
                            o = !1, i = l | 1 & i
                        }
                    }
                    return ii(i) || o
                }

                function ii(t) {
                    return 0 == (1 & t)
                }

                function Pw(t, n, e, i) {
                    if (null === n) return -1;
                    let r = 0;
                    if (i || !e) {
                        let s = !1;
                        for (; r < n.length;) {
                            const o = n[r];
                            if (o === t) return r;
                            if (3 === o || 6 === o) s = !0;
                            else {
                                if (1 === o || 2 === o) {
                                    let a = n[++r];
                                    for (;
                                        "string" == typeof a;) a = n[++r];
                                    continue
                                }
                                if (4 === o) break;
                                if (0 === o) {
                                    r += 4;
                                    continue
                                }
                            }
                            r += s ? 1 : 2
                        }
                        return -1
                    }
                    return function Lw(t, n) {
                        let e = t.indexOf(4);
                        if (e > -1)
                            for (e++; e < t.length;) {
                                const i = t[e];
                                if ("number" == typeof i) return -1;
                                if (i === n) return e;
                                e++
                            }
                        return -1
                    }(n, t)
                }

                function B0(t, n, e = !1) {
                    for (let i = 0; i < n.length; i++)
                        if (Rw(t, n[i], e)) return !0;
                    return !1
                }

                function Vw(t, n) {
                    e: for (let e = 0; e < n.length; e++) {
                        const i = n[e];
                        if (t.length === i.length) {
                            for (let r = 0; r < t.length; r++)
                                if (t[r] !== i[r]) continue e;
                            return !0
                        }
                    }
                    return !1
                }

                function L0(t, n) {
                    return t ? ":not(" + n.trim() + ")" : n
                }

                function Hw(t) {
                    let n = t[0],
                        e = 1,
                        i = 2,
                        r = "",
                        s = !1;
                    for (; e < t.length;) {
                        let o = t[e];
                        if ("string" == typeof o)
                            if (2 & i) {
                                const a = t[++e];
                                r += "[" + o + (a.length > 0 ? '="' + a + '"' : "") + "]"
                            } else 8 & i ? r += "." + o : 4 & i && (r += " " + o);
                        else "" !== r && !ii(o) && (n += L0(s, r), r = ""), i = o, s = s || !ii(i);
                        e++
                    }
                    return "" !== r && (n += L0(s, r)), n
                }
                const Re = {};

                function g(t) {
                    V0(Je(), ne(), un() + t, Ua())
                }

                function V0(t, n, e, i) {
                    if (!i)
                        if (3 == (3 & n[2])) {
                            const s = t.preOrderCheckHooks;
                            null !== s && Za(n, s, e)
                        } else {
                            const s = t.preOrderHooks;
                            null !== s && Qa(n, s, 0, e)
                        } er(e)
                }

                function ml(t, n) {
                    return t << 17 | n << 2
                }

                function ri(t) {
                    return t >> 17 & 32767
                }

                function td(t) {
                    return 2 | t
                }

                function Gi(t) {
                    return (131068 & t) >> 2
                }

                function nd(t, n) {
                    return -131069 & t | n << 2
                }

                function id(t) {
                    return 1 | t
                }

                function Z0(t, n) {
                    const e = t.contentQueries;
                    if (null !== e)
                        for (let i = 0; i < e.length; i += 2) {
                            const r = e[i],
                                s = e[i + 1];
                            if (-1 !== s) {
                                const o = t.data[s];
                                _u(r), o.contentQueries(2, n[s], s)
                            }
                        }
                }

                function Oo(t, n, e, i, r, s, o, a, l, c) {
                    const u = n.blueprint.slice();
                    return u[0] = r, u[2] = 140 | i, fh(u), u[3] = u[15] = t, u[8] = e, u[10] = o || t && t[10], u[11] = a || t && t[11], u[12] = l || t && t[12] || null, u[9] = c || t && t[9] || null, u[6] = s, u[16] = 2 == n.type ? t[16] : u, u
                }

                function ms(t, n, e, i, r) {
                    let s = t.data[n];
                    if (null === s) s = function fd(t, n, e, i, r) {
                            const s = hh(),
                                o = pu(),
                                l = t.data[n] = function s2(t, n, e, i, r, s) {
                                    return {
                                        type: e,
                                        index: i,
                                        insertBeforeIndex: null,
                                        injectorIndex: n ? n.injectorIndex : -1,
                                        directiveStart: -1,
                                        directiveEnd: -1,
                                        directiveStylingLast: -1,
                                        propertyBindings: null,
                                        flags: 0,
                                        providerIndexes: 0,
                                        value: r,
                                        attrs: s,
                                        mergedAttrs: null,
                                        localNames: null,
                                        initialInputs: void 0,
                                        inputs: null,
                                        outputs: null,
                                        tViews: null,
                                        next: null,
                                        projectionNext: null,
                                        child: null,
                                        parent: n,
                                        projection: null,
                                        styles: null,
                                        stylesWithoutHost: null,
                                        residualStyles: void 0,
                                        classes: null,
                                        classesWithoutHost: null,
                                        residualClasses: void 0,
                                        classBindings: 0,
                                        styleBindings: 0
                                    }
                                }(0, o ? s : s && s.parent, e, n, i, r);
                            return null === t.firstChild && (t.firstChild = l), null !== s && (o ? null == s.child && null !== l.parent && (s.child = l) : null === s.next && (s.next = l)), l
                        }(t, n, e, i, r),
                        function ND() {
                            return Ie.lFrame.inI18n
                        }() && (s.flags |= 64);
                    else if (64 & s.type) {
                        s.type = e, s.value = i, s.attrs = r;
                        const o = function po() {
                            const t = Ie.lFrame,
                                n = t.currentTNode;
                            return t.isParent ? n : n.parent
                        }();
                        s.injectorIndex = null === o ? -1 : o.injectorIndex
                    }
                    return wi(s, !0), s
                }

                function _s(t, n, e, i) {
                    if (0 === e) return -1;
                    const r = n.length;
                    for (let s = 0; s < e; s++) n.push(i), t.blueprint.push(i), t.data.push(null);
                    return r
                }

                function Ro(t, n, e) {
                    Wa(n);
                    try {
                        const i = t.viewQuery;
                        null !== i && Dd(1, i, e);
                        const r = t.template;
                        null !== r && Q0(t, n, r, 1, e), t.firstCreatePass && (t.firstCreatePass = !1), t.staticContentQueries && Z0(t, n), t.staticViewQueries && Dd(2, t.viewQuery, e);
                        const s = t.components;
                        null !== s && function t2(t, n) {
                            for (let e = 0; e < n.length; e++) w2(t, n[e])
                        }(n, s)
                    } catch (i) {
                        throw t.firstCreatePass && (t.incompleteFirstPass = !0, t.firstCreatePass = !1), i
                    } finally {
                        n[2] &= -5, Ya()
                    }
                }

                function vs(t, n, e, i) {
                    const r = n[2];
                    if (256 == (256 & r)) return;
                    Wa(n);
                    const s = Ua();
                    try {
                        fh(n),
                            function gh(t) {
                                return Ie.lFrame.bindingIndex = t
                            }(t.bindingStartIndex), null !== e && Q0(t, n, e, 2, i);
                        const o = 3 == (3 & r);
                        if (!s)
                            if (o) {
                                const c = t.preOrderCheckHooks;
                                null !== c && Za(n, c, null)
                            } else {
                                const c = t.preOrderHooks;
                                null !== c && Qa(n, c, 0, null), vu(n, 0)
                            } if (function D2(t) {
                                for (let n = Uu(t); null !== n; n = zu(n)) {
                                    if (!n[2]) continue;
                                    const e = n[9];
                                    for (let i = 0; i < e.length; i++) {
                                        const r = e[i],
                                            s = r[3];
                                        0 == (1024 & r[2]) && fu(s, 1), r[2] |= 1024
                                    }
                                }
                            }(n), function b2(t) {
                                for (let n = Uu(t); null !== n; n = zu(n))
                                    for (let e = 10; e < n.length; e++) {
                                        const i = n[e],
                                            r = i[1];
                                        du(i) && vs(r, i, r.template, i[8])
                                    }
                            }(n), null !== t.contentQueries && Z0(t, n), !s)
                            if (o) {
                                const c = t.contentCheckHooks;
                                null !== c && Za(n, c)
                            } else {
                                const c = t.contentHooks;
                                null !== c && Qa(n, c, 1), vu(n, 1)
                            }!
                        function Xw(t, n) {
                            const e = t.hostBindingOpCodes;
                            if (null !== e) try {
                                for (let i = 0; i < e.length; i++) {
                                    const r = e[i];
                                    if (r < 0) er(~r);
                                    else {
                                        const s = r,
                                            o = e[++i],
                                            a = e[++i];
                                        AD(o, s), a(2, n[s])
                                    }
                                }
                            } finally {
                                er(-1)
                            }
                        }(t, n);
                        const a = t.components;
                        null !== a && function e2(t, n) {
                            for (let e = 0; e < n.length; e++) x2(t, n[e])
                        }(n, a);
                        const l = t.viewQuery;
                        if (null !== l && Dd(2, l, i), !s)
                            if (o) {
                                const c = t.viewCheckHooks;
                                null !== c && Za(n, c)
                            } else {
                                const c = t.viewHooks;
                                null !== c && Qa(n, c, 2), vu(n, 2)
                            }! 0 === t.firstUpdatePass && (t.firstUpdatePass = !1), s || (n[2] &= -73), 1024 & n[2] && (n[2] &= -1025, fu(n[3], -1))
                    } finally {
                        Ya()
                    }
                }

                function n2(t, n, e, i) {
                    const r = n[10],
                        s = !Ua(),
                        o = dh(n);
                    try {
                        s && !o && r.begin && r.begin(), o && Ro(t, n, i), vs(t, n, e, i)
                    } finally {
                        s && !o && r.end && r.end()
                    }
                }

                function Q0(t, n, e, i, r) {
                    const s = un(),
                        o = 2 & i;
                    try {
                        er(-1), o && n.length > 20 && V0(t, n, 20, Ua()), e(i, r)
                    } finally {
                        er(s)
                    }
                }

                function J0(t, n, e) {
                    if (iu(n)) {
                        const r = n.directiveEnd;
                        for (let s = n.directiveStart; s < r; s++) {
                            const o = t.data[s];
                            o.contentQueries && o.contentQueries(1, e[s], s)
                        }
                    }
                }

                function pd(t, n, e) {
                    !ph() || (function f2(t, n, e, i) {
                        const r = e.directiveStart,
                            s = e.directiveEnd;
                        t.firstCreatePass || mo(e, n), Xt(i, n);
                        const o = e.initialInputs;
                        for (let a = r; a < s; a++) {
                            const l = t.data[a],
                                c = ni(l);
                            c && _2(n, e, l);
                            const u = _o(n, t, a, e);
                            Xt(u, n), null !== o && v2(0, a - r, u, l, 0, o), c && (En(e.index, n)[8] = u)
                        }
                    }(t, n, e, jn(e, n)), 128 == (128 & e.flags) && function p2(t, n, e) {
                        const i = e.directiveStart,
                            r = e.directiveEnd,
                            o = e.index,
                            a = function ID() {
                                return Ie.lFrame.currentDirectiveIndex
                            }();
                        try {
                            er(o);
                            for (let l = i; l < r; l++) {
                                const c = t.data[l],
                                    u = n[l];
                                gu(l), (null !== c.hostBindings || 0 !== c.hostVars || null !== c.hostAttrs) && og(c, u)
                            }
                        } finally {
                            er(-1), gu(a)
                        }
                    }(t, n, e))
                }

                function hd(t, n, e = jn) {
                    const i = n.localNames;
                    if (null !== i) {
                        let r = n.index + 1;
                        for (let s = 0; s < i.length; s += 2) {
                            const o = i[s + 1],
                                a = -1 === o ? e(n, t) : t[o];
                            t[r++] = a
                        }
                    }
                }

                function X0(t) {
                    const n = t.tView;
                    return null === n || n.incompleteFirstPass ? t.tView = yl(1, null, t.template, t.decls, t.vars, t.directiveDefs, t.pipeDefs, t.viewQuery, t.schemas, t.consts) : n
                }

                function yl(t, n, e, i, r, s, o, a, l, c) {
                    const u = 20 + i,
                        p = u + r,
                        h = function r2(t, n) {
                            const e = [];
                            for (let i = 0; i < n; i++) e.push(i < t ? null : Re);
                            return e
                        }(u, p),
                        m = "function" == typeof c ? c() : c;
                    return h[1] = {
                        type: t,
                        blueprint: h,
                        template: e,
                        queries: null,
                        viewQuery: a,
                        declTNode: n,
                        data: h.slice().fill(null, u),
                        bindingStartIndex: u,
                        expandoStartIndex: p,
                        hostBindingOpCodes: null,
                        firstCreatePass: !0,
                        firstUpdatePass: !0,
                        staticViewQueries: !1,
                        staticContentQueries: !1,
                        preOrderHooks: null,
                        preOrderCheckHooks: null,
                        contentHooks: null,
                        contentCheckHooks: null,
                        viewHooks: null,
                        viewCheckHooks: null,
                        destroyHooks: null,
                        cleanup: null,
                        contentQueries: null,
                        components: null,
                        directiveRegistry: "function" == typeof s ? s() : s,
                        pipeRegistry: "function" == typeof o ? o() : o,
                        firstChild: null,
                        schemas: l,
                        consts: m,
                        incompleteFirstPass: !1
                    }
                }

                function ng(t, n, e, i) {
                    const r = fg(n);
                    null === e ? r.push(i) : (r.push(e), t.firstCreatePass && pg(t).push(i, r.length - 1))
                }

                function ig(t, n, e) {
                    for (let i in t)
                        if (t.hasOwnProperty(i)) {
                            const r = t[i];
                            (e = null === e ? {} : e).hasOwnProperty(i) ? e[i].push(n, r) : e[i] = [n, r]
                        } return e
                }

                function An(t, n, e, i, r, s, o, a) {
                    const l = jn(n, e);
                    let u, c = n.inputs;
                    !a && null != c && (u = c[i]) ? (mg(t, e, u, i, r), Ga(n) && function l2(t, n) {
                        const e = En(n, t);
                        16 & e[2] || (e[2] |= 64)
                    }(e, n.index)) : 3 & n.type && (i = function a2(t) {
                        return "class" === t ? "className" : "for" === t ? "htmlFor" : "formaction" === t ? "formAction" : "innerHtml" === t ? "innerHTML" : "readonly" === t ? "readOnly" : "tabindex" === t ? "tabIndex" : t
                    }(i), r = null != o ? o(r, n.value || "", i) : r, Ct(s) ? s.setProperty(l, i, r) : bu(i) || (l.setProperty ? l.setProperty(i, r) : l[i] = r))
                }

                function gd(t, n, e, i) {
                    let r = !1;
                    if (ph()) {
                        const s = function h2(t, n, e) {
                                const i = t.directiveRegistry;
                                let r = null;
                                if (i)
                                    for (let s = 0; s < i.length; s++) {
                                        const o = i[s];
                                        B0(e, o.selectors, !1) && (r || (r = []), nl(mo(e, n), t, o.type), ni(o) ? (ag(t, e), r.unshift(o)) : r.push(o))
                                    }
                                return r
                            }(t, n, e),
                            o = null === i ? null : {
                                "": -1
                            };
                        if (null !== s) {
                            r = !0, lg(e, t.data.length, s.length);
                            for (let u = 0; u < s.length; u++) {
                                const p = s[u];
                                p.providersResolver && p.providersResolver(p)
                            }
                            let a = !1,
                                l = !1,
                                c = _s(t, n, s.length, null);
                            for (let u = 0; u < s.length; u++) {
                                const p = s[u];
                                e.mergedAttrs = Xa(e.mergedAttrs, p.hostAttrs), cg(t, e, n, c, p), m2(c, p, o), null !== p.contentQueries && (e.flags |= 8), (null !== p.hostBindings || null !== p.hostAttrs || 0 !== p.hostVars) && (e.flags |= 128);
                                const h = p.type.prototype;
                                !a && (h.ngOnChanges || h.ngOnInit || h.ngDoCheck) && ((t.preOrderHooks || (t.preOrderHooks = [])).push(e.index), a = !0), !l && (h.ngOnChanges || h.ngDoCheck) && ((t.preOrderCheckHooks || (t.preOrderCheckHooks = [])).push(e.index), l = !0), c++
                            }! function o2(t, n) {
                                const i = n.directiveEnd,
                                    r = t.data,
                                    s = n.attrs,
                                    o = [];
                                let a = null,
                                    l = null;
                                for (let c = n.directiveStart; c < i; c++) {
                                    const u = r[c],
                                        p = u.inputs,
                                        h = null === s || F0(n) ? null : y2(p, s);
                                    o.push(h), a = ig(p, c, a), l = ig(u.outputs, c, l)
                                }
                                null !== a && (a.hasOwnProperty("class") && (n.flags |= 16), a.hasOwnProperty("style") && (n.flags |= 32)), n.initialInputs = o, n.inputs = a, n.outputs = l
                            }(t, e)
                        }
                        o && function g2(t, n, e) {
                            if (n) {
                                const i = t.localNames = [];
                                for (let r = 0; r < n.length; r += 2) {
                                    const s = e[n[r + 1]];
                                    if (null == s) throw new Qe(-301, !1);
                                    i.push(n[r], s)
                                }
                            }
                        }(e, i, o)
                    }
                    return e.mergedAttrs = Xa(e.mergedAttrs, e.attrs), r
                }

                function sg(t, n, e, i, r, s) {
                    const o = s.hostBindings;
                    if (o) {
                        let a = t.hostBindingOpCodes;
                        null === a && (a = t.hostBindingOpCodes = []);
                        const l = ~n.index;
                        (function d2(t) {
                            let n = t.length;
                            for (; n > 0;) {
                                const e = t[--n];
                                if ("number" == typeof e && e < 0) return e
                            }
                            return 0
                        })(a) != l && a.push(l), a.push(i, r, o)
                    }
                }

                function og(t, n) {
                    null !== t.hostBindings && t.hostBindings(1, n)
                }

                function ag(t, n) {
                    n.flags |= 2, (t.components || (t.components = [])).push(n.index)
                }

                function m2(t, n, e) {
                    if (e) {
                        if (n.exportAs)
                            for (let i = 0; i < n.exportAs.length; i++) e[n.exportAs[i]] = t;
                        ni(n) && (e[""] = t)
                    }
                }

                function lg(t, n, e) {
                    t.flags |= 1, t.directiveStart = n, t.directiveEnd = n + e, t.providerIndexes = n
                }

                function cg(t, n, e, i, r) {
                    t.data[i] = r;
                    const s = r.factory || (r.factory = Er(r.type)),
                        o = new ho(s, ni(r), null);
                    t.blueprint[i] = o, e[i] = o, sg(t, n, 0, i, _s(t, e, r.hostVars, Re), r)
                }

                function _2(t, n, e) {
                    const i = jn(n, t),
                        r = X0(e),
                        s = t[10],
                        o = bl(t, Oo(t, r, null, e.onPush ? 64 : 16, i, n, s, s.createRenderer(i, e), null, null));
                    t[n.index] = o
                }

                function Ei(t, n, e, i, r, s) {
                    const o = jn(t, n);
                    ! function md(t, n, e, i, r, s, o) {
                        if (null == s) Ct(t) ? t.removeAttribute(n, r, e) : n.removeAttribute(r);
                        else {
                            const a = null == o ? Oe(s) : o(s, i || "", r);
                            Ct(t) ? t.setAttribute(n, r, a, e) : e ? n.setAttributeNS(e, r, a) : n.setAttribute(r, a)
                        }
                    }(n[11], o, s, t.value, e, i, r)
                }

                function v2(t, n, e, i, r, s) {
                    const o = s[n];
                    if (null !== o) {
                        const a = i.setInput;
                        for (let l = 0; l < o.length;) {
                            const c = o[l++],
                                u = o[l++],
                                p = o[l++];
                            null !== a ? i.setInput(e, p, c, u) : e[u] = p
                        }
                    }
                }

                function y2(t, n) {
                    let e = null,
                        i = 0;
                    for (; i < n.length;) {
                        const r = n[i];
                        if (0 !== r)
                            if (5 !== r) {
                                if ("number" == typeof r) break;
                                t.hasOwnProperty(r) && (null === e && (e = []), e.push(r, t[r], n[i + 1])), i += 2
                            } else i += 2;
                        else i += 4
                    }
                    return e
                }

                function ug(t, n, e, i) {
                    return new Array(t, !0, !1, n, null, 0, i, e, null, null)
                }

                function x2(t, n) {
                    const e = En(n, t);
                    if (du(e)) {
                        const i = e[1];
                        80 & e[2] ? vs(i, e, i.template, e[8]) : e[5] > 0 && _d(e)
                    }
                }

                function _d(t) {
                    for (let i = Uu(t); null !== i; i = zu(i))
                        for (let r = 10; r < i.length; r++) {
                            const s = i[r];
                            if (1024 & s[2]) {
                                const o = s[1];
                                vs(o, s, o.template, s[8])
                            } else s[5] > 0 && _d(s)
                        }
                    const e = t[1].components;
                    if (null !== e)
                        for (let i = 0; i < e.length; i++) {
                            const r = En(e[i], t);
                            du(r) && r[5] > 0 && _d(r)
                        }
                }

                function w2(t, n) {
                    const e = En(n, t),
                        i = e[1];
                    (function C2(t, n) {
                        for (let e = n.length; e < t.blueprint.length; e++) n.push(t.blueprint[e])
                    })(i, e), Ro(i, e, e[8])
                }

                function bl(t, n) {
                    return t[13] ? t[14][4] = n : t[13] = n, t[14] = n, n
                }

                function vd(t) {
                    for (; t;) {
                        t[2] |= 64;
                        const n = Ao(t);
                        if (lD(t) && !n) return t;
                        t = n
                    }
                    return null
                }

                function bd(t, n, e) {
                    const i = n[10];
                    i.begin && i.begin();
                    try {
                        vs(t, n, t.template, e)
                    } catch (r) {
                        throw gg(n, r), r
                    } finally {
                        i.end && i.end()
                    }
                }

                function dg(t) {
                    ! function yd(t) {
                        for (let n = 0; n < t.components.length; n++) {
                            const e = t.components[n],
                                i = Vu(e),
                                r = i[1];
                            n2(r, i, r.template, e)
                        }
                    }(t[8])
                }

                function Dd(t, n, e) {
                    _u(0), n(t, e)
                }
                const E2 = (() => Promise.resolve(null))();

                function fg(t) {
                    return t[7] || (t[7] = [])
                }

                function pg(t) {
                    return t.cleanup || (t.cleanup = [])
                }

                function gg(t, n) {
                    const e = t[9],
                        i = e ? e.get(ps, null) : null;
                    i && i.handleError(n)
                }

                function mg(t, n, e, i, r) {
                    for (let s = 0; s < e.length;) {
                        const o = e[s++],
                            a = e[s++],
                            l = n[o],
                            c = t.data[o];
                        null !== c.setInput ? c.setInput(l, r, i, a) : l[a] = r
                    }
                }

                function $i(t, n, e) {
                    const i = qa(n, t);
                    ! function y0(t, n, e) {
                        Ct(t) ? t.setValue(n, e) : n.textContent = e
                    }(t[11], i, e)
                }

                function Dl(t, n, e) {
                    let i = e ? t.styles : null,
                        r = e ? t.classes : null,
                        s = 0;
                    if (null !== n)
                        for (let o = 0; o < n.length; o++) {
                            const a = n[o];
                            "number" == typeof a ? s = a : 1 == s ? r = Yc(r, a) : 2 == s && (i = Yc(i, a + ": " + n[++o] + ";"))
                        }
                    e ? t.styles = i : t.stylesWithoutHost = i, e ? t.classes = r : t.classesWithoutHost = r
                }
                const xd = new Ze("INJECTOR", -1);
                class _g {
                    get(n, e = xo) {
                        if (e === xo) {
                            const i = new Error(`NullInjectorError: No provider for ${nt(n)}!`);
                            throw i.name = "NullInjectorError", i
                        }
                        return e
                    }
                }
                const wd = new Ze("Set Injector scope."),
                    Po = {},
                    A2 = {};
                let Cd;

                function vg() {
                    return void 0 === Cd && (Cd = new _g), Cd
                }

                function yg(t, n = null, e = null, i) {
                    const r = bg(t, n, e, i);
                    return r._resolveInjectorDefTypes(), r
                }

                function bg(t, n = null, e = null, i) {
                    return new I2(t, e, n || vg(), i)
                }
                class I2 {
                    constructor(n, e, i, r = null) {
                        this.parent = i, this.records = new Map, this.injectorDefTypes = new Set, this.onDestroy = new Set, this._destroyed = !1;
                        const s = [];
                        e && Ci(e, a => this.processProvider(a, n, e)), Ci([n], a => this.processInjectorType(a, [], s)), this.records.set(xd, ys(void 0, this));
                        const o = this.records.get(wd);
                        this.scope = null != o ? o.value : null, this.source = r || ("object" == typeof n ? null : nt(n))
                    }
                    get destroyed() {
                        return this._destroyed
                    }
                    destroy() {
                        this.assertNotDestroyed(), this._destroyed = !0;
                        try {
                            this.onDestroy.forEach(n => n.ngOnDestroy())
                        } finally {
                            this.records.clear(), this.onDestroy.clear(), this.injectorDefTypes.clear()
                        }
                    }
                    get(n, e = xo, i = Le.Default) {
                        this.assertNotDestroyed();
                        const r = Gh(this),
                            s = Zi(void 0);
                        try {
                            if (!(i & Le.SkipSelf)) {
                                let a = this.records.get(n);
                                if (void 0 === a) {
                                    const l = function H2(t) {
                                        return "function" == typeof t || "object" == typeof t && t instanceof Ze
                                    }(n) && Zc(n);
                                    a = l && this.injectableDefInScope(l) ? ys(Md(n), Po) : null, this.records.set(n, a)
                                }
                                if (null != a) return this.hydrate(n, a)
                            }
                            return (i & Le.Self ? vg() : this.parent).get(n, e = i & Le.Optional && e === xo ? null : e)
                        } catch (o) {
                            if ("NullInjectorError" === o.name) {
                                if ((o[ol] = o[ol] || []).unshift(nt(n)), r) throw o;
                                return function gx(t, n, e, i) {
                                    const r = t[ol];
                                    throw n[jh] && r.unshift(n[jh]), t.message = function mx(t, n, e, i = null) {
                                        t = t && "\n" === t.charAt(0) && "\u0275" == t.charAt(1) ? t.substr(2) : t;
                                        let r = nt(n);
                                        if (Array.isArray(n)) r = n.map(nt).join(" -> ");
                                        else if ("object" == typeof n) {
                                            let s = [];
                                            for (let o in n)
                                                if (n.hasOwnProperty(o)) {
                                                    let a = n[o];
                                                    s.push(o + ":" + ("string" == typeof a ? JSON.stringify(a) : nt(a)))
                                                } r = `{${s.join(", ")}}`
                                        }
                                        return `${e}${i?"("+i+")":""}[${r}]: ${t.replace(ux,"\n  ")}`
                                    }("\n" + t.message, r, e, i), t.ngTokenPath = r, t[ol] = null, t
                                }(o, n, "R3InjectorError", this.source)
                            }
                            throw o
                        } finally {
                            Zi(s), Gh(r)
                        }
                    }
                    _resolveInjectorDefTypes() {
                        this.injectorDefTypes.forEach(n => this.get(n))
                    }
                    toString() {
                        const n = [];
                        return this.records.forEach((i, r) => n.push(nt(r))), `R3Injector[${n.join(", ")}]`
                    }
                    assertNotDestroyed() {
                        if (this._destroyed) throw new Qe(205, !1)
                    }
                    processInjectorType(n, e, i) {
                        if (!(n = Be(n))) return !1;
                        let r = Jp(n);
                        const s = null == r && n.ngModule || void 0,
                            o = void 0 === s ? n : s,
                            a = -1 !== i.indexOf(o);
                        if (void 0 !== s && (r = Jp(s)), null == r) return !1;
                        if (null != r.imports && !a) {
                            let u;
                            i.push(o);
                            try {
                                Ci(r.imports, p => {
                                    this.processInjectorType(p, e, i) && (void 0 === u && (u = []), u.push(p))
                                })
                            } finally {}
                            if (void 0 !== u)
                                for (let p = 0; p < u.length; p++) {
                                    const {
                                        ngModule: h,
                                        providers: m
                                    } = u[p];
                                    Ci(m, M => this.processProvider(M, h, m || ot))
                                }
                        }
                        this.injectorDefTypes.add(o);
                        const l = Er(o) || (() => new o);
                        this.records.set(o, ys(l, Po));
                        const c = r.providers;
                        if (null != c && !a) {
                            const u = n;
                            Ci(c, p => this.processProvider(p, u, c))
                        }
                        return void 0 !== s && void 0 !== n.providers
                    }
                    processProvider(n, e, i) {
                        let r = bs(n = Be(n)) ? n : Be(n && n.provide);
                        const s = function R2(t, n, e) {
                            return xg(t) ? ys(void 0, t.useValue) : ys(function Dg(t, n, e) {
                                let i;
                                if (bs(t)) {
                                    const r = Be(t);
                                    return Er(r) || Md(r)
                                }
                                if (xg(t)) i = () => Be(t.useValue);
                                else if (function F2(t) {
                                        return !(!t || !t.useFactory)
                                    }(t)) i = () => t.useFactory(...Nu(t.deps || []));
                                else if (function P2(t) {
                                        return !(!t || !t.useExisting)
                                    }(t)) i = () => Ce(Be(t.useExisting));
                                else {
                                    const r = Be(t && (t.useClass || t.provide));
                                    if (! function L2(t) {
                                            return !!t.deps
                                        }(t)) return Er(r) || Md(r);
                                    i = () => new r(...Nu(t.deps))
                                }
                                return i
                            }(t), Po)
                        }(n);
                        if (bs(n) || !0 !== n.multi) this.records.get(r);
                        else {
                            let o = this.records.get(r);
                            o || (o = ys(void 0, Po, !0), o.factory = () => Nu(o.multi), this.records.set(r, o)), r = n, o.multi.push(n)
                        }
                        this.records.set(r, s)
                    }
                    hydrate(n, e) {
                        return e.value === Po && (e.value = A2, e.value = e.factory()), "object" == typeof e.value && e.value && function V2(t) {
                            return null !== t && "object" == typeof t && "function" == typeof t.ngOnDestroy
                        }(e.value) && this.onDestroy.add(e.value), e.value
                    }
                    injectableDefInScope(n) {
                        if (!n.providedIn) return !1;
                        const e = Be(n.providedIn);
                        return "string" == typeof e ? "any" === e || e === this.scope : this.injectorDefTypes.has(e)
                    }
                }

                function Md(t) {
                    const n = Zc(t),
                        e = null !== n ? n.factory : Er(t);
                    if (null !== e) return e;
                    if (t instanceof Ze) throw new Qe(204, !1);
                    if (t instanceof Function) return function O2(t) {
                        const n = t.length;
                        if (n > 0) throw Do(n, "?"), new Qe(204, !1);
                        const e = function Kb(t) {
                            const n = t && (t[Ba] || t[Xp]);
                            if (n) {
                                const e = function Zb(t) {
                                    if (t.hasOwnProperty("name")) return t.name;
                                    const n = ("" + t).match(/^function\s*([^\s(]+)/);
                                    return null === n ? "" : n[1]
                                }(t);
                                return console.warn(`DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`), n
                            }
                            return null
                        }(t);
                        return null !== e ? () => e.factory(t) : () => new t
                    }(t);
                    throw new Qe(204, !1)
                }

                function ys(t, n, e = !1) {
                    return {
                        factory: t,
                        value: n,
                        multi: e ? [] : void 0
                    }
                }

                function xg(t) {
                    return null !== t && "object" == typeof t && fx in t
                }

                function bs(t) {
                    return "function" == typeof t
                }
                let Yt = (() => {
                    class t {
                        static create(e, i) {
                            var r;
                            if (Array.isArray(e)) return yg({
                                name: ""
                            }, i, e, "");
                            {
                                const s = null !== (r = e.name) && void 0 !== r ? r : "";
                                return yg({
                                    name: s
                                }, e.parent, e.providers, s)
                            }
                        }
                    }
                    return t.THROW_IF_NOT_FOUND = xo, t.NULL = new _g, t.\u0275prov = $e({
                        token: t,
                        providedIn: "any",
                        factory: () => Ce(xd)
                    }), t.__NG_ELEMENT_ID__ = -1, t
                })();

                function Y2(t, n) {
                    Ka(Vu(t)[1], Vt())
                }
                let xl = null;

                function Ds() {
                    if (!xl) {
                        const t = rt.Symbol;
                        if (t && t.iterator) xl = t.iterator;
                        else {
                            const n = Object.getOwnPropertyNames(Map.prototype);
                            for (let e = 0; e < n.length; ++e) {
                                const i = n[e];
                                "entries" !== i && "size" !== i && Map.prototype[i] === Map.prototype.entries && (xl = i)
                            }
                        }
                    }
                    return xl
                }

                function Fo(t) {
                    return !!kd(t) && (Array.isArray(t) || !(t instanceof Map) && Ds() in t)
                }

                function kd(t) {
                    return null !== t && ("function" == typeof t || "object" == typeof t)
                }

                function ki(t, n, e) {
                    return t[n] = e
                }

                function en(t, n, e) {
                    return !Object.is(t[n], e) && (t[n] = e, !0)
                }

                function Nr(t, n, e, i) {
                    const r = en(t, n, e);
                    return en(t, n + 1, i) || r
                }

                function at(t, n, e, i) {
                    const r = ne();
                    return en(r, ts(), n) && (Je(), Ei(Mt(), r, t, n, e, i)), at
                }

                function ws(t, n, e, i) {
                    return en(t, ts(), e) ? n + Oe(e) + i : Re
                }

                function Cs(t, n, e, i, r, s) {
                    const a = Nr(t, Hi(), e, r);
                    return ji(2), a ? n + Oe(e) + i + Oe(r) + s : Re
                }

                function Ms(t, n, e, i, r, s, o, a) {
                    const c = function wl(t, n, e, i, r) {
                        const s = Nr(t, n, e, i);
                        return en(t, n + 2, r) || s
                    }(t, Hi(), e, r, o);
                    return ji(3), c ? n + Oe(e) + i + Oe(r) + s + Oe(o) + a : Re
                }

                function O(t, n, e, i, r, s, o, a) {
                    const l = ne(),
                        c = Je(),
                        u = t + 20,
                        p = c.firstCreatePass ? function sC(t, n, e, i, r, s, o, a, l) {
                            const c = n.consts,
                                u = ms(n, t, 4, o || null, Xi(c, a));
                            gd(n, e, u, Xi(c, l)), Ka(n, u);
                            const p = u.tViews = yl(2, u, i, r, s, n.directiveRegistry, n.pipeRegistry, null, n.schemas, c);
                            return null !== n.queries && (n.queries.template(n, u), p.queries = n.queries.embeddedTView(u)), u
                        }(u, c, l, n, e, i, r, s, o) : c.data[u];
                    wi(p, !1);
                    const h = l[11].createComment("");
                    hl(c, l, h, p), Xt(h, l), bl(l, l[u] = ug(h, l, h, p)), $a(p) && pd(c, l, p), null != o && hd(l, p, a)
                }

                function Pe(t) {
                    return es(function kD() {
                        return Ie.lFrame.contextLView
                    }(), 20 + t)
                }

                function F(t, n = Le.Default) {
                    const e = ne();
                    return null === e ? Ce(t, n) : Ah(Vt(), e, Be(t), n)
                }

                function D(t, n, e) {
                    const i = ne();
                    return en(i, ts(), n) && An(Je(), Mt(), i, t, n, i[11], e, !1), D
                }

                function Rd(t, n, e, i, r) {
                    const o = r ? "class" : "style";
                    mg(t, e, n.inputs[o], o, i)
                }

                function d(t, n, e, i) {
                    const r = ne(),
                        s = Je(),
                        o = 20 + t,
                        a = r[11],
                        l = r[o] = Yu(a, n, function HD() {
                            return Ie.lFrame.currentNamespace
                        }()),
                        c = s.firstCreatePass ? function SC(t, n, e, i, r, s, o) {
                            const a = n.consts,
                                c = ms(n, t, 2, r, Xi(a, s));
                            return gd(n, e, c, Xi(a, o)), null !== c.attrs && Dl(c, c.attrs, !1), null !== c.mergedAttrs && Dl(c, c.mergedAttrs, !0), null !== n.queries && n.queries.elementStart(n, c), c
                        }(o, s, r, 0, n, e, i) : s.data[o];
                    wi(c, !0);
                    const u = c.mergedAttrs;
                    null !== u && Ja(a, l, u);
                    const p = c.classes;
                    null !== p && ed(a, l, p);
                    const h = c.styles;
                    null !== h && O0(a, l, h), 64 != (64 & c.flags) && hl(s, r, l, c), 0 === function CD() {
                            return Ie.lFrame.elementDepthCount
                        }() && Xt(l, r),
                        function MD() {
                            Ie.lFrame.elementDepthCount++
                        }(), $a(c) && (pd(s, r, c), J0(s, c, r)), null !== i && hd(r, c)
                }

                function f() {
                    let t = Vt();
                    pu() ? hu() : (t = t.parent, wi(t, !1));
                    const n = t;
                    ! function TD() {
                        Ie.lFrame.elementDepthCount--
                    }();
                    const e = Je();
                    e.firstCreatePass && (Ka(e, t), iu(t) && e.queries.elementEnd(t)), null != n.classesWithoutHost && function UD(t) {
                        return 0 != (16 & t.flags)
                    }(n) && Rd(e, n, ne(), n.classesWithoutHost, !0), null != n.stylesWithoutHost && function zD(t) {
                        return 0 != (32 & t.flags)
                    }(n) && Rd(e, n, ne(), n.stylesWithoutHost, !1)
                }

                function ee(t, n, e, i) {
                    d(t, n, e, i), f()
                }

                function In(t, n, e) {
                    const i = ne(),
                        r = Je(),
                        s = t + 20,
                        o = r.firstCreatePass ? function EC(t, n, e, i, r) {
                            const s = n.consts,
                                o = Xi(s, i),
                                a = ms(n, t, 8, "ng-container", o);
                            return null !== o && Dl(a, o, !0), gd(n, e, a, Xi(s, r)), null !== n.queries && n.queries.elementStart(n, a), a
                        }(s, r, i, n, e) : r.data[s];
                    wi(o, !0);
                    const a = i[s] = i[11].createComment("");
                    hl(r, i, a, o), Xt(a, i), $a(o) && (pd(r, i, o), J0(r, o, i)), null != e && hd(i, o)
                }

                function On() {
                    let t = Vt();
                    const n = Je();
                    pu() ? hu() : (t = t.parent, wi(t, !1)), n.firstCreatePass && (Ka(n, t), iu(t) && n.queries.elementEnd(t))
                }

                function xe() {
                    return ne()
                }

                function Ml(t) {
                    return !!t && "function" == typeof t.then
                }
                const tm = function em(t) {
                    return !!t && "function" == typeof t.subscribe
                };

                function ie(t, n, e, i) {
                    const r = ne(),
                        s = Je(),
                        o = Vt();
                    return function im(t, n, e, i, r, s, o, a) {
                        const l = $a(i),
                            u = t.firstCreatePass && pg(t),
                            p = n[8],
                            h = fg(n);
                        let m = !0;
                        if (3 & i.type || a) {
                            const H = jn(i, n),
                                Y = a ? a(H) : H,
                                P = h.length,
                                ue = a ? re => a(Rt(re[i.index])) : i.index;
                            if (Ct(e)) {
                                let re = null;
                                if (!a && l && (re = function NC(t, n, e, i) {
                                        const r = t.cleanup;
                                        if (null != r)
                                            for (let s = 0; s < r.length - 1; s += 2) {
                                                const o = r[s];
                                                if (o === e && r[s + 1] === i) {
                                                    const a = n[7],
                                                        l = r[s + 2];
                                                    return a.length > l ? a[l] : null
                                                }
                                                "string" == typeof o && (s += 2)
                                            }
                                        return null
                                    }(t, n, r, i.index)), null !== re)(re.__ngLastListenerFn__ || re).__ngNextListenerFn__ = s, re.__ngLastListenerFn__ = s, m = !1;
                                else {
                                    s = Pd(i, n, p, s, !1);
                                    const ge = e.listen(Y, r, s);
                                    h.push(s, ge), u && u.push(r, ue, P, P + 1)
                                }
                            } else s = Pd(i, n, p, s, !0), Y.addEventListener(r, s, o), h.push(s), u && u.push(r, ue, P, o)
                        } else s = Pd(i, n, p, s, !1);
                        const M = i.outputs;
                        let I;
                        if (m && null !== M && (I = M[r])) {
                            const H = I.length;
                            if (H)
                                for (let Y = 0; Y < H; Y += 2) {
                                    const we = n[I[Y]][I[Y + 1]].subscribe(s),
                                        Ne = h.length;
                                    h.push(s, we), u && u.push(r, i.index, Ne, -(Ne + 1))
                                }
                        }
                    }(s, r, r[11], o, t, n, !!e, i), ie
                }

                function rm(t, n, e, i) {
                    try {
                        return !1 !== e(i)
                    } catch (r) {
                        return gg(t, r), !1
                    }
                }

                function Pd(t, n, e, i, r) {
                    return function s(o) {
                        if (o === Function) return i;
                        const a = 2 & t.flags ? En(t.index, n) : n;
                        0 == (32 & n[2]) && vd(a);
                        let l = rm(n, 0, i, o),
                            c = s.__ngNextListenerFn__;
                        for (; c;) l = rm(n, 0, c, o) && l, c = c.__ngNextListenerFn__;
                        return r && !1 === l && (o.preventDefault(), o.returnValue = !1), l
                    }
                }

                function k(t = 1) {
                    return function RD(t) {
                        return (Ie.lFrame.contextLView = function PD(t, n) {
                            for (; t > 0;) n = n[15], t--;
                            return n
                        }(t, Ie.lFrame.contextLView))[8]
                    }(t)
                }

                function AC(t, n) {
                    let e = null;
                    const i = function Fw(t) {
                        const n = t.attrs;
                        if (null != n) {
                            const e = n.indexOf(5);
                            if (0 == (1 & e)) return n[e + 1]
                        }
                        return null
                    }(t);
                    for (let r = 0; r < n.length; r++) {
                        const s = n[r];
                        if ("*" !== s) {
                            if (null === i ? B0(t, s, !0) : Vw(i, s)) return r
                        } else e = r
                    }
                    return e
                }

                function Fd(t) {
                    const n = ne()[16][6];
                    if (!n.projection) {
                        const i = n.projection = Do(t ? t.length : 1, null),
                            r = i.slice();
                        let s = n.child;
                        for (; null !== s;) {
                            const o = t ? AC(s, t) : 0;
                            null !== o && (r[o] ? r[o].projectionNext = s : i[o] = s, r[o] = s), s = s.next
                        }
                    }
                }

                function Bd(t, n = 0, e) {
                    const i = ne(),
                        r = Je(),
                        s = ms(r, 20 + t, 16, null, e || null);
                    null === s.projection && (s.projection = n), hu(), 64 != (64 & s.flags) && function kw(t, n, e) {
                        I0(n[11], 0, n, e, x0(t, e, n), T0(e.parent || n[6], e, n))
                    }(r, i, s)
                }

                function Ni(t, n, e, i, r) {
                    const s = ne(),
                        o = ws(s, n, e, i);
                    return o !== Re && An(Je(), Mt(), s, t, o, s[11], r, !1), Ni
                }

                function pm(t, n, e, i, r) {
                    const s = t[e + 1],
                        o = null === n;
                    let a = i ? ri(s) : Gi(s),
                        l = !1;
                    for (; 0 !== a && (!1 === l || o);) {
                        const u = t[a + 1];
                        RC(t[a], n) && (l = !0, t[a + 1] = i ? id(u) : td(u)), a = i ? ri(u) : Gi(u)
                    }
                    l && (t[e + 1] = i ? td(s) : id(s))
                }

                function RC(t, n) {
                    return null === t || null == n || (Array.isArray(t) ? t[1] : t) === n || !(!Array.isArray(t) || "string" != typeof n) && cs(t, n) >= 0
                }
                const jt = {
                    textEnd: 0,
                    key: 0,
                    keyEnd: 0,
                    value: 0,
                    valueEnd: 0
                };

                function hm(t) {
                    return t.substring(jt.key, jt.keyEnd)
                }

                function PC(t) {
                    return t.substring(jt.value, jt.valueEnd)
                }

                function gm(t, n) {
                    const e = jt.textEnd;
                    return e === n ? -1 : (n = jt.keyEnd = function LC(t, n, e) {
                        for (; n < e && t.charCodeAt(n) > 32;) n++;
                        return n
                    }(t, jt.key = n, e), Is(t, n, e))
                }

                function mm(t, n) {
                    const e = jt.textEnd;
                    let i = jt.key = Is(t, n, e);
                    return e === i ? -1 : (i = jt.keyEnd = function VC(t, n, e) {
                        let i;
                        for (; n < e && (45 === (i = t.charCodeAt(n)) || 95 === i || (-33 & i) >= 65 && (-33 & i) <= 90 || i >= 48 && i <= 57);) n++;
                        return n
                    }(t, i, e), i = vm(t, i, e), i = jt.value = Is(t, i, e), i = jt.valueEnd = function HC(t, n, e) {
                        let i = -1,
                            r = -1,
                            s = -1,
                            o = n,
                            a = o;
                        for (; o < e;) {
                            const l = t.charCodeAt(o++);
                            if (59 === l) return a;
                            34 === l || 39 === l ? a = o = ym(t, l, o, e) : n === o - 4 && 85 === s && 82 === r && 76 === i && 40 === l ? a = o = ym(t, 41, o, e) : l > 32 && (a = o), s = r, r = i, i = -33 & l
                        }
                        return a
                    }(t, i, e), vm(t, i, e))
                }

                function _m(t) {
                    jt.key = 0, jt.keyEnd = 0, jt.value = 0, jt.valueEnd = 0, jt.textEnd = t.length
                }

                function Is(t, n, e) {
                    for (; n < e && t.charCodeAt(n) <= 32;) n++;
                    return n
                }

                function vm(t, n, e, i) {
                    return (n = Is(t, n, e)) < e && n++, n
                }

                function ym(t, n, e, i) {
                    let r = -1,
                        s = e;
                    for (; s < i;) {
                        const o = t.charCodeAt(s++);
                        if (o == n && 92 !== r) return s;
                        r = 92 == o && 92 === r ? 0 : o
                    }
                    throw new Error
                }

                function vt(t, n) {
                    return function ai(t, n, e, i) {
                        const r = ne(),
                            s = Je(),
                            o = ji(2);
                        s.firstUpdatePass && Dm(s, t, o, i), n !== Re && en(r, o, n) && wm(s, s.data[un()], r, r[11], t, r[o + 1] = function YC(t, n) {
                            return null == t || ("string" == typeof n ? t += n : "object" == typeof t && (t = nt(nr(t)))), t
                        }(n, e), i, o)
                    }(t, n, null, !0), vt
                }

                function oi(t) {
                    li(xm, jC, t, !1)
                }

                function jC(t, n) {
                    for (let e = function BC(t) {
                            return _m(t), mm(t, Is(t, 0, jt.textEnd))
                        }(n); e >= 0; e = mm(n, e)) xm(t, hm(n), PC(n))
                }

                function qn(t) {
                    li(kn, Ai, t, !0)
                }

                function Ai(t, n) {
                    for (let e = function FC(t) {
                            return _m(t), gm(t, Is(t, 0, jt.textEnd))
                        }(n); e >= 0; e = gm(n, e)) kn(t, hm(n), !0)
                }

                function li(t, n, e, i) {
                    const r = Je(),
                        s = ji(2);
                    r.firstUpdatePass && Dm(r, null, s, i);
                    const o = ne();
                    if (e !== Re && en(o, s, e)) {
                        const a = r.data[un()];
                        if (Mm(a, i) && !bm(r, s)) {
                            let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
                            null !== l && (e = Yc(l, e || "")), Rd(r, a, o, e, i)
                        } else ! function WC(t, n, e, i, r, s, o, a) {
                            r === Re && (r = ot);
                            let l = 0,
                                c = 0,
                                u = 0 < r.length ? r[0] : null,
                                p = 0 < s.length ? s[0] : null;
                            for (; null !== u || null !== p;) {
                                const h = l < r.length ? r[l + 1] : void 0,
                                    m = c < s.length ? s[c + 1] : void 0;
                                let I, M = null;
                                u === p ? (l += 2, c += 2, h !== m && (M = p, I = m)) : null === p || null !== u && u < p ? (l += 2, M = u) : (c += 2, M = p, I = m), null !== M && wm(t, n, e, i, M, I, o, a), u = l < r.length ? r[l] : null, p = c < s.length ? s[c] : null
                            }
                        }(r, a, o, o[11], o[s + 1], o[s + 1] = function zC(t, n, e) {
                            if (null == e || "" === e) return ot;
                            const i = [],
                                r = nr(e);
                            if (Array.isArray(r))
                                for (let s = 0; s < r.length; s++) t(i, r[s], !0);
                            else if ("object" == typeof r)
                                for (const s in r) r.hasOwnProperty(s) && t(i, s, r[s]);
                            else "string" == typeof r && n(i, r);
                            return i
                        }(t, n, e), i, s)
                    }
                }

                function bm(t, n) {
                    return n >= t.expandoStartIndex
                }

                function Dm(t, n, e, i) {
                    const r = t.data;
                    if (null === r[e + 1]) {
                        const s = r[un()],
                            o = bm(t, e);
                        Mm(s, i) && null === n && !o && (n = !1), n = function GC(t, n, e, i) {
                                const r = function mu(t) {
                                    const n = Ie.lFrame.currentDirectiveIndex;
                                    return -1 === n ? null : t[n]
                                }(t);
                                let s = i ? n.residualClasses : n.residualStyles;
                                if (null === r) 0 === (i ? n.classBindings : n.styleBindings) && (e = Lo(e = Hd(null, t, n, e, i), n.attrs, i), s = null);
                                else {
                                    const o = n.directiveStylingLast;
                                    if (-1 === o || t[o] !== r)
                                        if (e = Hd(r, t, n, e, i), null === s) {
                                            let l = function $C(t, n, e) {
                                                const i = e ? n.classBindings : n.styleBindings;
                                                if (0 !== Gi(i)) return t[ri(i)]
                                            }(t, n, i);
                                            void 0 !== l && Array.isArray(l) && (l = Hd(null, t, n, l[1], i), l = Lo(l, n.attrs, i), function qC(t, n, e, i) {
                                                t[ri(e ? n.classBindings : n.styleBindings)] = i
                                            }(t, n, i, l))
                                        } else s = function UC(t, n, e) {
                                            let i;
                                            const r = n.directiveEnd;
                                            for (let s = 1 + n.directiveStylingLast; s < r; s++) i = Lo(i, t[s].hostAttrs, e);
                                            return Lo(i, n.attrs, e)
                                        }(t, n, i)
                                }
                                return void 0 !== s && (i ? n.residualClasses = s : n.residualStyles = s), e
                            }(r, s, n, i),
                            function IC(t, n, e, i, r, s) {
                                let o = s ? n.classBindings : n.styleBindings,
                                    a = ri(o),
                                    l = Gi(o);
                                t[i] = e;
                                let u, c = !1;
                                if (Array.isArray(e)) {
                                    const p = e;
                                    u = p[1], (null === u || cs(p, u) > 0) && (c = !0)
                                } else u = e;
                                if (r)
                                    if (0 !== l) {
                                        const h = ri(t[a + 1]);
                                        t[i + 1] = ml(h, a), 0 !== h && (t[h + 1] = nd(t[h + 1], i)), t[a + 1] = function $w(t, n) {
                                            return 131071 & t | n << 17
                                        }(t[a + 1], i)
                                    } else t[i + 1] = ml(a, 0), 0 !== a && (t[a + 1] = nd(t[a + 1], i)), a = i;
                                else t[i + 1] = ml(l, 0), 0 === a ? a = i : t[l + 1] = nd(t[l + 1], i), l = i;
                                c && (t[i + 1] = td(t[i + 1])), pm(t, u, i, !0), pm(t, u, i, !1),
                                    function OC(t, n, e, i, r) {
                                        const s = r ? t.residualClasses : t.residualStyles;
                                        null != s && "string" == typeof n && cs(s, n) >= 0 && (e[i + 1] = id(e[i + 1]))
                                    }(n, u, t, i, s), o = ml(a, l), s ? n.classBindings = o : n.styleBindings = o
                            }(r, s, n, e, o, i)
                    }
                }

                function Hd(t, n, e, i, r) {
                    let s = null;
                    const o = e.directiveEnd;
                    let a = e.directiveStylingLast;
                    for (-1 === a ? a = e.directiveStart : a++; a < o && (s = n[a], i = Lo(i, s.hostAttrs, r), s !== t);) a++;
                    return null !== t && (e.directiveStylingLast = a), i
                }

                function Lo(t, n, e) {
                    const i = e ? 1 : 2;
                    let r = -1;
                    if (null !== n)
                        for (let s = 0; s < n.length; s++) {
                            const o = n[s];
                            "number" == typeof o ? r = o : r === i && (Array.isArray(t) || (t = void 0 === t ? [] : ["", t]), kn(t, o, !!e || n[++s]))
                        }
                    return void 0 === t ? null : t
                }

                function xm(t, n, e) {
                    kn(t, n, nr(e))
                }

                function wm(t, n, e, i, r, s, o, a) {
                    if (!(3 & n.type)) return;
                    const l = t.data,
                        c = l[a + 1];
                    Tl(function G0(t) {
                        return 1 == (1 & t)
                    }(c) ? Cm(l, n, e, r, Gi(c), o) : void 0) || (Tl(s) || function j0(t) {
                        return 2 == (2 & t)
                    }(c) && (s = Cm(l, null, e, r, a, o)), function Aw(t, n, e, i, r) {
                        const s = Ct(t);
                        if (n) r ? s ? t.addClass(e, i) : e.classList.add(i) : s ? t.removeClass(e, i) : e.classList.remove(i);
                        else {
                            let o = -1 === i.indexOf("-") ? void 0 : Nn.DashCase;
                            if (null == r) s ? t.removeStyle(e, i, o) : e.style.removeProperty(i);
                            else {
                                const a = "string" == typeof r && r.endsWith("!important");
                                a && (r = r.slice(0, -10), o |= Nn.Important), s ? t.setStyle(e, i, r, o) : e.style.setProperty(i, r, a ? "important" : "")
                            }
                        }
                    }(i, o, qa(un(), e), r, s))
                }

                function Cm(t, n, e, i, r, s) {
                    const o = null === n;
                    let a;
                    for (; r > 0;) {
                        const l = t[r],
                            c = Array.isArray(l),
                            u = c ? l[1] : l,
                            p = null === u;
                        let h = e[r + 1];
                        h === Re && (h = p ? ot : void 0);
                        let m = p ? Su(h, i) : u === i ? h : void 0;
                        if (c && !Tl(m) && (m = Su(l, i)), Tl(m) && (a = m, o)) return a;
                        const M = t[r + 1];
                        r = o ? ri(M) : Gi(M)
                    }
                    if (null !== n) {
                        let l = s ? n.residualClasses : n.residualStyles;
                        null != l && (a = Su(l, i))
                    }
                    return a
                }

                function Tl(t) {
                    return void 0 !== t
                }

                function Mm(t, n) {
                    return 0 != (t.flags & (n ? 16 : 32))
                }

                function _(t, n = "") {
                    const e = ne(),
                        i = Je(),
                        r = t + 20,
                        s = i.firstCreatePass ? ms(i, r, 1, n, null) : i.data[r],
                        o = e[r] = function Wu(t, n) {
                            return Ct(t) ? t.createText(n) : t.createTextNode(n)
                        }(e[11], n);
                    hl(i, e, o, s), wi(s, !1)
                }

                function Ye(t) {
                    return Se("", t, ""), Ye
                }

                function Se(t, n, e) {
                    const i = ne(),
                        r = ws(i, t, n, e);
                    return r !== Re && $i(i, un(), r), Se
                }

                function et(t, n, e, i, r) {
                    const s = ne(),
                        o = Cs(s, t, n, e, i, r);
                    return o !== Re && $i(s, un(), o), et
                }

                function Vo(t, n, e, i, r, s, o) {
                    const a = ne(),
                        l = Ms(a, t, n, e, i, r, s, o);
                    return l !== Re && $i(a, un(), l), Vo
                }

                function Un(t, n, e) {
                    li(kn, Ai, ws(ne(), t, n, e), !0)
                }

                function ci(t, n, e) {
                    oi(ws(ne(), t, n, e))
                }

                function sr(t, n, e) {
                    const i = ne();
                    return en(i, ts(), n) && An(Je(), Mt(), i, t, n, i[11], e, !0), sr
                }
                const Ar = void 0;
                var dM = ["en", [
                        ["a", "p"],
                        ["AM", "PM"], Ar
                    ],
                    [
                        ["AM", "PM"], Ar, Ar
                    ],
                    [
                        ["S", "M", "T", "W", "T", "F", "S"],
                        ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                        ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                        ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                    ], Ar, [
                        ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                        ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
                    ], Ar, [
                        ["B", "A"],
                        ["BC", "AD"],
                        ["Before Christ", "Anno Domini"]
                    ], 0, [6, 0],
                    ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
                    ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
                    ["{1}, {0}", Ar, "{1} 'at' {0}", Ar],
                    [".", ",", ";", "%", "+", "-", "E", "\xd7", "\u2030", "\u221e", "NaN", ":"],
                    ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"], "USD", "$", "US Dollar", {}, "ltr",
                    function uM(t) {
                        const e = Math.floor(Math.abs(t)),
                            i = t.toString().replace(/^[^.]*\.?/, "").length;
                        return 1 === e && 0 === i ? 1 : 5
                    }
                ];
                let Os = {};

                function hn(t) {
                    const n = function fM(t) {
                        return t.toLowerCase().replace(/_/g, "-")
                    }(t);
                    let e = qm(n);
                    if (e) return e;
                    const i = n.split("-")[0];
                    if (e = qm(i), e) return e;
                    if ("en" === i) return dM;
                    throw new Error(`Missing locale data for the locale "${t}".`)
                }

                function qm(t) {
                    return t in Os || (Os[t] = rt.ng && rt.ng.common && rt.ng.common.locales && rt.ng.common.locales[t]), Os[t]
                }
                var De = (() => ((De = De || {})[De.LocaleId = 0] = "LocaleId", De[De.DayPeriodsFormat = 1] = "DayPeriodsFormat", De[De.DayPeriodsStandalone = 2] = "DayPeriodsStandalone", De[De.DaysFormat = 3] = "DaysFormat", De[De.DaysStandalone = 4] = "DaysStandalone", De[De.MonthsFormat = 5] = "MonthsFormat", De[De.MonthsStandalone = 6] = "MonthsStandalone", De[De.Eras = 7] = "Eras", De[De.FirstDayOfWeek = 8] = "FirstDayOfWeek", De[De.WeekendRange = 9] = "WeekendRange", De[De.DateFormat = 10] = "DateFormat", De[De.TimeFormat = 11] = "TimeFormat", De[De.DateTimeFormat = 12] = "DateTimeFormat", De[De.NumberSymbols = 13] = "NumberSymbols", De[De.NumberFormats = 14] = "NumberFormats", De[De.CurrencyCode = 15] = "CurrencyCode", De[De.CurrencySymbol = 16] = "CurrencySymbol", De[De.CurrencyName = 17] = "CurrencyName", De[De.Currencies = 18] = "Currencies", De[De.Directionality = 19] = "Directionality", De[De.PluralCase = 20] = "PluralCase", De[De.ExtraData = 21] = "ExtraData", De))();
                const Sl = "en-US";
                let Um = Sl;
                class m1 {}
                class dT {
                    resolveComponentFactory(n) {
                        throw function uT(t) {
                            const n = Error(`No component factory found for ${nt(t)}. Did you add it to @NgModule.entryComponents?`);
                            return n.ngComponent = t, n
                        }(n)
                    }
                }
                let Ps = (() => {
                    class t {}
                    return t.NULL = new dT, t
                })();

                function fT() {
                    return Fs(Vt(), ne())
                }

                function Fs(t, n) {
                    return new gt(jn(t, n))
                }
                let gt = (() => {
                    class t {
                        constructor(e) {
                            this.nativeElement = e
                        }
                    }
                    return t.__NG_ELEMENT_ID__ = fT, t
                })();

                function pT(t) {
                    return t instanceof gt ? t.nativeElement : t
                }
                class Yd {}
                let Ii = (() => {
                        class t {}
                        return t.__NG_ELEMENT_ID__ = () => function gT() {
                            const t = ne(),
                                e = En(Vt().index, t);
                            return function hT(t) {
                                return t[11]
                            }(xi(e) ? e : t)
                        }(), t
                    })(),
                    mT = (() => {
                        class t {}
                        return t.\u0275prov = $e({
                            token: t,
                            providedIn: "root",
                            factory: () => null
                        }), t
                    })();
                class Il {
                    constructor(n) {
                        this.full = n, this.major = n.split(".")[0], this.minor = n.split(".")[1], this.patch = n.split(".").slice(2).join(".")
                    }
                }
                const _T = new Il("13.2.1"),
                    Kd = {};

                function Ol(t, n, e, i, r = !1) {
                    for (; null !== e;) {
                        const s = n[e.index];
                        if (null !== s && i.push(Rt(s)), ti(s))
                            for (let a = 10; a < s.length; a++) {
                                const l = s[a],
                                    c = l[1].firstChild;
                                null !== c && Ol(l[1], l, c, i)
                            }
                        const o = e.type;
                        if (8 & o) Ol(t, n, e.child, i);
                        else if (32 & o) {
                            const a = qu(e, n);
                            let l;
                            for (; l = a();) i.push(l)
                        } else if (16 & o) {
                            const a = N0(n, e);
                            if (Array.isArray(a)) i.push(...a);
                            else {
                                const l = Ao(n[16]);
                                Ol(l[1], l, a, i, !0)
                            }
                        }
                        e = r ? e.projectionNext : e.next
                    }
                    return i
                }
                class qo {
                    constructor(n, e) {
                        this._lView = n, this._cdRefInjectingView = e, this._appRef = null, this._attachedToViewContainer = !1
                    }
                    get rootNodes() {
                        const n = this._lView,
                            e = n[1];
                        return Ol(e, n, e.firstChild, [])
                    }
                    get context() {
                        return this._lView[8]
                    }
                    set context(n) {
                        this._lView[8] = n
                    }
                    get destroyed() {
                        return 256 == (256 & this._lView[2])
                    }
                    destroy() {
                        if (this._appRef) this._appRef.detachView(this);
                        else if (this._attachedToViewContainer) {
                            const n = this._lView[3];
                            if (ti(n)) {
                                const e = n[8],
                                    i = e ? e.indexOf(this) : -1;
                                i > -1 && (Ku(n, i), rl(e, i))
                            }
                            this._attachedToViewContainer = !1
                        }
                        D0(this._lView[1], this._lView)
                    }
                    onDestroy(n) {
                        ng(this._lView[1], this._lView, null, n)
                    }
                    markForCheck() {
                        vd(this._cdRefInjectingView || this._lView)
                    }
                    detach() {
                        this._lView[2] &= -129
                    }
                    reattach() {
                        this._lView[2] |= 128
                    }
                    detectChanges() {
                        bd(this._lView[1], this._lView, this.context)
                    }
                    checkNoChanges() {
                        ! function T2(t, n, e) {
                            za(!0);
                            try {
                                bd(t, n, e)
                            } finally {
                                za(!1)
                            }
                        }(this._lView[1], this._lView, this.context)
                    }
                    attachToViewContainerRef() {
                        if (this._appRef) throw new Qe(902, "");
                        this._attachedToViewContainer = !0
                    }
                    detachFromAppRef() {
                        this._appRef = null,
                            function Dw(t, n) {
                                Io(t, n, n[11], 2, null, null)
                            }(this._lView[1], this._lView)
                    }
                    attachToAppRef(n) {
                        if (this._attachedToViewContainer) throw new Qe(902, "");
                        this._appRef = n
                    }
                }
                class vT extends qo {
                    constructor(n) {
                        super(n), this._view = n
                    }
                    detectChanges() {
                        dg(this._view)
                    }
                    checkNoChanges() {
                        ! function S2(t) {
                            za(!0);
                            try {
                                dg(t)
                            } finally {
                                za(!1)
                            }
                        }(this._view)
                    }
                    get context() {
                        return null
                    }
                }
                class v1 extends Ps {
                    constructor(n) {
                        super(), this.ngModule = n
                    }
                    resolveComponentFactory(n) {
                        const e = Qt(n);
                        return new Zd(e, this.ngModule)
                    }
                }

                function y1(t) {
                    const n = [];
                    for (let e in t) t.hasOwnProperty(e) && n.push({
                        propName: t[e],
                        templateName: e
                    });
                    return n
                }
                const bT = new Ze("SCHEDULER_TOKEN", {
                    providedIn: "root",
                    factory: () => p0
                });
                class Zd extends m1 {
                    constructor(n, e) {
                        super(), this.componentDef = n, this.ngModule = e, this.componentType = n.type, this.selector = function jw(t) {
                            return t.map(Hw).join(",")
                        }(n.selectors), this.ngContentSelectors = n.ngContentSelectors ? n.ngContentSelectors : [], this.isBoundToModule = !!e
                    }
                    get inputs() {
                        return y1(this.componentDef.inputs)
                    }
                    get outputs() {
                        return y1(this.componentDef.outputs)
                    }
                    create(n, e, i, r) {
                        const s = (r = r || this.ngModule) ? function DT(t, n) {
                                return {
                                    get: (e, i, r) => {
                                        const s = t.get(e, Kd, r);
                                        return s !== Kd || i === Kd ? s : n.get(e, i, r)
                                    }
                                }
                            }(n, r.injector) : n,
                            o = s.get(Yd, uh),
                            a = s.get(mT, null),
                            l = o.createRenderer(null, this.componentDef),
                            c = this.componentDef.selectors[0][0] || "div",
                            u = i ? function tg(t, n, e) {
                                if (Ct(t)) return t.selectRootElement(n, e === Di.ShadowDom);
                                let i = "string" == typeof n ? t.querySelector(n) : n;
                                return i.textContent = "", i
                            }(l, i, this.componentDef.encapsulation) : Yu(o.createRenderer(null, this.componentDef), c, function yT(t) {
                                const n = t.toLowerCase();
                                return "svg" === n ? "svg" : "math" === n ? "math" : null
                            }(c)),
                            p = this.componentDef.onPush ? 576 : 528,
                            h = function Og(t, n) {
                                return {
                                    components: [],
                                    scheduler: t || p0,
                                    clean: E2,
                                    playerHandler: n || null,
                                    flags: 0
                                }
                            }(),
                            m = yl(0, null, null, 1, 0, null, null, null, null, null),
                            M = Oo(null, m, h, p, null, null, o, l, a, s);
                        let I, H;
                        Wa(M);
                        try {
                            const Y = function Ag(t, n, e, i, r, s) {
                                const o = e[1];
                                e[20] = t;
                                const l = ms(o, 20, 2, "#host", null),
                                    c = l.mergedAttrs = n.hostAttrs;
                                null !== c && (Dl(l, c, !0), null !== t && (Ja(r, t, c), null !== l.classes && ed(r, t, l.classes), null !== l.styles && O0(r, t, l.styles)));
                                const u = i.createRenderer(t, n),
                                    p = Oo(e, X0(n), null, n.onPush ? 64 : 16, e[20], l, i, u, s || null, null);
                                return o.firstCreatePass && (nl(mo(l, e), o, n.type), ag(o, l), lg(l, e.length, 1)), bl(e, p), e[20] = p
                            }(u, this.componentDef, M, o, l);
                            if (u)
                                if (i) Ja(l, u, ["ng-version", _T.full]);
                                else {
                                    const {
                                        attrs: P,
                                        classes: ue
                                    } = function Gw(t) {
                                        const n = [],
                                            e = [];
                                        let i = 1,
                                            r = 2;
                                        for (; i < t.length;) {
                                            let s = t[i];
                                            if ("string" == typeof s) 2 === r ? "" !== s && n.push(s, t[++i]) : 8 === r && e.push(s);
                                            else {
                                                if (!ii(r)) break;
                                                r = s
                                            }
                                            i++
                                        }
                                        return {
                                            attrs: n,
                                            classes: e
                                        }
                                    }(this.componentDef.selectors[0]);
                                    P && Ja(l, u, P), ue && ue.length > 0 && ed(l, u, ue.join(" "))
                                } if (H = uu(m, 20), void 0 !== e) {
                                const P = H.projection = [];
                                for (let ue = 0; ue < this.ngContentSelectors.length; ue++) {
                                    const re = e[ue];
                                    P.push(null != re ? Array.from(re) : null)
                                }
                            }
                            I = function Ig(t, n, e, i, r) {
                                const s = e[1],
                                    o = function u2(t, n, e) {
                                        const i = Vt();
                                        t.firstCreatePass && (e.providersResolver && e.providersResolver(e), cg(t, i, n, _s(t, n, 1, null), e));
                                        const r = _o(n, t, i.directiveStart, i);
                                        Xt(r, n);
                                        const s = jn(i, n);
                                        return s && Xt(s, n), r
                                    }(s, e, n);
                                if (i.components.push(o), t[8] = o, r && r.forEach(l => l(o, n)), n.contentQueries) {
                                    const l = Vt();
                                    n.contentQueries(1, o, l.directiveStart)
                                }
                                const a = Vt();
                                return !s.firstCreatePass || null === n.hostBindings && null === n.hostAttrs || (er(a.index), sg(e[1], a, 0, a.directiveStart, a.directiveEnd, n), og(n, o)), o
                            }(Y, this.componentDef, M, h, [Y2]), Ro(m, M, null)
                        } finally {
                            Ya()
                        }
                        return new wT(this.componentType, I, Fs(H, M), M, H)
                    }
                }
                class wT extends class cT {} {
                    constructor(n, e, i, r, s) {
                        super(), this.location = i, this._rootLView = r, this._tNode = s, this.instance = e, this.hostView = this.changeDetectorRef = new vT(r), this.componentType = n
                    }
                    get injector() {
                        return new rs(this._tNode, this._rootLView)
                    }
                    destroy() {
                        this.hostView.destroy()
                    }
                    onDestroy(n) {
                        this.hostView.onDestroy(n)
                    }
                }
                class Bs {}
                const Ls = new Map;
                class x1 extends Bs {
                    constructor(n, e) {
                        super(), this._parent = e, this._bootstrapComponents = [], this.injector = this, this.destroyCbs = [], this.componentFactoryResolver = new v1(this);
                        const i = Ln(n);
                        this._bootstrapComponents = Si(i.bootstrap), this._r3Injector = bg(n, e, [{
                            provide: Bs,
                            useValue: this
                        }, {
                            provide: Ps,
                            useValue: this.componentFactoryResolver
                        }], nt(n)), this._r3Injector._resolveInjectorDefTypes(), this.instance = this.get(n)
                    }
                    get(n, e = Yt.THROW_IF_NOT_FOUND, i = Le.Default) {
                        return n === Yt || n === Bs || n === xd ? this : this._r3Injector.get(n, e, i)
                    }
                    destroy() {
                        const n = this._r3Injector;
                        !n.destroyed && n.destroy(), this.destroyCbs.forEach(e => e()), this.destroyCbs = null
                    }
                    onDestroy(n) {
                        this.destroyCbs.push(n)
                    }
                }
                class Qd extends class MT {} {
                    constructor(n) {
                        super(), this.moduleType = n, null !== Ln(n) && function TT(t) {
                            const n = new Set;
                            ! function e(i) {
                                const r = Ln(i, !0),
                                    s = r.id;
                                null !== s && (function b1(t, n, e) {
                                    if (n && n !== e) throw new Error(`Duplicate module registered for ${t} - ${nt(n)} vs ${nt(n.name)}`)
                                }(s, Ls.get(s), i), Ls.set(s, i));
                                const o = Si(r.imports);
                                for (const a of o) n.has(a) || (n.add(a), e(a))
                            }(t)
                        }(n)
                    }
                    create(n) {
                        return new x1(this.moduleType, n)
                    }
                }

                function Jd(t, n, e) {
                    const i = cn() + t,
                        r = ne();
                    return r[i] === Re ? ki(r, i, e ? n.call(e) : n()) : function Bo(t, n) {
                        return t[n]
                    }(r, i)
                }

                function Wo(t, n) {
                    const e = t[n];
                    return e === Re ? void 0 : e
                }

                function w1(t, n, e, i, r, s) {
                    const o = n + e;
                    return en(t, o, r) ? ki(t, o + 1, s ? i.call(s, r) : i(r)) : Wo(t, o + 1)
                }

                function qe(t, n) {
                    const e = Je();
                    let i;
                    const r = t + 20;
                    e.firstCreatePass ? (i = function OT(t, n) {
                        if (n)
                            for (let e = n.length - 1; e >= 0; e--) {
                                const i = n[e];
                                if (t === i.name) return i
                            }
                    }(n, e.pipeRegistry), e.data[r] = i, i.onDestroy && (e.destroyHooks || (e.destroyHooks = [])).push(r, i.onDestroy)) : i = e.data[r];
                    const s = i.factory || (i.factory = Er(i.type)),
                        o = Zi(F);
                    try {
                        const a = el(!1),
                            l = s();
                        return el(a),
                            function oC(t, n, e, i) {
                                e >= t.data.length && (t.data[e] = null, t.blueprint[e] = null), n[e] = i
                            }(e, ne(), r, l), l
                    } finally {
                        Zi(o)
                    }
                }

                function yt(t, n, e) {
                    const i = t + 20,
                        r = ne(),
                        s = es(r, i);
                    return Yo(r, i) ? w1(r, cn(), n, s.transform, e, s) : s.transform(e)
                }

                function tn(t, n, e, i) {
                    const r = t + 20,
                        s = ne(),
                        o = es(s, r);
                    return Yo(s, r) ? function C1(t, n, e, i, r, s, o) {
                        const a = n + e;
                        return Nr(t, a, r, s) ? ki(t, a + 2, o ? i.call(o, r, s) : i(r, s)) : Wo(t, a + 2)
                    }(s, cn(), n, o.transform, e, i, o) : o.transform(e, i)
                }

                function Yo(t, n) {
                    return t[1].data[n].pure
                }

                function ef(t) {
                    return n => {
                        setTimeout(t, void 0, n)
                    }
                }
                const Ke = class BT extends Te {
                    constructor(n = !1) {
                        super(), this.__isAsync = n
                    }
                    emit(n) {
                        super.next(n)
                    }
                    subscribe(n, e, i) {
                        var r, s, o;
                        let a = n,
                            l = e || (() => null),
                            c = i;
                        if (n && "object" == typeof n) {
                            const p = n;
                            a = null === (r = p.next) || void 0 === r ? void 0 : r.bind(p), l = null === (s = p.error) || void 0 === s ? void 0 : s.bind(p), c = null === (o = p.complete) || void 0 === o ? void 0 : o.bind(p)
                        }
                        this.__isAsync && (l = ef(l), a && (a = ef(a)), c && (c = ef(c)));
                        const u = super.subscribe({
                            next: a,
                            error: l,
                            complete: c
                        });
                        return n instanceof X && n.add(u), u
                    }
                };

                function LT() {
                    return this._results[Ds()]()
                }
                class tf {
                    constructor(n = !1) {
                        this._emitDistinctChangesOnly = n, this.dirty = !0, this._results = [], this._changesDetected = !1, this._changes = null, this.length = 0, this.first = void 0, this.last = void 0;
                        const e = Ds(),
                            i = tf.prototype;
                        i[e] || (i[e] = LT)
                    }
                    get changes() {
                        return this._changes || (this._changes = new Ke)
                    }
                    get(n) {
                        return this._results[n]
                    }
                    map(n) {
                        return this._results.map(n)
                    }
                    filter(n) {
                        return this._results.filter(n)
                    }
                    find(n) {
                        return this._results.find(n)
                    }
                    reduce(n, e) {
                        return this._results.reduce(n, e)
                    }
                    forEach(n) {
                        this._results.forEach(n)
                    }
                    some(n) {
                        return this._results.some(n)
                    }
                    toArray() {
                        return this._results.slice()
                    }
                    toString() {
                        return this._results.toString()
                    }
                    reset(n, e) {
                        const i = this;
                        i.dirty = !1;
                        const r = Gn(n);
                        (this._changesDetected = ! function tx(t, n, e) {
                            if (t.length !== n.length) return !1;
                            for (let i = 0; i < t.length; i++) {
                                let r = t[i],
                                    s = n[i];
                                if (e && (r = e(r), s = e(s)), s !== r) return !1
                            }
                            return !0
                        }(i._results, r, e)) && (i._results = r, i.length = r.length, i.last = r[this.length - 1], i.first = r[0])
                    }
                    notifyOnChanges() {
                        this._changes && (this._changesDetected || !this._emitDistinctChangesOnly) && this._changes.emit(this)
                    }
                    setDirty() {
                        this.dirty = !0
                    }
                    destroy() {
                        this.changes.complete(), this.changes.unsubscribe()
                    }
                }
                Symbol;
                let bt = (() => {
                    class t {}
                    return t.__NG_ELEMENT_ID__ = jT, t
                })();
                const VT = bt,
                    HT = class extends VT {
                        constructor(n, e, i) {
                            super(), this._declarationLView = n, this._declarationTContainer = e, this.elementRef = i
                        }
                        createEmbeddedView(n) {
                            const e = this._declarationTContainer.tViews,
                                i = Oo(this._declarationLView, e, n, 16, null, e.declTNode, null, null, null, null);
                            i[17] = this._declarationLView[this._declarationTContainer.index];
                            const s = this._declarationLView[19];
                            return null !== s && (i[19] = s.createEmbeddedView(e)), Ro(e, i, n), new qo(i)
                        }
                    };

                function jT() {
                    return Rl(Vt(), ne())
                }

                function Rl(t, n) {
                    return 4 & t.type ? new HT(n, t, Fs(t, n)) : null
                }
                let ui = (() => {
                    class t {}
                    return t.__NG_ELEMENT_ID__ = GT, t
                })();

                function GT() {
                    return N1(Vt(), ne())
                }
                const $T = ui,
                    E1 = class extends $T {
                        constructor(n, e, i) {
                            super(), this._lContainer = n, this._hostTNode = e, this._hostLView = i
                        }
                        get element() {
                            return Fs(this._hostTNode, this._hostLView)
                        }
                        get injector() {
                            return new rs(this._hostTNode, this._hostLView)
                        }
                        get parentInjector() {
                            const n = tl(this._hostTNode, this._hostLView);
                            if (Th(n)) {
                                const e = is(n, this._hostLView),
                                    i = ns(n);
                                return new rs(e[1].data[i + 8], e)
                            }
                            return new rs(null, this._hostLView)
                        }
                        clear() {
                            for (; this.length > 0;) this.remove(this.length - 1)
                        }
                        get(n) {
                            const e = k1(this._lContainer);
                            return null !== e && e[n] || null
                        }
                        get length() {
                            return this._lContainer.length - 10
                        }
                        createEmbeddedView(n, e, i) {
                            const r = n.createEmbeddedView(e || {});
                            return this.insert(r, i), r
                        }
                        createComponent(n, e, i, r, s) {
                            const o = n && ! function bo(t) {
                                return "function" == typeof t
                            }(n);
                            let a;
                            if (o) a = e;
                            else {
                                const p = e || {};
                                a = p.index, i = p.injector, r = p.projectableNodes, s = p.ngModuleRef
                            }
                            const l = o ? n : new Zd(Qt(n)),
                                c = i || this.parentInjector;
                            if (!s && null == l.ngModule && c) {
                                const p = c.get(Bs, null);
                                p && (s = p)
                            }
                            const u = l.create(c, r, void 0, s);
                            return this.insert(u.hostView, a), u
                        }
                        insert(n, e) {
                            const i = n._lView,
                                r = i[1];
                            if (function wD(t) {
                                    return ti(t[3])
                                }(i)) {
                                const u = this.indexOf(n);
                                if (-1 !== u) this.detach(u);
                                else {
                                    const p = i[3],
                                        h = new E1(p, p[6], p[3]);
                                    h.detach(h.indexOf(n))
                                }
                            }
                            const s = this._adjustIndex(e),
                                o = this._lContainer;
                            ! function ww(t, n, e, i) {
                                const r = 10 + i,
                                    s = e.length;
                                i > 0 && (e[r - 1][4] = n), i < s - 10 ? (n[4] = e[r], Fh(e, 10 + i, n)) : (e.push(n), n[4] = null), n[3] = e;
                                const o = n[17];
                                null !== o && e !== o && function Cw(t, n) {
                                    const e = t[9];
                                    n[16] !== n[3][3][16] && (t[2] = !0), null === e ? t[9] = [n] : e.push(n)
                                }(o, n);
                                const a = n[19];
                                null !== a && a.insertView(t), n[2] |= 128
                            }(r, i, o, s);
                            const a = Ju(s, o),
                                l = i[11],
                                c = pl(l, o[7]);
                            return null !== c && function bw(t, n, e, i, r, s) {
                                i[0] = r, i[6] = n, Io(t, i, e, 1, r, s)
                            }(r, o[6], l, i, c, a), n.attachToViewContainerRef(), Fh(nf(o), s, n), n
                        }
                        move(n, e) {
                            return this.insert(n, e)
                        }
                        indexOf(n) {
                            const e = k1(this._lContainer);
                            return null !== e ? e.indexOf(n) : -1
                        }
                        remove(n) {
                            const e = this._adjustIndex(n, -1),
                                i = Ku(this._lContainer, e);
                            i && (rl(nf(this._lContainer), e), D0(i[1], i))
                        }
                        detach(n) {
                            const e = this._adjustIndex(n, -1),
                                i = Ku(this._lContainer, e);
                            return i && null != rl(nf(this._lContainer), e) ? new qo(i) : null
                        }
                        _adjustIndex(n, e = 0) {
                            return null == n ? this.length + e : n
                        }
                    };

                function k1(t) {
                    return t[8]
                }

                function nf(t) {
                    return t[8] || (t[8] = [])
                }

                function N1(t, n) {
                    let e;
                    const i = n[t.index];
                    if (ti(i)) e = i;
                    else {
                        let r;
                        if (8 & t.type) r = Rt(i);
                        else {
                            const s = n[11];
                            r = s.createComment("");
                            const o = jn(t, n);
                            kr(s, pl(s, o), r, function Ew(t, n) {
                                return Ct(t) ? t.nextSibling(n) : n.nextSibling
                            }(s, o), !1)
                        }
                        n[t.index] = e = ug(i, n, r, t), bl(n, e)
                    }
                    return new E1(e, t, n)
                }
                class rf {
                    constructor(n) {
                        this.queryList = n, this.matches = null
                    }
                    clone() {
                        return new rf(this.queryList)
                    }
                    setDirty() {
                        this.queryList.setDirty()
                    }
                }
                class sf {
                    constructor(n = []) {
                        this.queries = n
                    }
                    createEmbeddedView(n) {
                        const e = n.queries;
                        if (null !== e) {
                            const i = null !== n.contentQueries ? n.contentQueries[0] : e.length,
                                r = [];
                            for (let s = 0; s < i; s++) {
                                const o = e.getByIndex(s);
                                r.push(this.queries[o.indexInDeclarationView].clone())
                            }
                            return new sf(r)
                        }
                        return null
                    }
                    insertView(n) {
                        this.dirtyQueriesWithMatches(n)
                    }
                    detachView(n) {
                        this.dirtyQueriesWithMatches(n)
                    }
                    dirtyQueriesWithMatches(n) {
                        for (let e = 0; e < this.queries.length; e++) null !== P1(n, e).matches && this.queries[e].setDirty()
                    }
                }
                class A1 {
                    constructor(n, e, i = null) {
                        this.predicate = n, this.flags = e, this.read = i
                    }
                }
                class af {
                    constructor(n = []) {
                        this.queries = n
                    }
                    elementStart(n, e) {
                        for (let i = 0; i < this.queries.length; i++) this.queries[i].elementStart(n, e)
                    }
                    elementEnd(n) {
                        for (let e = 0; e < this.queries.length; e++) this.queries[e].elementEnd(n)
                    }
                    embeddedTView(n) {
                        let e = null;
                        for (let i = 0; i < this.length; i++) {
                            const r = null !== e ? e.length : 0,
                                s = this.getByIndex(i).embeddedTView(n, r);
                            s && (s.indexInDeclarationView = i, null !== e ? e.push(s) : e = [s])
                        }
                        return null !== e ? new af(e) : null
                    }
                    template(n, e) {
                        for (let i = 0; i < this.queries.length; i++) this.queries[i].template(n, e)
                    }
                    getByIndex(n) {
                        return this.queries[n]
                    }
                    get length() {
                        return this.queries.length
                    }
                    track(n) {
                        this.queries.push(n)
                    }
                }
                class lf {
                    constructor(n, e = -1) {
                        this.metadata = n, this.matches = null, this.indexInDeclarationView = -1, this.crossesNgTemplate = !1, this._appliesToNextNode = !0, this._declarationNodeIndex = e
                    }
                    elementStart(n, e) {
                        this.isApplyingToNode(e) && this.matchTNode(n, e)
                    }
                    elementEnd(n) {
                        this._declarationNodeIndex === n.index && (this._appliesToNextNode = !1)
                    }
                    template(n, e) {
                        this.elementStart(n, e)
                    }
                    embeddedTView(n, e) {
                        return this.isApplyingToNode(n) ? (this.crossesNgTemplate = !0, this.addMatch(-n.index, e), new lf(this.metadata)) : null
                    }
                    isApplyingToNode(n) {
                        if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
                            const e = this._declarationNodeIndex;
                            let i = n.parent;
                            for (; null !== i && 8 & i.type && i.index !== e;) i = i.parent;
                            return e === (null !== i ? i.index : -1)
                        }
                        return this._appliesToNextNode
                    }
                    matchTNode(n, e) {
                        const i = this.metadata.predicate;
                        if (Array.isArray(i))
                            for (let r = 0; r < i.length; r++) {
                                const s = i[r];
                                this.matchTNodeWithReadOption(n, e, zT(e, s)), this.matchTNodeWithReadOption(n, e, il(e, n, s, !1, !1))
                            } else i === bt ? 4 & e.type && this.matchTNodeWithReadOption(n, e, -1) : this.matchTNodeWithReadOption(n, e, il(e, n, i, !1, !1))
                    }
                    matchTNodeWithReadOption(n, e, i) {
                        if (null !== i) {
                            const r = this.metadata.read;
                            if (null !== r)
                                if (r === gt || r === ui || r === bt && 4 & e.type) this.addMatch(e.index, -2);
                                else {
                                    const s = il(e, n, r, !1, !1);
                                    null !== s && this.addMatch(e.index, s)
                                }
                            else this.addMatch(e.index, i)
                        }
                    }
                    addMatch(n, e) {
                        null === this.matches ? this.matches = [n, e] : this.matches.push(n, e)
                    }
                }

                function zT(t, n) {
                    const e = t.localNames;
                    if (null !== e)
                        for (let i = 0; i < e.length; i += 2)
                            if (e[i] === n) return e[i + 1];
                    return null
                }

                function YT(t, n, e, i) {
                    return -1 === e ? function WT(t, n) {
                        return 11 & t.type ? Fs(t, n) : 4 & t.type ? Rl(t, n) : null
                    }(n, t) : -2 === e ? function KT(t, n, e) {
                        return e === gt ? Fs(n, t) : e === bt ? Rl(n, t) : e === ui ? N1(n, t) : void 0
                    }(t, n, i) : _o(t, t[1], e, n)
                }

                function I1(t, n, e, i) {
                    const r = n[19].queries[i];
                    if (null === r.matches) {
                        const s = t.data,
                            o = e.matches,
                            a = [];
                        for (let l = 0; l < o.length; l += 2) {
                            const c = o[l];
                            a.push(c < 0 ? null : YT(n, s[c], o[l + 1], e.metadata.read))
                        }
                        r.matches = a
                    }
                    return r.matches
                }

                function cf(t, n, e, i) {
                    const r = t.queries.getByIndex(e),
                        s = r.matches;
                    if (null !== s) {
                        const o = I1(t, n, r, e);
                        for (let a = 0; a < s.length; a += 2) {
                            const l = s[a];
                            if (l > 0) i.push(o[a / 2]);
                            else {
                                const c = s[a + 1],
                                    u = n[-l];
                                for (let p = 10; p < u.length; p++) {
                                    const h = u[p];
                                    h[17] === h[3] && cf(h[1], h, c, i)
                                }
                                if (null !== u[9]) {
                                    const p = u[9];
                                    for (let h = 0; h < p.length; h++) {
                                        const m = p[h];
                                        cf(m[1], m, c, i)
                                    }
                                }
                            }
                        }
                    }
                    return i
                }

                function St(t) {
                    const n = ne(),
                        e = Je(),
                        i = _h();
                    _u(i + 1);
                    const r = P1(e, i);
                    if (t.dirty && dh(n) === (2 == (2 & r.metadata.flags))) {
                        if (null === r.matches) t.reset([]);
                        else {
                            const s = r.crossesNgTemplate ? cf(e, n, i, []) : I1(e, n, r, i);
                            t.reset(s, pT), t.notifyOnChanges()
                        }
                        return !0
                    }
                    return !1
                }

                function Pl(t, n, e) {
                    const i = Je();
                    i.firstCreatePass && (R1(i, new A1(t, n, e), -1), 2 == (2 & n) && (i.staticViewQueries = !0)), O1(i, ne(), n)
                }

                function Gt(t, n, e, i) {
                    const r = Je();
                    if (r.firstCreatePass) {
                        const s = Vt();
                        R1(r, new A1(n, e, i), s.index),
                            function QT(t, n) {
                                const e = t.contentQueries || (t.contentQueries = []);
                                n !== (e.length ? e[e.length - 1] : -1) && e.push(t.queries.length - 1, n)
                            }(r, t), 2 == (2 & e) && (r.staticContentQueries = !0)
                    }
                    O1(r, ne(), e)
                }

                function Et() {
                    return function ZT(t, n) {
                        return t[19].queries[n].queryList
                    }(ne(), _h())
                }

                function O1(t, n, e) {
                    const i = new tf(4 == (4 & e));
                    ng(t, n, i, i.destroy), null === n[19] && (n[19] = new sf), n[19].queries.push(new rf(i))
                }

                function R1(t, n, e) {
                    null === t.queries && (t.queries = new af), t.queries.track(new lf(n, e))
                }

                function P1(t, n) {
                    return t.queries.getByIndex(n)
                }

                function mt(t, n) {
                    return Rl(t, n)
                }

                function Ll(...t) {}
                const gf = new Ze("Application Initializer");
                let Hs = (() => {
                    class t {
                        constructor(e) {
                            this.appInits = e, this.resolve = Ll, this.reject = Ll, this.initialized = !1, this.done = !1, this.donePromise = new Promise((i, r) => {
                                this.resolve = i, this.reject = r
                            })
                        }
                        runInitializers() {
                            if (this.initialized) return;
                            const e = [],
                                i = () => {
                                    this.done = !0, this.resolve()
                                };
                            if (this.appInits)
                                for (let r = 0; r < this.appInits.length; r++) {
                                    const s = this.appInits[r]();
                                    if (Ml(s)) e.push(s);
                                    else if (tm(s)) {
                                        const o = new Promise((a, l) => {
                                            s.subscribe({
                                                complete: a,
                                                error: l
                                            })
                                        });
                                        e.push(o)
                                    }
                                }
                            Promise.all(e).then(() => {
                                i()
                            }).catch(r => {
                                this.reject(r)
                            }), 0 === e.length && i(), this.initialized = !0
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(gf, 8))
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
                const Zo = new Ze("AppId"),
                    gS = {
                        provide: Zo,
                        useFactory: function hS() {
                            return `${mf()}${mf()}${mf()}`
                        },
                        deps: []
                    };

                function mf() {
                    return String.fromCharCode(97 + Math.floor(25 * Math.random()))
                }
                const J1 = new Ze("Platform Initializer"),
                    Vl = new Ze("Platform ID"),
                    mS = new Ze("appBootstrapListener");
                let _S = (() => {
                    class t {
                        log(e) {
                            console.log(e)
                        }
                        warn(e) {
                            console.warn(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
                const ar = new Ze("LocaleId"),
                    X1 = new Ze("DefaultCurrencyCode");
                class vS {
                    constructor(n, e) {
                        this.ngModuleFactory = n, this.componentFactories = e
                    }
                }
                let e_ = (() => {
                    class t {
                        compileModuleSync(e) {
                            return new Qd(e)
                        }
                        compileModuleAsync(e) {
                            return Promise.resolve(this.compileModuleSync(e))
                        }
                        compileModuleAndAllComponentsSync(e) {
                            const i = this.compileModuleSync(e),
                                s = Si(Ln(e).declarations).reduce((o, a) => {
                                    const l = Qt(a);
                                    return l && o.push(new Zd(l)), o
                                }, []);
                            return new vS(i, s)
                        }
                        compileModuleAndAllComponentsAsync(e) {
                            return Promise.resolve(this.compileModuleAndAllComponentsSync(e))
                        }
                        clearCache() {}
                        clearCacheFor(e) {}
                        getModuleId(e) {}
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
                const bS = (() => Promise.resolve(0))();

                function _f(t) {
                    "undefined" == typeof Zone ? bS.then(() => {
                        t && t.apply(null, null)
                    }) : Zone.current.scheduleMicroTask("scheduleMicrotask", t)
                }
                class Dt {
                    constructor({
                        enableLongStackTrace: n = !1,
                        shouldCoalesceEventChangeDetection: e = !1,
                        shouldCoalesceRunChangeDetection: i = !1
                    }) {
                        if (this.hasPendingMacrotasks = !1, this.hasPendingMicrotasks = !1, this.isStable = !0, this.onUnstable = new Ke(!1), this.onMicrotaskEmpty = new Ke(!1), this.onStable = new Ke(!1), this.onError = new Ke(!1), "undefined" == typeof Zone) throw new Error("In this configuration Angular requires Zone.js");
                        Zone.assertZonePatched();
                        const r = this;
                        r._nesting = 0, r._outer = r._inner = Zone.current, Zone.TaskTrackingZoneSpec && (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec)), n && Zone.longStackTraceZoneSpec && (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)), r.shouldCoalesceEventChangeDetection = !i && e, r.shouldCoalesceRunChangeDetection = i, r.lastRequestAnimationFrameId = -1, r.nativeRequestAnimationFrame = function DS() {
                                let t = rt.requestAnimationFrame,
                                    n = rt.cancelAnimationFrame;
                                if ("undefined" != typeof Zone && t && n) {
                                    const e = t[Zone.__symbol__("OriginalDelegate")];
                                    e && (t = e);
                                    const i = n[Zone.__symbol__("OriginalDelegate")];
                                    i && (n = i)
                                }
                                return {
                                    nativeRequestAnimationFrame: t,
                                    nativeCancelAnimationFrame: n
                                }
                            }().nativeRequestAnimationFrame,
                            function CS(t) {
                                const n = () => {
                                    ! function wS(t) {
                                        t.isCheckStableRunning || -1 !== t.lastRequestAnimationFrameId || (t.lastRequestAnimationFrameId = t.nativeRequestAnimationFrame.call(rt, () => {
                                            t.fakeTopEventTask || (t.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => {
                                                t.lastRequestAnimationFrameId = -1, yf(t), t.isCheckStableRunning = !0, vf(t), t.isCheckStableRunning = !1
                                            }, void 0, () => {}, () => {})), t.fakeTopEventTask.invoke()
                                        }), yf(t))
                                    }(t)
                                };
                                t._inner = t._inner.fork({
                                    name: "angular",
                                    properties: {
                                        isAngularZone: !0
                                    },
                                    onInvokeTask: (e, i, r, s, o, a) => {
                                        try {
                                            return t_(t), e.invokeTask(r, s, o, a)
                                        } finally {
                                            (t.shouldCoalesceEventChangeDetection && "eventTask" === s.type || t.shouldCoalesceRunChangeDetection) && n(), n_(t)
                                        }
                                    },
                                    onInvoke: (e, i, r, s, o, a, l) => {
                                        try {
                                            return t_(t), e.invoke(r, s, o, a, l)
                                        } finally {
                                            t.shouldCoalesceRunChangeDetection && n(), n_(t)
                                        }
                                    },
                                    onHasTask: (e, i, r, s) => {
                                        e.hasTask(r, s), i === r && ("microTask" == s.change ? (t._hasPendingMicrotasks = s.microTask, yf(t), vf(t)) : "macroTask" == s.change && (t.hasPendingMacrotasks = s.macroTask))
                                    },
                                    onHandleError: (e, i, r, s) => (e.handleError(r, s), t.runOutsideAngular(() => t.onError.emit(s)), !1)
                                })
                            }(r)
                    }
                    static isInAngularZone() {
                        return "undefined" != typeof Zone && !0 === Zone.current.get("isAngularZone")
                    }
                    static assertInAngularZone() {
                        if (!Dt.isInAngularZone()) throw new Error("Expected to be in Angular Zone, but it is not!")
                    }
                    static assertNotInAngularZone() {
                        if (Dt.isInAngularZone()) throw new Error("Expected to not be in Angular Zone, but it is!")
                    }
                    run(n, e, i) {
                        return this._inner.run(n, e, i)
                    }
                    runTask(n, e, i, r) {
                        const s = this._inner,
                            o = s.scheduleEventTask("NgZoneEvent: " + r, n, xS, Ll, Ll);
                        try {
                            return s.runTask(o, e, i)
                        } finally {
                            s.cancelTask(o)
                        }
                    }
                    runGuarded(n, e, i) {
                        return this._inner.runGuarded(n, e, i)
                    }
                    runOutsideAngular(n) {
                        return this._outer.run(n)
                    }
                }
                const xS = {};

                function vf(t) {
                    if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable) try {
                        t._nesting++, t.onMicrotaskEmpty.emit(null)
                    } finally {
                        if (t._nesting--, !t.hasPendingMicrotasks) try {
                            t.runOutsideAngular(() => t.onStable.emit(null))
                        } finally {
                            t.isStable = !0
                        }
                    }
                }

                function yf(t) {
                    t.hasPendingMicrotasks = !!(t._hasPendingMicrotasks || (t.shouldCoalesceEventChangeDetection || t.shouldCoalesceRunChangeDetection) && -1 !== t.lastRequestAnimationFrameId)
                }

                function t_(t) {
                    t._nesting++, t.isStable && (t.isStable = !1, t.onUnstable.emit(null))
                }

                function n_(t) {
                    t._nesting--, vf(t)
                }
                class MS {
                    constructor() {
                        this.hasPendingMicrotasks = !1, this.hasPendingMacrotasks = !1, this.isStable = !0, this.onUnstable = new Ke, this.onMicrotaskEmpty = new Ke, this.onStable = new Ke, this.onError = new Ke
                    }
                    run(n, e, i) {
                        return n.apply(e, i)
                    }
                    runGuarded(n, e, i) {
                        return n.apply(e, i)
                    }
                    runOutsideAngular(n) {
                        return n()
                    }
                    runTask(n, e, i, r) {
                        return n.apply(e, i)
                    }
                }
                let bf = (() => {
                        class t {
                            constructor(e) {
                                this._ngZone = e, this._pendingCount = 0, this._isZoneStable = !0, this._didWork = !1, this._callbacks = [], this.taskTrackingZone = null, this._watchAngularEvents(), e.run(() => {
                                    this.taskTrackingZone = "undefined" == typeof Zone ? null : Zone.current.get("TaskTrackingZone")
                                })
                            }
                            _watchAngularEvents() {
                                this._ngZone.onUnstable.subscribe({
                                    next: () => {
                                        this._didWork = !0, this._isZoneStable = !1
                                    }
                                }), this._ngZone.runOutsideAngular(() => {
                                    this._ngZone.onStable.subscribe({
                                        next: () => {
                                            Dt.assertNotInAngularZone(), _f(() => {
                                                this._isZoneStable = !0, this._runCallbacksIfReady()
                                            })
                                        }
                                    })
                                })
                            }
                            increasePendingRequestCount() {
                                return this._pendingCount += 1, this._didWork = !0, this._pendingCount
                            }
                            decreasePendingRequestCount() {
                                if (this._pendingCount -= 1, this._pendingCount < 0) throw new Error("pending async requests below zero");
                                return this._runCallbacksIfReady(), this._pendingCount
                            }
                            isStable() {
                                return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks
                            }
                            _runCallbacksIfReady() {
                                if (this.isStable()) _f(() => {
                                    for (; 0 !== this._callbacks.length;) {
                                        let e = this._callbacks.pop();
                                        clearTimeout(e.timeoutId), e.doneCb(this._didWork)
                                    }
                                    this._didWork = !1
                                });
                                else {
                                    let e = this.getPendingTasks();
                                    this._callbacks = this._callbacks.filter(i => !i.updateCb || !i.updateCb(e) || (clearTimeout(i.timeoutId), !1)), this._didWork = !0
                                }
                            }
                            getPendingTasks() {
                                return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(e => ({
                                    source: e.source,
                                    creationLocation: e.creationLocation,
                                    data: e.data
                                })) : []
                            }
                            addCallback(e, i, r) {
                                let s = -1;
                                i && i > 0 && (s = setTimeout(() => {
                                    this._callbacks = this._callbacks.filter(o => o.timeoutId !== s), e(this._didWork, this.getPendingTasks())
                                }, i)), this._callbacks.push({
                                    doneCb: e,
                                    timeoutId: s,
                                    updateCb: r
                                })
                            }
                            whenStable(e, i, r) {
                                if (r && !this.taskTrackingZone) throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');
                                this.addCallback(e, i, r), this._runCallbacksIfReady()
                            }
                            getPendingRequestCount() {
                                return this._pendingCount
                            }
                            findProviders(e, i, r) {
                                return []
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(Dt))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac
                        }), t
                    })(),
                    i_ = (() => {
                        class t {
                            constructor() {
                                this._applications = new Map, Df.addToWindow(this)
                            }
                            registerApplication(e, i) {
                                this._applications.set(e, i)
                            }
                            unregisterApplication(e) {
                                this._applications.delete(e)
                            }
                            unregisterAllApplications() {
                                this._applications.clear()
                            }
                            getTestability(e) {
                                return this._applications.get(e) || null
                            }
                            getAllTestabilities() {
                                return Array.from(this._applications.values())
                            }
                            getAllRootElements() {
                                return Array.from(this._applications.keys())
                            }
                            findTestabilityInTree(e, i = !0) {
                                return Df.findTestabilityInTree(this, e, i)
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac
                        }), t
                    })();
                class TS {
                    addToWindow(n) {}
                    findTestabilityInTree(n, e, i) {
                        return null
                    }
                }
                let di, Df = new TS;
                const r_ = new Ze("AllowMultipleToken");

                function s_(t, n, e = []) {
                    const i = `Platform: ${n}`,
                        r = new Ze(i);
                    return (s = []) => {
                        let o = o_();
                        if (!o || o.injector.get(r_, !1))
                            if (t) t(e.concat(s).concat({
                                provide: r,
                                useValue: !0
                            }));
                            else {
                                const a = e.concat(s).concat({
                                    provide: r,
                                    useValue: !0
                                }, {
                                    provide: wd,
                                    useValue: "platform"
                                });
                                ! function NS(t) {
                                    if (di && !di.destroyed && !di.injector.get(r_, !1)) throw new Qe(400, "");
                                    di = t.get(a_);
                                    const n = t.get(J1, null);
                                    n && n.forEach(e => e())
                                }(Yt.create({
                                    providers: a,
                                    name: i
                                }))
                            } return function AS(t) {
                            const n = o_();
                            if (!n) throw new Qe(401, "");
                            return n
                        }()
                    }
                }

                function o_() {
                    return di && !di.destroyed ? di : null
                }
                let a_ = (() => {
                    class t {
                        constructor(e) {
                            this._injector = e, this._modules = [], this._destroyListeners = [], this._destroyed = !1
                        }
                        bootstrapModuleFactory(e, i) {
                            const a = function IS(t, n) {
                                    let e;
                                    return e = "noop" === t ? new MS : ("zone.js" === t ? void 0 : t) || new Dt({
                                        enableLongStackTrace: !1,
                                        shouldCoalesceEventChangeDetection: !!(null == n ? void 0 : n.ngZoneEventCoalescing),
                                        shouldCoalesceRunChangeDetection: !!(null == n ? void 0 : n.ngZoneRunCoalescing)
                                    }), e
                                }(i ? i.ngZone : void 0, {
                                    ngZoneEventCoalescing: i && i.ngZoneEventCoalescing || !1,
                                    ngZoneRunCoalescing: i && i.ngZoneRunCoalescing || !1
                                }),
                                l = [{
                                    provide: Dt,
                                    useValue: a
                                }];
                            return a.run(() => {
                                const c = Yt.create({
                                        providers: l,
                                        parent: this.injector,
                                        name: e.moduleType.name
                                    }),
                                    u = e.create(c),
                                    p = u.injector.get(ps, null);
                                if (!p) throw new Qe(402, "");
                                return a.runOutsideAngular(() => {
                                        const h = a.onError.subscribe({
                                            next: m => {
                                                p.handleError(m)
                                            }
                                        });
                                        u.onDestroy(() => {
                                            xf(this._modules, u), h.unsubscribe()
                                        })
                                    }),
                                    function OS(t, n, e) {
                                        try {
                                            const i = e();
                                            return Ml(i) ? i.catch(r => {
                                                throw n.runOutsideAngular(() => t.handleError(r)), r
                                            }) : i
                                        } catch (i) {
                                            throw n.runOutsideAngular(() => t.handleError(i)), i
                                        }
                                    }(p, a, () => {
                                        const h = u.injector.get(Hs);
                                        return h.runInitializers(), h.donePromise.then(() => (function mM(t) {
                                            Tn(t, "Expected localeId to be defined"), "string" == typeof t && (Um = t.toLowerCase().replace(/_/g, "-"))
                                        }(u.injector.get(ar, Sl) || Sl), this._moduleDoBootstrap(u), u))
                                    })
                            })
                        }
                        bootstrapModule(e, i = []) {
                            const r = l_({}, i);
                            return function ES(t, n, e) {
                                const i = new Qd(e);
                                return Promise.resolve(i)
                            }(0, 0, e).then(s => this.bootstrapModuleFactory(s, r))
                        }
                        _moduleDoBootstrap(e) {
                            const i = e.injector.get(js);
                            if (e._bootstrapComponents.length > 0) e._bootstrapComponents.forEach(r => i.bootstrap(r));
                            else {
                                if (!e.instance.ngDoBootstrap) throw new Qe(403, "");
                                e.instance.ngDoBootstrap(i)
                            }
                            this._modules.push(e)
                        }
                        onDestroy(e) {
                            this._destroyListeners.push(e)
                        }
                        get injector() {
                            return this._injector
                        }
                        destroy() {
                            if (this._destroyed) throw new Qe(404, "");
                            this._modules.slice().forEach(e => e.destroy()), this._destroyListeners.forEach(e => e()), this._destroyed = !0
                        }
                        get destroyed() {
                            return this._destroyed
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(Yt))
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();

                function l_(t, n) {
                    return Array.isArray(n) ? n.reduce(l_, t) : Object.assign(Object.assign({}, t), n)
                }
                let js = (() => {
                    class t {
                        constructor(e, i, r, s, o) {
                            this._zone = e, this._injector = i, this._exceptionHandler = r, this._componentFactoryResolver = s, this._initStatus = o, this._bootstrapListeners = [], this._views = [], this._runningTick = !1, this._stable = !0, this.componentTypes = [], this.components = [], this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({
                                next: () => {
                                    this._zone.run(() => {
                                        this.tick()
                                    })
                                }
                            });
                            const a = new le(c => {
                                    this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks, this._zone.runOutsideAngular(() => {
                                        c.next(this._stable), c.complete()
                                    })
                                }),
                                l = new le(c => {
                                    let u;
                                    this._zone.runOutsideAngular(() => {
                                        u = this._zone.onStable.subscribe(() => {
                                            Dt.assertNotInAngularZone(), _f(() => {
                                                !this._stable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks && (this._stable = !0, c.next(!0))
                                            })
                                        })
                                    });
                                    const p = this._zone.onUnstable.subscribe(() => {
                                        Dt.assertInAngularZone(), this._stable && (this._stable = !1, this._zone.runOutsideAngular(() => {
                                            c.next(!1)
                                        }))
                                    });
                                    return () => {
                                        u.unsubscribe(), p.unsubscribe()
                                    }
                                });
                            this.isStable = Yp(a, l.pipe(Kp()))
                        }
                        bootstrap(e, i) {
                            if (!this._initStatus.done) throw new Qe(405, "");
                            let r;
                            r = e instanceof m1 ? e : this._componentFactoryResolver.resolveComponentFactory(e), this.componentTypes.push(r.componentType);
                            const s = function kS(t) {
                                    return t.isBoundToModule
                                }(r) ? void 0 : this._injector.get(Bs),
                                a = r.create(Yt.NULL, [], i || r.selector, s),
                                l = a.location.nativeElement,
                                c = a.injector.get(bf, null),
                                u = c && a.injector.get(i_);
                            return c && u && u.registerApplication(l, c), a.onDestroy(() => {
                                this.detachView(a.hostView), xf(this.components, a), u && u.unregisterApplication(l)
                            }), this._loadComponent(a), a
                        }
                        tick() {
                            if (this._runningTick) throw new Qe(101, "");
                            try {
                                this._runningTick = !0;
                                for (let e of this._views) e.detectChanges()
                            } catch (e) {
                                this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e))
                            } finally {
                                this._runningTick = !1
                            }
                        }
                        attachView(e) {
                            const i = e;
                            this._views.push(i), i.attachToAppRef(this)
                        }
                        detachView(e) {
                            const i = e;
                            xf(this._views, i), i.detachFromAppRef()
                        }
                        _loadComponent(e) {
                            this.attachView(e.hostView), this.tick(), this.components.push(e), this._injector.get(mS, []).concat(this._bootstrapListeners).forEach(r => r(e))
                        }
                        ngOnDestroy() {
                            this._views.slice().forEach(e => e.destroy()), this._onMicrotaskEmptySubscription.unsubscribe()
                        }
                        get viewCount() {
                            return this._views.length
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(Dt), Ce(Yt), Ce(ps), Ce(Ps), Ce(Hs))
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();

                function xf(t, n) {
                    const e = t.indexOf(n);
                    e > -1 && t.splice(e, 1)
                }
                let u_ = !0,
                    Oi = (() => {
                        class t {}
                        return t.__NG_ELEMENT_ID__ = FS, t
                    })();

                function FS(t) {
                    return function BS(t, n, e) {
                        if (Ga(t) && !e) {
                            const i = En(t.index, n);
                            return new qo(i, i)
                        }
                        return 47 & t.type ? new qo(n[16], n) : null
                    }(Vt(), ne(), 16 == (16 & t))
                }
                class __ {
                    constructor() {}
                    supports(n) {
                        return Fo(n)
                    }
                    create(n) {
                        return new $S(n)
                    }
                }
                const GS = (t, n) => n;
                class $S {
                    constructor(n) {
                        this.length = 0, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null, this._identityChangesHead = null, this._identityChangesTail = null, this._trackByFn = n || GS
                    }
                    forEachItem(n) {
                        let e;
                        for (e = this._itHead; null !== e; e = e._next) n(e)
                    }
                    forEachOperation(n) {
                        let e = this._itHead,
                            i = this._removalsHead,
                            r = 0,
                            s = null;
                        for (; e || i;) {
                            const o = !i || e && e.currentIndex < y_(i, r, s) ? e : i,
                                a = y_(o, r, s),
                                l = o.currentIndex;
                            if (o === i) r--, i = i._nextRemoved;
                            else if (e = e._next, null == o.previousIndex) r++;
                            else {
                                s || (s = []);
                                const c = a - r,
                                    u = l - r;
                                if (c != u) {
                                    for (let h = 0; h < c; h++) {
                                        const m = h < s.length ? s[h] : s[h] = 0,
                                            M = m + h;
                                        u <= M && M < c && (s[h] = m + 1)
                                    }
                                    s[o.previousIndex] = u - c
                                }
                            }
                            a !== l && n(o, a, l)
                        }
                    }
                    forEachPreviousItem(n) {
                        let e;
                        for (e = this._previousItHead; null !== e; e = e._nextPrevious) n(e)
                    }
                    forEachAddedItem(n) {
                        let e;
                        for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e)
                    }
                    forEachMovedItem(n) {
                        let e;
                        for (e = this._movesHead; null !== e; e = e._nextMoved) n(e)
                    }
                    forEachRemovedItem(n) {
                        let e;
                        for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e)
                    }
                    forEachIdentityChange(n) {
                        let e;
                        for (e = this._identityChangesHead; null !== e; e = e._nextIdentityChange) n(e)
                    }
                    diff(n) {
                        if (null == n && (n = []), !Fo(n)) throw new Qe(900, "");
                        return this.check(n) ? this : null
                    }
                    onDestroy() {}
                    check(n) {
                        this._reset();
                        let r, s, o, e = this._itHead,
                            i = !1;
                        if (Array.isArray(n)) {
                            this.length = n.length;
                            for (let a = 0; a < this.length; a++) s = n[a], o = this._trackByFn(a, s), null !== e && Object.is(e.trackById, o) ? (i && (e = this._verifyReinsertion(e, s, o, a)), Object.is(e.item, s) || this._addIdentityChange(e, s)) : (e = this._mismatch(e, s, o, a), i = !0), e = e._next
                        } else r = 0,
                            function rC(t, n) {
                                if (Array.isArray(t))
                                    for (let e = 0; e < t.length; e++) n(t[e]);
                                else {
                                    const e = t[Ds()]();
                                    let i;
                                    for (; !(i = e.next()).done;) n(i.value)
                                }
                            }(n, a => {
                                o = this._trackByFn(r, a), null !== e && Object.is(e.trackById, o) ? (i && (e = this._verifyReinsertion(e, a, o, r)), Object.is(e.item, a) || this._addIdentityChange(e, a)) : (e = this._mismatch(e, a, o, r), i = !0), e = e._next, r++
                            }), this.length = r;
                        return this._truncate(e), this.collection = n, this.isDirty
                    }
                    get isDirty() {
                        return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead
                    }
                    _reset() {
                        if (this.isDirty) {
                            let n;
                            for (n = this._previousItHead = this._itHead; null !== n; n = n._next) n._nextPrevious = n._next;
                            for (n = this._additionsHead; null !== n; n = n._nextAdded) n.previousIndex = n.currentIndex;
                            for (this._additionsHead = this._additionsTail = null, n = this._movesHead; null !== n; n = n._nextMoved) n.previousIndex = n.currentIndex;
                            this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null, this._identityChangesHead = this._identityChangesTail = null
                        }
                    }
                    _mismatch(n, e, i, r) {
                        let s;
                        return null === n ? s = this._itTail : (s = n._prev, this._remove(n)), null !== (n = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(i, null)) ? (Object.is(n.item, e) || this._addIdentityChange(n, e), this._reinsertAfter(n, s, r)) : null !== (n = null === this._linkedRecords ? null : this._linkedRecords.get(i, r)) ? (Object.is(n.item, e) || this._addIdentityChange(n, e), this._moveAfter(n, s, r)) : n = this._addAfter(new qS(e, i), s, r), n
                    }
                    _verifyReinsertion(n, e, i, r) {
                        let s = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(i, null);
                        return null !== s ? n = this._reinsertAfter(s, n._prev, r) : n.currentIndex != r && (n.currentIndex = r, this._addToMoves(n, r)), n
                    }
                    _truncate(n) {
                        for (; null !== n;) {
                            const e = n._next;
                            this._addToRemovals(this._unlink(n)), n = e
                        }
                        null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null), null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null)
                    }
                    _reinsertAfter(n, e, i) {
                        null !== this._unlinkedRecords && this._unlinkedRecords.remove(n);
                        const r = n._prevRemoved,
                            s = n._nextRemoved;
                        return null === r ? this._removalsHead = s : r._nextRemoved = s, null === s ? this._removalsTail = r : s._prevRemoved = r, this._insertAfter(n, e, i), this._addToMoves(n, i), n
                    }
                    _moveAfter(n, e, i) {
                        return this._unlink(n), this._insertAfter(n, e, i), this._addToMoves(n, i), n
                    }
                    _addAfter(n, e, i) {
                        return this._insertAfter(n, e, i), this._additionsTail = null === this._additionsTail ? this._additionsHead = n : this._additionsTail._nextAdded = n, n
                    }
                    _insertAfter(n, e, i) {
                        const r = null === e ? this._itHead : e._next;
                        return n._next = r, n._prev = e, null === r ? this._itTail = n : r._prev = n, null === e ? this._itHead = n : e._next = n, null === this._linkedRecords && (this._linkedRecords = new v_), this._linkedRecords.put(n), n.currentIndex = i, n
                    }
                    _remove(n) {
                        return this._addToRemovals(this._unlink(n))
                    }
                    _unlink(n) {
                        null !== this._linkedRecords && this._linkedRecords.remove(n);
                        const e = n._prev,
                            i = n._next;
                        return null === e ? this._itHead = i : e._next = i, null === i ? this._itTail = e : i._prev = e, n
                    }
                    _addToMoves(n, e) {
                        return n.previousIndex === e || (this._movesTail = null === this._movesTail ? this._movesHead = n : this._movesTail._nextMoved = n), n
                    }
                    _addToRemovals(n) {
                        return null === this._unlinkedRecords && (this._unlinkedRecords = new v_), this._unlinkedRecords.put(n), n.currentIndex = null, n._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = n, n._prevRemoved = null) : (n._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = n), n
                    }
                    _addIdentityChange(n, e) {
                        return n.item = e, this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = n : this._identityChangesTail._nextIdentityChange = n, n
                    }
                }
                class qS {
                    constructor(n, e) {
                        this.item = n, this.trackById = e, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null, this._nextIdentityChange = null
                    }
                }
                class US {
                    constructor() {
                        this._head = null, this._tail = null
                    }
                    add(n) {
                        null === this._head ? (this._head = this._tail = n, n._nextDup = null, n._prevDup = null) : (this._tail._nextDup = n, n._prevDup = this._tail, n._nextDup = null, this._tail = n)
                    }
                    get(n, e) {
                        let i;
                        for (i = this._head; null !== i; i = i._nextDup)
                            if ((null === e || e <= i.currentIndex) && Object.is(i.trackById, n)) return i;
                        return null
                    }
                    remove(n) {
                        const e = n._prevDup,
                            i = n._nextDup;
                        return null === e ? this._head = i : e._nextDup = i, null === i ? this._tail = e : i._prevDup = e, null === this._head
                    }
                }
                class v_ {
                    constructor() {
                        this.map = new Map
                    }
                    put(n) {
                        const e = n.trackById;
                        let i = this.map.get(e);
                        i || (i = new US, this.map.set(e, i)), i.add(n)
                    }
                    get(n, e) {
                        const r = this.map.get(n);
                        return r ? r.get(n, e) : null
                    }
                    remove(n) {
                        const e = n.trackById;
                        return this.map.get(e).remove(n) && this.map.delete(e), n
                    }
                    get isEmpty() {
                        return 0 === this.map.size
                    }
                    clear() {
                        this.map.clear()
                    }
                }

                function y_(t, n, e) {
                    const i = t.previousIndex;
                    if (null === i) return i;
                    let r = 0;
                    return e && i < e.length && (r = e[i]), i + n + r
                }
                class b_ {
                    constructor() {}
                    supports(n) {
                        return n instanceof Map || kd(n)
                    }
                    create() {
                        return new zS
                    }
                }
                class zS {
                    constructor() {
                        this._records = new Map, this._mapHead = null, this._appendAfter = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null
                    }
                    get isDirty() {
                        return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead
                    }
                    forEachItem(n) {
                        let e;
                        for (e = this._mapHead; null !== e; e = e._next) n(e)
                    }
                    forEachPreviousItem(n) {
                        let e;
                        for (e = this._previousMapHead; null !== e; e = e._nextPrevious) n(e)
                    }
                    forEachChangedItem(n) {
                        let e;
                        for (e = this._changesHead; null !== e; e = e._nextChanged) n(e)
                    }
                    forEachAddedItem(n) {
                        let e;
                        for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e)
                    }
                    forEachRemovedItem(n) {
                        let e;
                        for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e)
                    }
                    diff(n) {
                        if (n) {
                            if (!(n instanceof Map || kd(n))) throw new Qe(900, "")
                        } else n = new Map;
                        return this.check(n) ? this : null
                    }
                    onDestroy() {}
                    check(n) {
                        this._reset();
                        let e = this._mapHead;
                        if (this._appendAfter = null, this._forEach(n, (i, r) => {
                                if (e && e.key === r) this._maybeAddToChanges(e, i), this._appendAfter = e, e = e._next;
                                else {
                                    const s = this._getOrCreateRecordForKey(r, i);
                                    e = this._insertBeforeOrAppend(e, s)
                                }
                            }), e) {
                            e._prev && (e._prev._next = null), this._removalsHead = e;
                            for (let i = e; null !== i; i = i._nextRemoved) i === this._mapHead && (this._mapHead = null), this._records.delete(i.key), i._nextRemoved = i._next, i.previousValue = i.currentValue, i.currentValue = null, i._prev = null, i._next = null
                        }
                        return this._changesTail && (this._changesTail._nextChanged = null), this._additionsTail && (this._additionsTail._nextAdded = null), this.isDirty
                    }
                    _insertBeforeOrAppend(n, e) {
                        if (n) {
                            const i = n._prev;
                            return e._next = n, e._prev = i, n._prev = e, i && (i._next = e), n === this._mapHead && (this._mapHead = e), this._appendAfter = n, n
                        }
                        return this._appendAfter ? (this._appendAfter._next = e, e._prev = this._appendAfter) : this._mapHead = e, this._appendAfter = e, null
                    }
                    _getOrCreateRecordForKey(n, e) {
                        if (this._records.has(n)) {
                            const r = this._records.get(n);
                            this._maybeAddToChanges(r, e);
                            const s = r._prev,
                                o = r._next;
                            return s && (s._next = o), o && (o._prev = s), r._next = null, r._prev = null, r
                        }
                        const i = new WS(n);
                        return this._records.set(n, i), i.currentValue = e, this._addToAdditions(i), i
                    }
                    _reset() {
                        if (this.isDirty) {
                            let n;
                            for (this._previousMapHead = this._mapHead, n = this._previousMapHead; null !== n; n = n._next) n._nextPrevious = n._next;
                            for (n = this._changesHead; null !== n; n = n._nextChanged) n.previousValue = n.currentValue;
                            for (n = this._additionsHead; null != n; n = n._nextAdded) n.previousValue = n.currentValue;
                            this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = null
                        }
                    }
                    _maybeAddToChanges(n, e) {
                        Object.is(e, n.currentValue) || (n.previousValue = n.currentValue, n.currentValue = e, this._addToChanges(n))
                    }
                    _addToAdditions(n) {
                        null === this._additionsHead ? this._additionsHead = this._additionsTail = n : (this._additionsTail._nextAdded = n, this._additionsTail = n)
                    }
                    _addToChanges(n) {
                        null === this._changesHead ? this._changesHead = this._changesTail = n : (this._changesTail._nextChanged = n, this._changesTail = n)
                    }
                    _forEach(n, e) {
                        n instanceof Map ? n.forEach(e) : Object.keys(n).forEach(i => e(n[i], i))
                    }
                }
                class WS {
                    constructor(n) {
                        this.key = n, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._prev = null, this._nextAdded = null, this._nextRemoved = null, this._nextChanged = null
                    }
                }

                function D_() {
                    return new Qo([new __])
                }
                let Qo = (() => {
                    class t {
                        constructor(e) {
                            this.factories = e
                        }
                        static create(e, i) {
                            if (null != i) {
                                const r = i.factories.slice();
                                e = e.concat(r)
                            }
                            return new t(e)
                        }
                        static extend(e) {
                            return {
                                provide: t,
                                useFactory: i => t.create(e, i || D_()),
                                deps: [
                                    [t, new Mo, new us]
                                ]
                            }
                        }
                        find(e) {
                            const i = this.factories.find(r => r.supports(e));
                            if (null != i) return i;
                            throw new Qe(901, "")
                        }
                    }
                    return t.\u0275prov = $e({
                        token: t,
                        providedIn: "root",
                        factory: D_
                    }), t
                })();

                function x_() {
                    return new Gs([new b_])
                }
                let Gs = (() => {
                    class t {
                        constructor(e) {
                            this.factories = e
                        }
                        static create(e, i) {
                            if (i) {
                                const r = i.factories.slice();
                                e = e.concat(r)
                            }
                            return new t(e)
                        }
                        static extend(e) {
                            return {
                                provide: t,
                                useFactory: i => t.create(e, i || x_()),
                                deps: [
                                    [t, new Mo, new us]
                                ]
                            }
                        }
                        find(e) {
                            const i = this.factories.find(s => s.supports(e));
                            if (i) return i;
                            throw new Qe(901, "")
                        }
                    }
                    return t.\u0275prov = $e({
                        token: t,
                        providedIn: "root",
                        factory: x_
                    }), t
                })();
                const YS = [new b_],
                    ZS = new Qo([new __]),
                    QS = new Gs(YS),
                    JS = s_(null, "core", [{
                        provide: Vl,
                        useValue: "unknown"
                    }, {
                        provide: a_,
                        deps: [Yt]
                    }, {
                        provide: i_,
                        deps: []
                    }, {
                        provide: _S,
                        deps: []
                    }]),
                    iE = [{
                        provide: js,
                        useClass: js,
                        deps: [Dt, Yt, ps, Ps, Hs]
                    }, {
                        provide: bT,
                        deps: [Dt],
                        useFactory: function rE(t) {
                            let n = [];
                            return t.onStable.subscribe(() => {
                                    for (; n.length;) n.pop()()
                                }),
                                function(e) {
                                    n.push(e)
                                }
                        }
                    }, {
                        provide: Hs,
                        useClass: Hs,
                        deps: [
                            [new us, gf]
                        ]
                    }, {
                        provide: e_,
                        useClass: e_,
                        deps: []
                    }, gS, {
                        provide: Qo,
                        useFactory: function XS() {
                            return ZS
                        },
                        deps: []
                    }, {
                        provide: Gs,
                        useFactory: function eE() {
                            return QS
                        },
                        deps: []
                    }, {
                        provide: ar,
                        useFactory: function tE(t) {
                            return t || function nE() {
                                return "undefined" != typeof $localize && $localize.locale || Sl
                            }()
                        },
                        deps: [
                            [new al(ar), new us, new Mo]
                        ]
                    }, {
                        provide: X1,
                        useValue: "USD"
                    }];
                let sE = (() => {
                        class t {
                            constructor(e) {}
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(js))
                        }, t.\u0275mod = ht({
                            type: t
                        }), t.\u0275inj = ct({
                            providers: iE
                        }), t
                    })(),
                    jl = null;

                function Or() {
                    return jl
                }
                const nn = new Ze("DocumentToken");
                var wn = (() => ((wn = wn || {})[wn.Decimal = 0] = "Decimal", wn[wn.Percent = 1] = "Percent", wn[wn.Currency = 2] = "Currency", wn[wn.Scientific = 3] = "Scientific", wn))(),
                    Ft = (() => ((Ft = Ft || {})[Ft.Zero = 0] = "Zero", Ft[Ft.One = 1] = "One", Ft[Ft.Two = 2] = "Two", Ft[Ft.Few = 3] = "Few", Ft[Ft.Many = 4] = "Many", Ft[Ft.Other = 5] = "Other", Ft))(),
                    Ee = (() => ((Ee = Ee || {})[Ee.Decimal = 0] = "Decimal", Ee[Ee.Group = 1] = "Group", Ee[Ee.List = 2] = "List", Ee[Ee.PercentSign = 3] = "PercentSign", Ee[Ee.PlusSign = 4] = "PlusSign", Ee[Ee.MinusSign = 5] = "MinusSign", Ee[Ee.Exponential = 6] = "Exponential", Ee[Ee.SuperscriptingExponent = 7] = "SuperscriptingExponent", Ee[Ee.PerMille = 8] = "PerMille", Ee[Ee.Infinity = 9] = "Infinity", Ee[Ee.NaN = 10] = "NaN", Ee[Ee.TimeSeparator = 11] = "TimeSeparator", Ee[Ee.CurrencyDecimal = 12] = "CurrencyDecimal", Ee[Ee.CurrencyGroup = 13] = "CurrencyGroup", Ee))();

                function zn(t, n) {
                    const e = hn(t),
                        i = e[De.NumberSymbols][n];
                    if (void 0 === i) {
                        if (n === Ee.CurrencyDecimal) return e[De.NumberSymbols][Ee.Decimal];
                        if (n === Ee.CurrencyGroup) return e[De.NumberSymbols][Ee.Group]
                    }
                    return i
                }

                function Sf(t, n) {
                    return hn(t)[De.NumberFormats][n]
                }
                const vE = function $m(t) {
                        return hn(t)[De.PluralCase]
                    },
                    BE = /^(\d+)?\.((\d+)(-(\d+))?)?$/;

                function If(t, n, e, i, r, s, o = !1) {
                    let a = "",
                        l = !1;
                    if (isFinite(t)) {
                        let c = function UE(t) {
                            let i, r, s, o, a, n = Math.abs(t) + "",
                                e = 0;
                            for ((r = n.indexOf(".")) > -1 && (n = n.replace(".", "")), (s = n.search(/e/i)) > 0 ? (r < 0 && (r = s), r += +n.slice(s + 1), n = n.substring(0, s)) : r < 0 && (r = n.length), s = 0;
                                "0" === n.charAt(s); s++);
                            if (s === (a = n.length)) i = [0], r = 1;
                            else {
                                for (a--;
                                    "0" === n.charAt(a);) a--;
                                for (r -= s, i = [], o = 0; s <= a; s++, o++) i[o] = Number(n.charAt(s))
                            }
                            return r > 22 && (i = i.splice(0, 21), e = r - 1, r = 1), {
                                digits: i,
                                exponent: e,
                                integerLen: r
                            }
                        }(t);
                        o && (c = function qE(t) {
                            if (0 === t.digits[0]) return t;
                            const n = t.digits.length - t.integerLen;
                            return t.exponent ? t.exponent += 2 : (0 === n ? t.digits.push(0, 0) : 1 === n && t.digits.push(0), t.integerLen += 2), t
                        }(c));
                        let u = n.minInt,
                            p = n.minFrac,
                            h = n.maxFrac;
                        if (s) {
                            const P = s.match(BE);
                            if (null === P) throw new Error(`${s} is not a valid digit info`);
                            const ue = P[1],
                                re = P[3],
                                ge = P[5];
                            null != ue && (u = Rf(ue)), null != re && (p = Rf(re)), null != ge ? h = Rf(ge) : null != re && p > h && (h = p)
                        }! function zE(t, n, e) {
                            if (n > e) throw new Error(`The minimum number of digits after fraction (${n}) is higher than the maximum (${e}).`);
                            let i = t.digits,
                                r = i.length - t.integerLen;
                            const s = Math.min(Math.max(n, r), e);
                            let o = s + t.integerLen,
                                a = i[o];
                            if (o > 0) {
                                i.splice(Math.max(t.integerLen, o));
                                for (let p = o; p < i.length; p++) i[p] = 0
                            } else {
                                r = Math.max(0, r), t.integerLen = 1, i.length = Math.max(1, o = s + 1), i[0] = 0;
                                for (let p = 1; p < o; p++) i[p] = 0
                            }
                            if (a >= 5)
                                if (o - 1 < 0) {
                                    for (let p = 0; p > o; p--) i.unshift(0), t.integerLen++;
                                    i.unshift(1), t.integerLen++
                                } else i[o - 1]++;
                            for (; r < Math.max(0, s); r++) i.push(0);
                            let l = 0 !== s;
                            const c = n + t.integerLen,
                                u = i.reduceRight(function(p, h, m, M) {
                                    return M[m] = (h += p) < 10 ? h : h - 10, l && (0 === M[m] && m >= c ? M.pop() : l = !1), h >= 10 ? 1 : 0
                                }, 0);
                            u && (i.unshift(u), t.integerLen++)
                        }(c, p, h);
                        let m = c.digits,
                            M = c.integerLen;
                        const I = c.exponent;
                        let H = [];
                        for (l = m.every(P => !P); M < u; M++) m.unshift(0);
                        for (; M < 0; M++) m.unshift(0);
                        M > 0 ? H = m.splice(M, m.length) : (H = m, m = [0]);
                        const Y = [];
                        for (m.length >= n.lgSize && Y.unshift(m.splice(-n.lgSize, m.length).join("")); m.length > n.gSize;) Y.unshift(m.splice(-n.gSize, m.length).join(""));
                        m.length && Y.unshift(m.join("")), a = Y.join(zn(e, i)), H.length && (a += zn(e, r) + H.join("")), I && (a += zn(e, Ee.Exponential) + "+" + I)
                    } else a = zn(e, Ee.Infinity);
                    return a = t < 0 && !l ? n.negPre + a + n.negSuf : n.posPre + a + n.posSuf, a
                }

                function Of(t, n = "-") {
                    const e = {
                            minInt: 1,
                            minFrac: 0,
                            maxFrac: 0,
                            posPre: "",
                            posSuf: "",
                            negPre: "",
                            negSuf: "",
                            gSize: 0,
                            lgSize: 0
                        },
                        i = t.split(";"),
                        r = i[0],
                        s = i[1],
                        o = -1 !== r.indexOf(".") ? r.split(".") : [r.substring(0, r.lastIndexOf("0") + 1), r.substring(r.lastIndexOf("0") + 1)],
                        a = o[0],
                        l = o[1] || "";
                    e.posPre = a.substr(0, a.indexOf("#"));
                    for (let u = 0; u < l.length; u++) {
                        const p = l.charAt(u);
                        "0" === p ? e.minFrac = e.maxFrac = u + 1 : "#" === p ? e.maxFrac = u + 1 : e.posSuf += p
                    }
                    const c = a.split(",");
                    if (e.gSize = c[1] ? c[1].length : 0, e.lgSize = c[2] || c[1] ? (c[2] || c[1]).length : 0, s) {
                        const u = r.length - e.posPre.length - e.posSuf.length,
                            p = s.indexOf("#");
                        e.negPre = s.substr(0, p).replace(/'/g, ""), e.negSuf = s.substr(p + u).replace(/'/g, "")
                    } else e.negPre = n + e.posPre, e.negSuf = e.posSuf;
                    return e
                }

                function Rf(t) {
                    const n = parseInt(t);
                    if (isNaN(n)) throw new Error("Invalid integer literal when parsing " + t);
                    return n
                }
                class Ql {}
                let WE = (() => {
                        class t extends Ql {
                            constructor(e) {
                                super(), this.locale = e
                            }
                            getPluralCategory(e, i) {
                                switch (vE(i || this.locale)(e)) {
                                    case Ft.Zero:
                                        return "zero";
                                    case Ft.One:
                                        return "one";
                                    case Ft.Two:
                                        return "two";
                                    case Ft.Few:
                                        return "few";
                                    case Ft.Many:
                                        return "many";
                                    default:
                                        return "other"
                                }
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(ar))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac
                        }), t
                    })(),
                    O_ = (() => {
                        class t {
                            constructor(e, i, r, s) {
                                this._iterableDiffers = e, this._keyValueDiffers = i, this._ngEl = r, this._renderer = s, this._iterableDiffer = null, this._keyValueDiffer = null, this._initialClasses = [], this._rawClass = null
                            }
                            set klass(e) {
                                this._removeClasses(this._initialClasses), this._initialClasses = "string" == typeof e ? e.split(/\s+/) : [], this._applyClasses(this._initialClasses), this._applyClasses(this._rawClass)
                            }
                            set ngClass(e) {
                                this._removeClasses(this._rawClass), this._applyClasses(this._initialClasses), this._iterableDiffer = null, this._keyValueDiffer = null, this._rawClass = "string" == typeof e ? e.split(/\s+/) : e, this._rawClass && (Fo(this._rawClass) ? this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create() : this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create())
                            }
                            ngDoCheck() {
                                if (this._iterableDiffer) {
                                    const e = this._iterableDiffer.diff(this._rawClass);
                                    e && this._applyIterableChanges(e)
                                } else if (this._keyValueDiffer) {
                                    const e = this._keyValueDiffer.diff(this._rawClass);
                                    e && this._applyKeyValueChanges(e)
                                }
                            }
                            _applyKeyValueChanges(e) {
                                e.forEachAddedItem(i => this._toggleClass(i.key, i.currentValue)), e.forEachChangedItem(i => this._toggleClass(i.key, i.currentValue)), e.forEachRemovedItem(i => {
                                    i.previousValue && this._toggleClass(i.key, !1)
                                })
                            }
                            _applyIterableChanges(e) {
                                e.forEachAddedItem(i => {
                                    if ("string" != typeof i.item) throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${nt(i.item)}`);
                                    this._toggleClass(i.item, !0)
                                }), e.forEachRemovedItem(i => this._toggleClass(i.item, !1))
                            }
                            _applyClasses(e) {
                                e && (Array.isArray(e) || e instanceof Set ? e.forEach(i => this._toggleClass(i, !0)) : Object.keys(e).forEach(i => this._toggleClass(i, !!e[i])))
                            }
                            _removeClasses(e) {
                                e && (Array.isArray(e) || e instanceof Set ? e.forEach(i => this._toggleClass(i, !1)) : Object.keys(e).forEach(i => this._toggleClass(i, !1)))
                            }
                            _toggleClass(e, i) {
                                (e = e.trim()) && e.split(/\s+/g).forEach(r => {
                                    i ? this._renderer.addClass(this._ngEl.nativeElement, r) : this._renderer.removeClass(this._ngEl.nativeElement, r)
                                })
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(Qo), F(Gs), F(gt), F(Ii))
                        }, t.\u0275dir = ye({
                            type: t,
                            selectors: [
                                ["", "ngClass", ""]
                            ],
                            inputs: {
                                klass: ["class", "klass"],
                                ngClass: "ngClass"
                            }
                        }), t
                    })();
                class ZE {
                    constructor(n, e, i, r) {
                        this.$implicit = n, this.ngForOf = e, this.index = i, this.count = r
                    }
                    get first() {
                        return 0 === this.index
                    }
                    get last() {
                        return this.index === this.count - 1
                    }
                    get even() {
                        return this.index % 2 == 0
                    }
                    get odd() {
                        return !this.even
                    }
                }
                let $s = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._viewContainer = e, this._template = i, this._differs = r, this._ngForOf = null, this._ngForOfDirty = !0, this._differ = null
                        }
                        set ngForOf(e) {
                            this._ngForOf = e, this._ngForOfDirty = !0
                        }
                        set ngForTrackBy(e) {
                            this._trackByFn = e
                        }
                        get ngForTrackBy() {
                            return this._trackByFn
                        }
                        set ngForTemplate(e) {
                            e && (this._template = e)
                        }
                        ngDoCheck() {
                            if (this._ngForOfDirty) {
                                this._ngForOfDirty = !1;
                                const e = this._ngForOf;
                                !this._differ && e && (this._differ = this._differs.find(e).create(this.ngForTrackBy))
                            }
                            if (this._differ) {
                                const e = this._differ.diff(this._ngForOf);
                                e && this._applyChanges(e)
                            }
                        }
                        _applyChanges(e) {
                            const i = this._viewContainer;
                            e.forEachOperation((r, s, o) => {
                                if (null == r.previousIndex) i.createEmbeddedView(this._template, new ZE(r.item, this._ngForOf, -1, -1), null === o ? void 0 : o);
                                else if (null == o) i.remove(null === s ? void 0 : s);
                                else if (null !== s) {
                                    const a = i.get(s);
                                    i.move(a, o), R_(a, r)
                                }
                            });
                            for (let r = 0, s = i.length; r < s; r++) {
                                const a = i.get(r).context;
                                a.index = r, a.count = s, a.ngForOf = this._ngForOf
                            }
                            e.forEachIdentityChange(r => {
                                R_(i.get(r.currentIndex), r)
                            })
                        }
                        static ngTemplateContextGuard(e, i) {
                            return !0
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(F(ui), F(bt), F(Qo))
                    }, t.\u0275dir = ye({
                        type: t,
                        selectors: [
                            ["", "ngFor", "", "ngForOf", ""]
                        ],
                        inputs: {
                            ngForOf: "ngForOf",
                            ngForTrackBy: "ngForTrackBy",
                            ngForTemplate: "ngForTemplate"
                        }
                    }), t
                })();

                function R_(t, n) {
                    t.context.$implicit = n.item
                }
                let lr = (() => {
                    class t {
                        constructor(e, i) {
                            this._viewContainer = e, this._context = new QE, this._thenTemplateRef = null, this._elseTemplateRef = null, this._thenViewRef = null, this._elseViewRef = null, this._thenTemplateRef = i
                        }
                        set ngIf(e) {
                            this._context.$implicit = this._context.ngIf = e, this._updateView()
                        }
                        set ngIfThen(e) {
                            P_("ngIfThen", e), this._thenTemplateRef = e, this._thenViewRef = null, this._updateView()
                        }
                        set ngIfElse(e) {
                            P_("ngIfElse", e), this._elseTemplateRef = e, this._elseViewRef = null, this._updateView()
                        }
                        _updateView() {
                            this._context.$implicit ? this._thenViewRef || (this._viewContainer.clear(), this._elseViewRef = null, this._thenTemplateRef && (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context))) : this._elseViewRef || (this._viewContainer.clear(), this._thenViewRef = null, this._elseTemplateRef && (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)))
                        }
                        static ngTemplateContextGuard(e, i) {
                            return !0
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(F(ui), F(bt))
                    }, t.\u0275dir = ye({
                        type: t,
                        selectors: [
                            ["", "ngIf", ""]
                        ],
                        inputs: {
                            ngIf: "ngIf",
                            ngIfThen: "ngIfThen",
                            ngIfElse: "ngIfElse"
                        }
                    }), t
                })();
                class QE {
                    constructor() {
                        this.$implicit = null, this.ngIf = null
                    }
                }

                function P_(t, n) {
                    if (n && !n.createEmbeddedView) throw new Error(`${t} must be a TemplateRef, but received '${nt(n)}'.`)
                }
                let B_ = (() => {
                        class t {
                            constructor(e, i, r) {
                                this._ngEl = e, this._differs = i, this._renderer = r, this._ngStyle = null, this._differ = null
                            }
                            set ngStyle(e) {
                                this._ngStyle = e, !this._differ && e && (this._differ = this._differs.find(e).create())
                            }
                            ngDoCheck() {
                                if (this._differ) {
                                    const e = this._differ.diff(this._ngStyle);
                                    e && this._applyChanges(e)
                                }
                            }
                            _setStyle(e, i) {
                                const [r, s] = e.split(".");
                                null != (i = null != i && s ? `${i}${s}` : i) ? this._renderer.setStyle(this._ngEl.nativeElement, r, i) : this._renderer.removeStyle(this._ngEl.nativeElement, r)
                            }
                            _applyChanges(e) {
                                e.forEachRemovedItem(i => this._setStyle(i.key, null)), e.forEachAddedItem(i => this._setStyle(i.key, i.currentValue)), e.forEachChangedItem(i => this._setStyle(i.key, i.currentValue))
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(gt), F(Gs), F(Ii))
                        }, t.\u0275dir = ye({
                            type: t,
                            selectors: [
                                ["", "ngStyle", ""]
                            ],
                            inputs: {
                                ngStyle: "ngStyle"
                            }
                        }), t
                    })(),
                    qs = (() => {
                        class t {
                            constructor(e) {
                                this._viewContainerRef = e, this._viewRef = null, this.ngTemplateOutletContext = null, this.ngTemplateOutlet = null
                            }
                            ngOnChanges(e) {
                                if (e.ngTemplateOutlet) {
                                    const i = this._viewContainerRef;
                                    this._viewRef && i.remove(i.indexOf(this._viewRef)), this._viewRef = this.ngTemplateOutlet ? i.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext) : null
                                } else this._viewRef && e.ngTemplateOutletContext && this.ngTemplateOutletContext && (this._viewRef.context = this.ngTemplateOutletContext)
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(ui))
                        }, t.\u0275dir = ye({
                            type: t,
                            selectors: [
                                ["", "ngTemplateOutlet", ""]
                            ],
                            inputs: {
                                ngTemplateOutletContext: "ngTemplateOutletContext",
                                ngTemplateOutlet: "ngTemplateOutlet"
                            },
                            features: [xn]
                        }), t
                    })();

                function pi(t, n) {
                    return new Qe(2100, "")
                }
                let Jl = (() => {
                        class t {
                            constructor(e) {
                                this._locale = e
                            }
                            transform(e, i, r) {
                                if (!Bf(e)) return null;
                                r = r || this._locale;
                                try {
                                    return function $E(t, n, e) {
                                        return If(t, Of(Sf(n, wn.Decimal), zn(n, Ee.MinusSign)), n, Ee.Group, Ee.Decimal, e)
                                    }(Lf(e), r, i)
                                } catch (s) {
                                    throw pi()
                                }
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(ar, 16))
                        }, t.\u0275pipe = ln({
                            name: "number",
                            type: t,
                            pure: !0
                        }), t
                    })(),
                    V_ = (() => {
                        class t {
                            constructor(e) {
                                this._locale = e
                            }
                            transform(e, i, r) {
                                if (!Bf(e)) return null;
                                r = r || this._locale;
                                try {
                                    return function GE(t, n, e) {
                                        return If(t, Of(Sf(n, wn.Percent), zn(n, Ee.MinusSign)), n, Ee.Group, Ee.Decimal, e, !0).replace(new RegExp("%", "g"), zn(n, Ee.PercentSign))
                                    }(Lf(e), r, i)
                                } catch (s) {
                                    throw pi()
                                }
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(ar, 16))
                        }, t.\u0275pipe = ln({
                            name: "percent",
                            type: t,
                            pure: !0
                        }), t
                    })();

                function Bf(t) {
                    return !(null == t || "" === t || t != t)
                }

                function Lf(t) {
                    if ("string" == typeof t && !isNaN(Number(t) - parseFloat(t))) return Number(t);
                    if ("number" != typeof t) throw new Error(`${t} is not a number`);
                    return t
                }
                let Rn = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = ht({
                        type: t
                    }), t.\u0275inj = ct({
                        providers: [{
                            provide: Ql,
                            useClass: WE
                        }]
                    }), t
                })();
                class Vf extends class Tk extends class lE {} {
                    constructor() {
                        super(...arguments), this.supportsDOMEvents = !0
                    }
                } {
                    static makeCurrent() {
                        ! function aE(t) {
                            jl || (jl = t)
                        }(new Vf)
                    }
                    onAndCancel(n, e, i) {
                        return n.addEventListener(e, i, !1), () => {
                            n.removeEventListener(e, i, !1)
                        }
                    }
                    dispatchEvent(n, e) {
                        n.dispatchEvent(e)
                    }
                    remove(n) {
                        n.parentNode && n.parentNode.removeChild(n)
                    }
                    createElement(n, e) {
                        return (e = e || this.getDefaultDocument()).createElement(n)
                    }
                    createHtmlDocument() {
                        return document.implementation.createHTMLDocument("fakeTitle")
                    }
                    getDefaultDocument() {
                        return document
                    }
                    isElementNode(n) {
                        return n.nodeType === Node.ELEMENT_NODE
                    }
                    isShadowRoot(n) {
                        return n instanceof DocumentFragment
                    }
                    getGlobalEventTarget(n, e) {
                        return "window" === e ? window : "document" === e ? n : "body" === e ? n.body : null
                    }
                    getBaseHref(n) {
                        const e = function Sk() {
                            return ea = ea || document.querySelector("base"), ea ? ea.getAttribute("href") : null
                        }();
                        return null == e ? null : function Ek(t) {
                            Xl = Xl || document.createElement("a"), Xl.setAttribute("href", t);
                            const n = Xl.pathname;
                            return "/" === n.charAt(0) ? n : `/${n}`
                        }(e)
                    }
                    resetBaseElement() {
                        ea = null
                    }
                    getUserAgent() {
                        return window.navigator.userAgent
                    }
                    getCookie(n) {
                        return function YE(t, n) {
                            n = encodeURIComponent(n);
                            for (const e of t.split(";")) {
                                const i = e.indexOf("="),
                                    [r, s] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
                                if (r.trim() === n) return decodeURIComponent(s)
                            }
                            return null
                        }(document.cookie, n)
                    }
                }
                let Xl, ea = null;
                const G_ = new Ze("TRANSITION_ID"),
                    Nk = [{
                        provide: gf,
                        useFactory: function kk(t, n, e) {
                            return () => {
                                e.get(Hs).donePromise.then(() => {
                                    const i = Or(),
                                        r = n.querySelectorAll(`style[ng-transition="${t}"]`);
                                    for (let s = 0; s < r.length; s++) i.remove(r[s])
                                })
                            }
                        },
                        deps: [G_, nn, Yt],
                        multi: !0
                    }];
                class Hf {
                    static init() {
                        ! function SS(t) {
                            Df = t
                        }(new Hf)
                    }
                    addToWindow(n) {
                        rt.getAngularTestability = (i, r = !0) => {
                            const s = n.findTestabilityInTree(i, r);
                            if (null == s) throw new Error("Could not find testability for element.");
                            return s
                        }, rt.getAllAngularTestabilities = () => n.getAllTestabilities(), rt.getAllAngularRootElements = () => n.getAllRootElements(), rt.frameworkStabilizers || (rt.frameworkStabilizers = []), rt.frameworkStabilizers.push(i => {
                            const r = rt.getAllAngularTestabilities();
                            let s = r.length,
                                o = !1;
                            const a = function(l) {
                                o = o || l, s--, 0 == s && i(o)
                            };
                            r.forEach(function(l) {
                                l.whenStable(a)
                            })
                        })
                    }
                    findTestabilityInTree(n, e, i) {
                        if (null == e) return null;
                        const r = n.getTestability(e);
                        return null != r ? r : i ? Or().isShadowRoot(e) ? this.findTestabilityInTree(n, e.host, !0) : this.findTestabilityInTree(n, e.parentElement, !0) : null
                    }
                }
                let Ak = (() => {
                    class t {
                        build() {
                            return new XMLHttpRequest
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
                const ec = new Ze("EventManagerPlugins");
                let tc = (() => {
                    class t {
                        constructor(e, i) {
                            this._zone = i, this._eventNameToPlugin = new Map, e.forEach(r => r.manager = this), this._plugins = e.slice().reverse()
                        }
                        addEventListener(e, i, r) {
                            return this._findPluginFor(i).addEventListener(e, i, r)
                        }
                        addGlobalEventListener(e, i, r) {
                            return this._findPluginFor(i).addGlobalEventListener(e, i, r)
                        }
                        getZone() {
                            return this._zone
                        }
                        _findPluginFor(e) {
                            const i = this._eventNameToPlugin.get(e);
                            if (i) return i;
                            const r = this._plugins;
                            for (let s = 0; s < r.length; s++) {
                                const o = r[s];
                                if (o.supports(e)) return this._eventNameToPlugin.set(e, o), o
                            }
                            throw new Error(`No event manager plugin found for event ${e}`)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(ec), Ce(Dt))
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
                class $_ {
                    constructor(n) {
                        this._doc = n
                    }
                    addGlobalEventListener(n, e, i) {
                        const r = Or().getGlobalEventTarget(this._doc, n);
                        if (!r) throw new Error(`Unsupported event target ${r} for event ${e}`);
                        return this.addEventListener(r, e, i)
                    }
                }
                let q_ = (() => {
                        class t {
                            constructor() {
                                this._stylesSet = new Set
                            }
                            addStyles(e) {
                                const i = new Set;
                                e.forEach(r => {
                                    this._stylesSet.has(r) || (this._stylesSet.add(r), i.add(r))
                                }), this.onStylesAdded(i)
                            }
                            onStylesAdded(e) {}
                            getAllStyles() {
                                return Array.from(this._stylesSet)
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac
                        }), t
                    })(),
                    ta = (() => {
                        class t extends q_ {
                            constructor(e) {
                                super(), this._doc = e, this._hostNodes = new Map, this._hostNodes.set(e.head, [])
                            }
                            _addStylesToHost(e, i, r) {
                                e.forEach(s => {
                                    const o = this._doc.createElement("style");
                                    o.textContent = s, r.push(i.appendChild(o))
                                })
                            }
                            addHost(e) {
                                const i = [];
                                this._addStylesToHost(this._stylesSet, e, i), this._hostNodes.set(e, i)
                            }
                            removeHost(e) {
                                const i = this._hostNodes.get(e);
                                i && i.forEach(U_), this._hostNodes.delete(e)
                            }
                            onStylesAdded(e) {
                                this._hostNodes.forEach((i, r) => {
                                    this._addStylesToHost(e, r, i)
                                })
                            }
                            ngOnDestroy() {
                                this._hostNodes.forEach(e => e.forEach(U_))
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(nn))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac
                        }), t
                    })();

                function U_(t) {
                    Or().remove(t)
                }
                const jf = {
                        svg: "http://www.w3.org/2000/svg",
                        xhtml: "http://www.w3.org/1999/xhtml",
                        xlink: "http://www.w3.org/1999/xlink",
                        xml: "http://www.w3.org/XML/1998/namespace",
                        xmlns: "http://www.w3.org/2000/xmlns/",
                        math: "http://www.w3.org/1998/MathML/"
                    },
                    Gf = /%COMP%/g;

                function nc(t, n, e) {
                    for (let i = 0; i < n.length; i++) {
                        let r = n[i];
                        Array.isArray(r) ? nc(t, r, e) : (r = r.replace(Gf, t), e.push(r))
                    }
                    return e
                }

                function Y_(t) {
                    return n => {
                        if ("__ngUnwrap__" === n) return t;
                        !1 === t(n) && (n.preventDefault(), n.returnValue = !1)
                    }
                }
                let $f = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.eventManager = e, this.sharedStylesHost = i, this.appId = r, this.rendererByCompId = new Map, this.defaultRenderer = new qf(e)
                        }
                        createRenderer(e, i) {
                            if (!e || !i) return this.defaultRenderer;
                            switch (i.encapsulation) {
                                case Di.Emulated: {
                                    let r = this.rendererByCompId.get(i.id);
                                    return r || (r = new Bk(this.eventManager, this.sharedStylesHost, i, this.appId), this.rendererByCompId.set(i.id, r)), r.applyToHost(e), r
                                }
                                case 1:
                                case Di.ShadowDom:
                                    return new Lk(this.eventManager, this.sharedStylesHost, e, i);
                                default:
                                    if (!this.rendererByCompId.has(i.id)) {
                                        const r = nc(i.id, i.styles, []);
                                        this.sharedStylesHost.addStyles(r), this.rendererByCompId.set(i.id, this.defaultRenderer)
                                    }
                                    return this.defaultRenderer
                            }
                        }
                        begin() {}
                        end() {}
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(tc), Ce(ta), Ce(Zo))
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
                class qf {
                    constructor(n) {
                        this.eventManager = n, this.data = Object.create(null), this.destroyNode = null
                    }
                    destroy() {}
                    createElement(n, e) {
                        return e ? document.createElementNS(jf[e] || e, n) : document.createElement(n)
                    }
                    createComment(n) {
                        return document.createComment(n)
                    }
                    createText(n) {
                        return document.createTextNode(n)
                    }
                    appendChild(n, e) {
                        n.appendChild(e)
                    }
                    insertBefore(n, e, i) {
                        n && n.insertBefore(e, i)
                    }
                    removeChild(n, e) {
                        n && n.removeChild(e)
                    }
                    selectRootElement(n, e) {
                        let i = "string" == typeof n ? document.querySelector(n) : n;
                        if (!i) throw new Error(`The selector "${n}" did not match any elements`);
                        return e || (i.textContent = ""), i
                    }
                    parentNode(n) {
                        return n.parentNode
                    }
                    nextSibling(n) {
                        return n.nextSibling
                    }
                    setAttribute(n, e, i, r) {
                        if (r) {
                            e = r + ":" + e;
                            const s = jf[r];
                            s ? n.setAttributeNS(s, e, i) : n.setAttribute(e, i)
                        } else n.setAttribute(e, i)
                    }
                    removeAttribute(n, e, i) {
                        if (i) {
                            const r = jf[i];
                            r ? n.removeAttributeNS(r, e) : n.removeAttribute(`${i}:${e}`)
                        } else n.removeAttribute(e)
                    }
                    addClass(n, e) {
                        n.classList.add(e)
                    }
                    removeClass(n, e) {
                        n.classList.remove(e)
                    }
                    setStyle(n, e, i, r) {
                        r & (Nn.DashCase | Nn.Important) ? n.style.setProperty(e, i, r & Nn.Important ? "important" : "") : n.style[e] = i
                    }
                    removeStyle(n, e, i) {
                        i & Nn.DashCase ? n.style.removeProperty(e) : n.style[e] = ""
                    }
                    setProperty(n, e, i) {
                        n[e] = i
                    }
                    setValue(n, e) {
                        n.nodeValue = e
                    }
                    listen(n, e, i) {
                        return "string" == typeof n ? this.eventManager.addGlobalEventListener(n, e, Y_(i)) : this.eventManager.addEventListener(n, e, Y_(i))
                    }
                }
                class Bk extends qf {
                    constructor(n, e, i, r) {
                        super(n), this.component = i;
                        const s = nc(r + "-" + i.id, i.styles, []);
                        e.addStyles(s), this.contentAttr = function Rk(t) {
                            return "_ngcontent-%COMP%".replace(Gf, t)
                        }(r + "-" + i.id), this.hostAttr = function Pk(t) {
                            return "_nghost-%COMP%".replace(Gf, t)
                        }(r + "-" + i.id)
                    }
                    applyToHost(n) {
                        super.setAttribute(n, this.hostAttr, "")
                    }
                    createElement(n, e) {
                        const i = super.createElement(n, e);
                        return super.setAttribute(i, this.contentAttr, ""), i
                    }
                }
                class Lk extends qf {
                    constructor(n, e, i, r) {
                        super(n), this.sharedStylesHost = e, this.hostEl = i, this.shadowRoot = i.attachShadow({
                            mode: "open"
                        }), this.sharedStylesHost.addHost(this.shadowRoot);
                        const s = nc(r.id, r.styles, []);
                        for (let o = 0; o < s.length; o++) {
                            const a = document.createElement("style");
                            a.textContent = s[o], this.shadowRoot.appendChild(a)
                        }
                    }
                    nodeOrShadowRoot(n) {
                        return n === this.hostEl ? this.shadowRoot : n
                    }
                    destroy() {
                        this.sharedStylesHost.removeHost(this.shadowRoot)
                    }
                    appendChild(n, e) {
                        return super.appendChild(this.nodeOrShadowRoot(n), e)
                    }
                    insertBefore(n, e, i) {
                        return super.insertBefore(this.nodeOrShadowRoot(n), e, i)
                    }
                    removeChild(n, e) {
                        return super.removeChild(this.nodeOrShadowRoot(n), e)
                    }
                    parentNode(n) {
                        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(n)))
                    }
                }
                let Vk = (() => {
                    class t extends $_ {
                        constructor(e) {
                            super(e)
                        }
                        supports(e) {
                            return !0
                        }
                        addEventListener(e, i, r) {
                            return e.addEventListener(i, r, !1), () => this.removeEventListener(e, i, r)
                        }
                        removeEventListener(e, i, r) {
                            return e.removeEventListener(i, r)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(nn))
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
                const Z_ = ["alt", "control", "meta", "shift"],
                    jk = {
                        "\b": "Backspace",
                        "\t": "Tab",
                        "\x7f": "Delete",
                        "\x1b": "Escape",
                        Del: "Delete",
                        Esc: "Escape",
                        Left: "ArrowLeft",
                        Right: "ArrowRight",
                        Up: "ArrowUp",
                        Down: "ArrowDown",
                        Menu: "ContextMenu",
                        Scroll: "ScrollLock",
                        Win: "OS"
                    },
                    Q_ = {
                        A: "1",
                        B: "2",
                        C: "3",
                        D: "4",
                        E: "5",
                        F: "6",
                        G: "7",
                        H: "8",
                        I: "9",
                        J: "*",
                        K: "+",
                        M: "-",
                        N: ".",
                        O: "/",
                        "`": "0",
                        "\x90": "NumLock"
                    },
                    Gk = {
                        alt: t => t.altKey,
                        control: t => t.ctrlKey,
                        meta: t => t.metaKey,
                        shift: t => t.shiftKey
                    };
                let $k = (() => {
                    class t extends $_ {
                        constructor(e) {
                            super(e)
                        }
                        supports(e) {
                            return null != t.parseEventName(e)
                        }
                        addEventListener(e, i, r) {
                            const s = t.parseEventName(i),
                                o = t.eventCallback(s.fullKey, r, this.manager.getZone());
                            return this.manager.getZone().runOutsideAngular(() => Or().onAndCancel(e, s.domEventName, o))
                        }
                        static parseEventName(e) {
                            const i = e.toLowerCase().split("."),
                                r = i.shift();
                            if (0 === i.length || "keydown" !== r && "keyup" !== r) return null;
                            const s = t._normalizeKey(i.pop());
                            let o = "";
                            if (Z_.forEach(l => {
                                    const c = i.indexOf(l);
                                    c > -1 && (i.splice(c, 1), o += l + ".")
                                }), o += s, 0 != i.length || 0 === s.length) return null;
                            const a = {};
                            return a.domEventName = r, a.fullKey = o, a
                        }
                        static getEventFullKey(e) {
                            let i = "",
                                r = function qk(t) {
                                    let n = t.key;
                                    if (null == n) {
                                        if (n = t.keyIdentifier, null == n) return "Unidentified";
                                        n.startsWith("U+") && (n = String.fromCharCode(parseInt(n.substring(2), 16)), 3 === t.location && Q_.hasOwnProperty(n) && (n = Q_[n]))
                                    }
                                    return jk[n] || n
                                }(e);
                            return r = r.toLowerCase(), " " === r ? r = "space" : "." === r && (r = "dot"), Z_.forEach(s => {
                                s != r && Gk[s](e) && (i += s + ".")
                            }), i += r, i
                        }
                        static eventCallback(e, i, r) {
                            return s => {
                                t.getEventFullKey(s) === e && r.runGuarded(() => i(s))
                            }
                        }
                        static _normalizeKey(e) {
                            return "esc" === e ? "escape" : e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(nn))
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
                const Yk = s_(JS, "browser", [{
                        provide: Vl,
                        useValue: "browser"
                    }, {
                        provide: J1,
                        useValue: function Uk() {
                            Vf.makeCurrent(), Hf.init()
                        },
                        multi: !0
                    }, {
                        provide: nn,
                        useFactory: function Wk() {
                            return function yD(t) {
                                lu = t
                            }(document), document
                        },
                        deps: []
                    }]),
                    Kk = [{
                        provide: wd,
                        useValue: "root"
                    }, {
                        provide: ps,
                        useFactory: function zk() {
                            return new ps
                        },
                        deps: []
                    }, {
                        provide: ec,
                        useClass: Vk,
                        multi: !0,
                        deps: [nn, Dt, Vl]
                    }, {
                        provide: ec,
                        useClass: $k,
                        multi: !0,
                        deps: [nn]
                    }, {
                        provide: $f,
                        useClass: $f,
                        deps: [tc, ta, Zo]
                    }, {
                        provide: Yd,
                        useExisting: $f
                    }, {
                        provide: q_,
                        useExisting: ta
                    }, {
                        provide: ta,
                        useClass: ta,
                        deps: [nn]
                    }, {
                        provide: bf,
                        useClass: bf,
                        deps: [Dt]
                    }, {
                        provide: tc,
                        useClass: tc,
                        deps: [ec, Dt]
                    }, {
                        provide: class Mk {},
                        useClass: Ak,
                        deps: []
                    }];
                let Zk = (() => {
                    class t {
                        constructor(e) {
                            if (e) throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")
                        }
                        static withServerTransition(e) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: Zo,
                                    useValue: e.appId
                                }, {
                                    provide: G_,
                                    useExisting: Zo
                                }, Nk]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(t, 12))
                    }, t.\u0275mod = ht({
                        type: t
                    }), t.\u0275inj = ct({
                        providers: Kk,
                        imports: [Rn, sE]
                    }), t
                })();

                function ic(...t) {
                    return wr(t, ao(t))
                }
                "undefined" != typeof window && window;
                const {
                    isArray: aN
                } = Array;
                const cN = ["addListener", "removeListener"],
                    uN = ["addEventListener", "removeEventListener"],
                    dN = ["on", "off"];

                function mn(t, n, e, i) {
                    if (A(e) && (i = e, e = void 0), i) return mn(t, n, e).pipe(function zf(t) {
                        return Ge(n => function lN(t, n) {
                            return aN(n) ? t(...n) : t(n)
                        }(t, n))
                    }(i));
                    const [r, s] = function hN(t) {
                        return A(t.addEventListener) && A(t.removeEventListener)
                    }(t) ? uN.map(o => a => t[o](n, a, e)): function fN(t) {
                        return A(t.addListener) && A(t.removeListener)
                    }(t) ? cN.map(ev(t, n)) : function pN(t) {
                        return A(t.on) && A(t.off)
                    }(t) ? dN.map(ev(t, n)) : [];
                    if (!r && Bi(t)) return Lt(o => mn(o, n, e))(Wt(t));
                    if (!r) throw new TypeError("Invalid event target");
                    return new le(o => {
                        const a = (...l) => o.next(1 < l.length ? l : l[0]);
                        return r(a), () => s(a)
                    })
                }

                function ev(t, n) {
                    return e => i => t[e](n, i)
                }
                class gN extends X {
                    constructor(n, e) {
                        super()
                    }
                    schedule(n, e = 0) {
                        return this
                    }
                }
                const rc = {
                        setInterval(...t) {
                            const {
                                delegate: n
                            } = rc;
                            return ((null == n ? void 0 : n.setInterval) || setInterval)(...t)
                        },
                        clearInterval(t) {
                            const {
                                delegate: n
                            } = rc;
                            return ((null == n ? void 0 : n.clearInterval) || clearInterval)(t)
                        },
                        delegate: void 0
                    },
                    tv = {
                        now: () => (tv.delegate || Date).now(),
                        delegate: void 0
                    };
                class na {
                    constructor(n, e = na.now) {
                        this.schedulerActionCtor = n, this.now = e
                    }
                    schedule(n, e = 0, i) {
                        return new this.schedulerActionCtor(this, n).schedule(i, e)
                    }
                }
                na.now = tv.now;
                const nv = new class _N extends na {
                        constructor(n, e = na.now) {
                            super(n, e), this.actions = [], this._active = !1, this._scheduled = void 0
                        }
                        flush(n) {
                            const {
                                actions: e
                            } = this;
                            if (this._active) return void e.push(n);
                            let i;
                            this._active = !0;
                            do {
                                if (i = n.execute(n.state, n.delay)) break
                            } while (n = e.shift());
                            if (this._active = !1, i) {
                                for (; n = e.shift();) n.unsubscribe();
                                throw i
                            }
                        }
                    }(class mN extends gN {
                        constructor(n, e) {
                            super(n, e), this.scheduler = n, this.work = e, this.pending = !1
                        }
                        schedule(n, e = 0) {
                            if (this.closed) return this;
                            this.state = n;
                            const i = this.id,
                                r = this.scheduler;
                            return null != i && (this.id = this.recycleAsyncId(r, i, e)), this.pending = !0, this.delay = e, this.id = this.id || this.requestAsyncId(r, this.id, e), this
                        }
                        requestAsyncId(n, e, i = 0) {
                            return rc.setInterval(n.flush.bind(n, this), i)
                        }
                        recycleAsyncId(n, e, i = 0) {
                            if (null != i && this.delay === i && !1 === this.pending) return e;
                            rc.clearInterval(e)
                        }
                        execute(n, e) {
                            if (this.closed) return new Error("executing a cancelled action");
                            this.pending = !1;
                            const i = this._execute(n, e);
                            if (i) return i;
                            !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null))
                        }
                        _execute(n, e) {
                            let r, i = !1;
                            try {
                                this.work(n)
                            } catch (s) {
                                i = !0, r = s || new Error("Scheduled action threw falsy error")
                            }
                            if (i) return this.unsubscribe(), r
                        }
                        unsubscribe() {
                            if (!this.closed) {
                                const {
                                    id: n,
                                    scheduler: e
                                } = this, {
                                    actions: i
                                } = e;
                                this.work = this.state = this.scheduler = null, this.pending = !1, j(i, this), null != n && (this.id = this.recycleAsyncId(e, n, null)), this.delay = null, super.unsubscribe()
                            }
                        }
                    }),
                    vN = nv;

                function sc(t = 0, n, e = vN) {
                    let i = -1;
                    return null != n && (qp(n) ? e = n : i = n), new le(r => {
                        let s = function yN(t) {
                            return t instanceof Date && !isNaN(t)
                        }(t) ? +t - e.now() : t;
                        s < 0 && (s = 0);
                        let o = 0;
                        return e.schedule(function() {
                            r.closed || (r.next(o++), 0 <= i ? this.schedule(void 0, i) : r.complete())
                        }, s)
                    })
                }
                const {
                    isArray: bN
                } = Array;

                function iv(t) {
                    return 1 === t.length && bN(t[0]) ? t[0] : t
                }

                function rv(...t) {
                    return 1 === (t = iv(t)).length ? Wt(t[0]) : new le(function DN(t) {
                        return n => {
                            let e = [];
                            for (let i = 0; e && !n.closed && i < t.length; i++) e.push(Wt(t[i]).subscribe(new Z(n, r => {
                                if (e) {
                                    for (let s = 0; s < e.length; s++) s !== i && e[s].unsubscribe();
                                    e = null
                                }
                                n.next(r)
                            })))
                        }
                    }(t))
                }

                function oc(...t) {
                    const n = Pa(t),
                        e = iv(t);
                    return e.length ? new le(i => {
                        let r = e.map(() => []),
                            s = e.map(() => !1);
                        i.add(() => {
                            r = s = null
                        });
                        for (let o = 0; !i.closed && o < e.length; o++) Wt(e[o]).subscribe(new Z(i, a => {
                            if (r[o].push(a), r.every(l => l.length)) {
                                const l = r.map(c => c.shift());
                                i.next(n ? n(...l) : l), r.some((c, u) => !c.length && s[u]) && i.complete()
                            }
                        }, () => {
                            s[o] = !0, !r[o].length && i.complete()
                        }));
                        return () => {
                            r = s = null
                        }
                    }) : Ki
                }

                function ac(...t) {
                    return function EN() {
                        return Qn(1)
                    }()(wr(t, ao(t)))
                }

                function qt(t) {
                    return te((n, e) => {
                        Wt(t).subscribe(new Z(e, () => e.complete(), T)), !e.closed && n.subscribe(e)
                    })
                }

                function hi(t, n) {
                    return te((e, i) => {
                        let r = 0;
                        e.subscribe(new Z(i, s => t.call(n, s, r++) && i.next(s)))
                    })
                }

                function Kf(t, n, e) {
                    const i = A(t) || n || e ? {
                        next: t,
                        error: n,
                        complete: e
                    } : t;
                    return i ? te((r, s) => {
                        var o;
                        null === (o = i.subscribe) || void 0 === o || o.call(i);
                        let a = !0;
                        r.subscribe(new Z(s, l => {
                            var c;
                            null === (c = i.next) || void 0 === c || c.call(i, l), s.next(l)
                        }, () => {
                            var l;
                            a = !1, null === (l = i.complete) || void 0 === l || l.call(i), s.complete()
                        }, l => {
                            var c;
                            a = !1, null === (c = i.error) || void 0 === c || c.call(i, l), s.error(l)
                        }, () => {
                            var l, c;
                            a && (null === (l = i.unsubscribe) || void 0 === l || l.call(i)), null === (c = i.finalize) || void 0 === c || c.call(i)
                        }))
                    }) : ve
                }

                function Zf(...t) {
                    const n = Pa(t);
                    return te((e, i) => {
                        const r = t.length,
                            s = new Array(r);
                        let o = t.map(() => !1),
                            a = !1;
                        for (let l = 0; l < r; l++) Wt(t[l]).subscribe(new Z(i, c => {
                            s[l] = c, !a && !o[l] && (o[l] = !0, (a = o.every(ve)) && (o = null))
                        }, T));
                        e.subscribe(new Z(i, l => {
                            if (a) {
                                const c = [l, ...s];
                                i.next(n ? n(...c) : c)
                            }
                        }))
                    })
                }

                function dv(t, n) {
                    return n ? e => ac(n.pipe(on(1), function AN() {
                        return te((t, n) => {
                            t.subscribe(new Z(n, T))
                        })
                    }()), e.pipe(dv(t))) : Lt((e, i) => t(e, i).pipe(on(1), function IN(t) {
                        return Ge(() => t)
                    }(e)))
                }

                function fv(t, n = nv) {
                    const e = sc(t, n);
                    return dv(() => e)
                }
                new le(T);
                var PA = {
                    left: "right",
                    right: "left",
                    bottom: "top",
                    top: "bottom"
                };

                function _c(t) {
                    return t.replace(/left|right|bottom|top/g, function(n) {
                        return PA[n]
                    })
                }

                function Ri(t) {
                    return t.split("-")[0]
                }
                var FA = {
                    start: "end",
                    end: "start"
                };

                function vy(t) {
                    return t.replace(/start|end/g, function(n) {
                        return FA[n]
                    })
                }
                var Pn = "top",
                    gi = "bottom",
                    mi = "right",
                    Fn = "left",
                    yp = "auto",
                    la = [Pn, gi, mi, Fn],
                    Ws = "start",
                    ca = "end",
                    yy = "viewport",
                    ua = "popper",
                    by = la.reduce(function(t, n) {
                        return t.concat([n + "-" + Ws, n + "-" + ca])
                    }, []),
                    Dy = [].concat(la, [yp]).reduce(function(t, n) {
                        return t.concat([n, n + "-" + Ws, n + "-" + ca])
                    }, []),
                    YA = ["beforeRead", "read", "afterRead", "beforeMain", "main", "afterMain", "beforeWrite", "write", "afterWrite"];

                function _i(t) {
                    if (null == t) return window;
                    if ("[object Window]" !== t.toString()) {
                        var n = t.ownerDocument;
                        return n && n.defaultView || window
                    }
                    return t
                }

                function Ys(t) {
                    return t instanceof _i(t).Element || t instanceof Element
                }

                function Kn(t) {
                    return t instanceof _i(t).HTMLElement || t instanceof HTMLElement
                }

                function xy(t) {
                    return "undefined" != typeof ShadowRoot && (t instanceof _i(t).ShadowRoot || t instanceof ShadowRoot)
                }

                function pr(t) {
                    return ((Ys(t) ? t.ownerDocument : t.document) || window.document).documentElement
                }
                var Fr = Math.max,
                    vc = Math.min,
                    Ks = Math.round;

                function Zs(t, n) {
                    void 0 === n && (n = !1);
                    var e = t.getBoundingClientRect(),
                        i = 1,
                        r = 1;
                    if (Kn(t) && n) {
                        var s = t.offsetHeight,
                            o = t.offsetWidth;
                        o > 0 && (i = Ks(e.width) / o || 1), s > 0 && (r = Ks(e.height) / s || 1)
                    }
                    return {
                        width: e.width / i,
                        height: e.height / r,
                        top: e.top / r,
                        right: e.right / i,
                        bottom: e.bottom / r,
                        left: e.left / i,
                        x: e.left / i,
                        y: e.top / r
                    }
                }

                function bp(t) {
                    var n = _i(t);
                    return {
                        scrollLeft: n.pageXOffset,
                        scrollTop: n.pageYOffset
                    }
                }

                function Dp(t) {
                    return Zs(pr(t)).left + bp(t).scrollLeft
                }

                function Ui(t) {
                    return _i(t).getComputedStyle(t)
                }

                function Pi(t) {
                    return t ? (t.nodeName || "").toLowerCase() : null
                }

                function yc(t) {
                    return "html" === Pi(t) ? t : t.assignedSlot || t.parentNode || (xy(t) ? t.host : null) || pr(t)
                }

                function xp(t) {
                    var n = Ui(t);
                    return /auto|scroll|overlay|hidden/.test(n.overflow + n.overflowY + n.overflowX)
                }

                function wy(t) {
                    return ["html", "body", "#document"].indexOf(Pi(t)) >= 0 ? t.ownerDocument.body : Kn(t) && xp(t) ? t : wy(yc(t))
                }

                function da(t, n) {
                    var e;
                    void 0 === n && (n = []);
                    var i = wy(t),
                        r = i === (null == (e = t.ownerDocument) ? void 0 : e.body),
                        s = _i(i),
                        o = r ? [s].concat(s.visualViewport || [], xp(i) ? i : []) : i,
                        a = n.concat(o);
                    return r ? a : a.concat(da(yc(o)))
                }

                function QA(t) {
                    return ["table", "td", "th"].indexOf(Pi(t)) >= 0
                }

                function Cy(t) {
                    return Kn(t) && "fixed" !== Ui(t).position ? t.offsetParent : null
                }

                function fa(t) {
                    for (var n = _i(t), e = Cy(t); e && QA(e) && "static" === Ui(e).position;) e = Cy(e);
                    return e && ("html" === Pi(e) || "body" === Pi(e) && "static" === Ui(e).position) ? n : e || function JA(t) {
                        var n = -1 !== navigator.userAgent.toLowerCase().indexOf("firefox");
                        if (-1 !== navigator.userAgent.indexOf("Trident") && Kn(t) && "fixed" === Ui(t).position) return null;
                        for (var r = yc(t); Kn(r) && ["html", "body"].indexOf(Pi(r)) < 0;) {
                            var s = Ui(r);
                            if ("none" !== s.transform || "none" !== s.perspective || "paint" === s.contain || -1 !== ["transform", "perspective"].indexOf(s.willChange) || n && "filter" === s.willChange || n && s.filter && "none" !== s.filter) return r;
                            r = r.parentNode
                        }
                        return null
                    }(t) || n
                }

                function My(t, n) {
                    var e = n.getRootNode && n.getRootNode();
                    if (t.contains(n)) return !0;
                    if (e && xy(e)) {
                        var i = n;
                        do {
                            if (i && t.isSameNode(i)) return !0;
                            i = i.parentNode || i.host
                        } while (i)
                    }
                    return !1
                }

                function wp(t) {
                    return Object.assign({}, t, {
                        left: t.x,
                        top: t.y,
                        right: t.x + t.width,
                        bottom: t.y + t.height
                    })
                }

                function Ty(t, n) {
                    return n === yy ? wp(function KA(t) {
                        var n = _i(t),
                            e = pr(t),
                            i = n.visualViewport,
                            r = e.clientWidth,
                            s = e.clientHeight,
                            o = 0,
                            a = 0;
                        return i && (r = i.width, s = i.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (o = i.offsetLeft, a = i.offsetTop)), {
                            width: r,
                            height: s,
                            x: o + Dp(t),
                            y: a
                        }
                    }(t)) : Ys(n) ? function XA(t) {
                        var n = Zs(t);
                        return n.top = n.top + t.clientTop, n.left = n.left + t.clientLeft, n.bottom = n.top + t.clientHeight, n.right = n.left + t.clientWidth, n.width = t.clientWidth, n.height = t.clientHeight, n.x = n.left, n.y = n.top, n
                    }(n) : wp(function ZA(t) {
                        var n, e = pr(t),
                            i = bp(t),
                            r = null == (n = t.ownerDocument) ? void 0 : n.body,
                            s = Fr(e.scrollWidth, e.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0),
                            o = Fr(e.scrollHeight, e.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0),
                            a = -i.scrollLeft + Dp(t),
                            l = -i.scrollTop;
                        return "rtl" === Ui(r || e).direction && (a += Fr(e.clientWidth, r ? r.clientWidth : 0) - s), {
                            width: s,
                            height: o,
                            x: a,
                            y: l
                        }
                    }(pr(t)))
                }

                function Qs(t) {
                    return t.split("-")[1]
                }

                function Cp(t) {
                    return ["top", "bottom"].indexOf(t) >= 0 ? "x" : "y"
                }

                function Sy(t) {
                    var l, n = t.reference,
                        e = t.element,
                        i = t.placement,
                        r = i ? Ri(i) : null,
                        s = i ? Qs(i) : null,
                        o = n.x + n.width / 2 - e.width / 2,
                        a = n.y + n.height / 2 - e.height / 2;
                    switch (r) {
                        case Pn:
                            l = {
                                x: o,
                                y: n.y - e.height
                            };
                            break;
                        case gi:
                            l = {
                                x: o,
                                y: n.y + n.height
                            };
                            break;
                        case mi:
                            l = {
                                x: n.x + n.width,
                                y: a
                            };
                            break;
                        case Fn:
                            l = {
                                x: n.x - e.width,
                                y: a
                            };
                            break;
                        default:
                            l = {
                                x: n.x,
                                y: n.y
                            }
                    }
                    var c = r ? Cp(r) : null;
                    if (null != c) {
                        var u = "y" === c ? "height" : "width";
                        switch (s) {
                            case Ws:
                                l[c] = l[c] - (n[u] / 2 - e[u] / 2);
                                break;
                            case ca:
                                l[c] = l[c] + (n[u] / 2 - e[u] / 2)
                        }
                    }
                    return l
                }

                function ky(t) {
                    return Object.assign({}, {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0
                    }, t)
                }

                function Ny(t, n) {
                    return n.reduce(function(e, i) {
                        return e[i] = t, e
                    }, {})
                }

                function Mp(t, n) {
                    void 0 === n && (n = {});
                    var i = n.placement,
                        r = void 0 === i ? t.placement : i,
                        s = n.boundary,
                        o = void 0 === s ? "clippingParents" : s,
                        a = n.rootBoundary,
                        l = void 0 === a ? yy : a,
                        c = n.elementContext,
                        u = void 0 === c ? ua : c,
                        p = n.altBoundary,
                        h = void 0 !== p && p,
                        m = n.padding,
                        M = void 0 === m ? 0 : m,
                        I = ky("number" != typeof M ? M : Ny(M, la)),
                        Y = t.rects.popper,
                        P = t.elements[h ? u === ua ? "reference" : ua : u],
                        ue = function tI(t, n, e) {
                            var i = "clippingParents" === n ? function eI(t) {
                                    var n = da(yc(t)),
                                        i = ["absolute", "fixed"].indexOf(Ui(t).position) >= 0 && Kn(t) ? fa(t) : t;
                                    return Ys(i) ? n.filter(function(r) {
                                        return Ys(r) && My(r, i) && "body" !== Pi(r)
                                    }) : []
                                }(t) : [].concat(n),
                                r = [].concat(i, [e]),
                                o = r.reduce(function(a, l) {
                                    var c = Ty(t, l);
                                    return a.top = Fr(c.top, a.top), a.right = vc(c.right, a.right), a.bottom = vc(c.bottom, a.bottom), a.left = Fr(c.left, a.left), a
                                }, Ty(t, r[0]));
                            return o.width = o.right - o.left, o.height = o.bottom - o.top, o.x = o.left, o.y = o.top, o
                        }(Ys(P) ? P : P.contextElement || pr(t.elements.popper), o, l),
                        re = Zs(t.elements.reference),
                        ge = Sy({
                            reference: re,
                            element: Y,
                            strategy: "absolute",
                            placement: r
                        }),
                        we = wp(Object.assign({}, Y, ge)),
                        Ne = u === ua ? we : re,
                        Ue = {
                            top: ue.top - Ne.top + I.top,
                            bottom: Ne.bottom - ue.bottom + I.bottom,
                            left: ue.left - Ne.left + I.left,
                            right: Ne.right - ue.right + I.right
                        },
                        At = t.modifiersData.offset;
                    if (u === ua && At) {
                        var It = At[r];
                        Object.keys(Ue).forEach(function(ft) {
                            var yn = [mi, gi].indexOf(ft) >= 0 ? 1 : -1,
                                Kt = [Pn, gi].indexOf(ft) >= 0 ? "y" : "x";
                            Ue[ft] += It[Kt] * yn
                        })
                    }
                    return Ue
                }
                const sI = {
                    name: "flip",
                    enabled: !0,
                    phase: "main",
                    fn: function rI(t) {
                        var n = t.state,
                            e = t.options,
                            i = t.name;
                        if (!n.modifiersData[i]._skip) {
                            for (var r = e.mainAxis, s = void 0 === r || r, o = e.altAxis, a = void 0 === o || o, l = e.fallbackPlacements, c = e.padding, u = e.boundary, p = e.rootBoundary, h = e.altBoundary, m = e.flipVariations, M = void 0 === m || m, I = e.allowedAutoPlacements, H = n.options.placement, Y = Ri(H), ue = l || (Y !== H && M ? function iI(t) {
                                    if (Ri(t) === yp) return [];
                                    var n = _c(t);
                                    return [vy(t), n, vy(n)]
                                }(H) : [_c(H)]), re = [H].concat(ue).reduce(function(to, gr) {
                                    return to.concat(Ri(gr) === yp ? function nI(t, n) {
                                        void 0 === n && (n = {});
                                        var r = n.boundary,
                                            s = n.rootBoundary,
                                            o = n.padding,
                                            a = n.flipVariations,
                                            l = n.allowedAutoPlacements,
                                            c = void 0 === l ? Dy : l,
                                            u = Qs(n.placement),
                                            p = u ? a ? by : by.filter(function(M) {
                                                return Qs(M) === u
                                            }) : la,
                                            h = p.filter(function(M) {
                                                return c.indexOf(M) >= 0
                                            });
                                        0 === h.length && (h = p);
                                        var m = h.reduce(function(M, I) {
                                            return M[I] = Mp(t, {
                                                placement: I,
                                                boundary: r,
                                                rootBoundary: s,
                                                padding: o
                                            })[Ri(I)], M
                                        }, {});
                                        return Object.keys(m).sort(function(M, I) {
                                            return m[M] - m[I]
                                        })
                                    }(n, {
                                        placement: gr,
                                        boundary: u,
                                        rootBoundary: p,
                                        padding: c,
                                        flipVariations: M,
                                        allowedAutoPlacements: I
                                    }) : gr)
                                }, []), ge = n.rects.reference, we = n.rects.popper, Ne = new Map, Ue = !0, At = re[0], It = 0; It < re.length; It++) {
                                var ft = re[It],
                                    yn = Ri(ft),
                                    Kt = Qs(ft) === Ws,
                                    Wi = [Pn, gi].indexOf(yn) >= 0,
                                    Yi = Wi ? "width" : "height",
                                    Zt = Mp(n, {
                                        placement: ft,
                                        boundary: u,
                                        rootBoundary: p,
                                        altBoundary: h,
                                        padding: c
                                    }),
                                    yi = Wi ? Kt ? mi : Fn : Kt ? gi : Pn;
                                ge[Yi] > we[Yi] && (yi = _c(yi));
                                var Oc = _c(yi),
                                    Gr = [];
                                if (s && Gr.push(Zt[yn] <= 0), a && Gr.push(Zt[yi] <= 0, Zt[Oc] <= 0), Gr.every(function(to) {
                                        return to
                                    })) {
                                    At = ft, Ue = !1;
                                    break
                                }
                                Ne.set(ft, Gr)
                            }
                            if (Ue)
                                for (var Lp = function(gr) {
                                        var wa = re.find(function(Fc) {
                                            var $r = Ne.get(Fc);
                                            if ($r) return $r.slice(0, gr).every(function(Vp) {
                                                return Vp
                                            })
                                        });
                                        if (wa) return At = wa, "break"
                                    }, xa = M ? 3 : 1; xa > 0 && "break" !== Lp(xa); xa--);
                            n.placement !== At && (n.modifiersData[i]._skip = !0, n.placement = At, n.reset = !0)
                        }
                    },
                    requiresIfExists: ["offset"],
                    data: {
                        _skip: !1
                    }
                };

                function pa(t, n, e) {
                    return Fr(t, vc(n, e))
                }

                function Tp(t) {
                    var n = Zs(t),
                        e = t.offsetWidth,
                        i = t.offsetHeight;
                    return Math.abs(n.width - e) <= 1 && (e = n.width), Math.abs(n.height - i) <= 1 && (i = n.height), {
                        x: t.offsetLeft,
                        y: t.offsetTop,
                        width: e,
                        height: i
                    }
                }
                const cI = {
                        name: "preventOverflow",
                        enabled: !0,
                        phase: "main",
                        fn: function lI(t) {
                            var n = t.state,
                                e = t.options,
                                i = t.name,
                                r = e.mainAxis,
                                s = void 0 === r || r,
                                o = e.altAxis,
                                a = void 0 !== o && o,
                                h = e.tether,
                                m = void 0 === h || h,
                                M = e.tetherOffset,
                                I = void 0 === M ? 0 : M,
                                H = Mp(n, {
                                    boundary: e.boundary,
                                    rootBoundary: e.rootBoundary,
                                    padding: e.padding,
                                    altBoundary: e.altBoundary
                                }),
                                Y = Ri(n.placement),
                                P = Qs(n.placement),
                                ue = !P,
                                re = Cp(Y),
                                ge = function oI(t) {
                                    return "x" === t ? "y" : "x"
                                }(re),
                                we = n.modifiersData.popperOffsets,
                                Ne = n.rects.reference,
                                Ue = n.rects.popper,
                                At = "function" == typeof I ? I(Object.assign({}, n.rects, {
                                    placement: n.placement
                                })) : I,
                                It = "number" == typeof At ? {
                                    mainAxis: At,
                                    altAxis: At
                                } : Object.assign({
                                    mainAxis: 0,
                                    altAxis: 0
                                }, At),
                                ft = n.modifiersData.offset ? n.modifiersData.offset[n.placement] : null,
                                yn = {
                                    x: 0,
                                    y: 0
                                };
                            if (we) {
                                if (s) {
                                    var Kt, Wi = "y" === re ? Pn : Fn,
                                        Yi = "y" === re ? gi : mi,
                                        Zt = "y" === re ? "height" : "width",
                                        yi = we[re],
                                        Oc = yi + H[Wi],
                                        Gr = yi - H[Yi],
                                        Rc = m ? -Ue[Zt] / 2 : 0,
                                        Lp = P === Ws ? Ne[Zt] : Ue[Zt],
                                        xa = P === Ws ? -Ue[Zt] : -Ne[Zt],
                                        Pc = n.elements.arrow,
                                        to = m && Pc ? Tp(Pc) : {
                                            width: 0,
                                            height: 0
                                        },
                                        gr = n.modifiersData["arrow#persistent"] ? n.modifiersData["arrow#persistent"].padding : {
                                            top: 0,
                                            right: 0,
                                            bottom: 0,
                                            left: 0
                                        },
                                        wa = gr[Wi],
                                        Fc = gr[Yi],
                                        $r = pa(0, Ne[Zt], to[Zt]),
                                        Vp = ue ? Ne[Zt] / 2 - Rc - $r - wa - It.mainAxis : Lp - $r - wa - It.mainAxis,
                                        PP = ue ? -Ne[Zt] / 2 + Rc + $r + Fc + It.mainAxis : xa + $r + Fc + It.mainAxis,
                                        Hp = n.elements.arrow && fa(n.elements.arrow),
                                        Sb = null != (Kt = null == ft ? void 0 : ft[re]) ? Kt : 0,
                                        LP = yi + PP - Sb,
                                        Eb = pa(m ? vc(Oc, yi + Vp - Sb - (Hp ? "y" === re ? Hp.clientTop || 0 : Hp.clientLeft || 0 : 0)) : Oc, yi, m ? Fr(Gr, LP) : Gr);
                                    we[re] = Eb, yn[re] = Eb - yi
                                }
                                if (a) {
                                    var kb, qr = we[ge],
                                        Bc = "y" === ge ? "height" : "width",
                                        Nb = qr + H["x" === re ? Pn : Fn],
                                        Ab = qr - H["x" === re ? gi : mi],
                                        jp = -1 !== [Pn, Fn].indexOf(Y),
                                        Ib = null != (kb = null == ft ? void 0 : ft[ge]) ? kb : 0,
                                        Ob = jp ? Nb : qr - Ne[Bc] - Ue[Bc] - Ib + It.altAxis,
                                        Rb = jp ? qr + Ne[Bc] + Ue[Bc] - Ib - It.altAxis : Ab,
                                        Pb = m && jp ? function aI(t, n, e) {
                                            var i = pa(t, n, e);
                                            return i > e ? e : i
                                        }(Ob, qr, Rb) : pa(m ? Ob : Nb, qr, m ? Rb : Ab);
                                    we[ge] = Pb, yn[ge] = Pb - qr
                                }
                                n.modifiersData[i] = yn
                            }
                        },
                        requiresIfExists: ["offset"]
                    },
                    pI = {
                        name: "arrow",
                        enabled: !0,
                        phase: "main",
                        fn: function dI(t) {
                            var n, e = t.state,
                                i = t.name,
                                r = t.options,
                                s = e.elements.arrow,
                                o = e.modifiersData.popperOffsets,
                                a = Ri(e.placement),
                                l = Cp(a),
                                u = [Fn, mi].indexOf(a) >= 0 ? "height" : "width";
                            if (s && o) {
                                var p = function(n, e) {
                                        return ky("number" != typeof(n = "function" == typeof n ? n(Object.assign({}, e.rects, {
                                            placement: e.placement
                                        })) : n) ? n : Ny(n, la))
                                    }(r.padding, e),
                                    h = Tp(s),
                                    m = "y" === l ? Pn : Fn,
                                    M = "y" === l ? gi : mi,
                                    I = e.rects.reference[u] + e.rects.reference[l] - o[l] - e.rects.popper[u],
                                    H = o[l] - e.rects.reference[l],
                                    Y = fa(s),
                                    P = Y ? "y" === l ? Y.clientHeight || 0 : Y.clientWidth || 0 : 0,
                                    we = P / 2 - h[u] / 2 + (I / 2 - H / 2),
                                    Ne = pa(p[m], we, P - h[u] - p[M]);
                                e.modifiersData[i] = ((n = {})[l] = Ne, n.centerOffset = Ne - we, n)
                            }
                        },
                        effect: function fI(t) {
                            var n = t.state,
                                i = t.options.element,
                                r = void 0 === i ? "[data-popper-arrow]" : i;
                            null != r && ("string" == typeof r && !(r = n.elements.popper.querySelector(r)) || !My(n.elements.popper, r) || (n.elements.arrow = r))
                        },
                        requires: ["popperOffsets"],
                        requiresIfExists: ["preventOverflow"]
                    };

                function _I(t, n, e) {
                    void 0 === e && (e = !1);
                    var i = Kn(n),
                        r = Kn(n) && function mI(t) {
                            var n = t.getBoundingClientRect(),
                                e = Ks(n.width) / t.offsetWidth || 1,
                                i = Ks(n.height) / t.offsetHeight || 1;
                            return 1 !== e || 1 !== i
                        }(n),
                        s = pr(n),
                        o = Zs(t, r),
                        a = {
                            scrollLeft: 0,
                            scrollTop: 0
                        },
                        l = {
                            x: 0,
                            y: 0
                        };
                    return (i || !i && !e) && (("body" !== Pi(n) || xp(s)) && (a = function gI(t) {
                        return t !== _i(t) && Kn(t) ? function hI(t) {
                            return {
                                scrollLeft: t.scrollLeft,
                                scrollTop: t.scrollTop
                            }
                        }(t) : bp(t)
                    }(n)), Kn(n) ? ((l = Zs(n, !0)).x += n.clientLeft, l.y += n.clientTop) : s && (l.x = Dp(s))), {
                        x: o.left + a.scrollLeft - l.x,
                        y: o.top + a.scrollTop - l.y,
                        width: o.width,
                        height: o.height
                    }
                }

                function vI(t) {
                    var n = new Map,
                        e = new Set,
                        i = [];

                    function r(s) {
                        e.add(s.name), [].concat(s.requires || [], s.requiresIfExists || []).forEach(function(a) {
                            if (!e.has(a)) {
                                var l = n.get(a);
                                l && r(l)
                            }
                        }), i.push(s)
                    }
                    return t.forEach(function(s) {
                        n.set(s.name, s)
                    }), t.forEach(function(s) {
                        e.has(s.name) || r(s)
                    }), i
                }

                function bI(t) {
                    var n;
                    return function() {
                        return n || (n = new Promise(function(e) {
                            Promise.resolve().then(function() {
                                n = void 0, e(t())
                            })
                        })), n
                    }
                }
                var Ay = {
                    placement: "bottom",
                    modifiers: [],
                    strategy: "absolute"
                };

                function Iy() {
                    for (var t = arguments.length, n = new Array(t), e = 0; e < t; e++) n[e] = arguments[e];
                    return !n.some(function(i) {
                        return !(i && "function" == typeof i.getBoundingClientRect)
                    })
                }

                function xI(t) {
                    void 0 === t && (t = {});
                    var e = t.defaultModifiers,
                        i = void 0 === e ? [] : e,
                        r = t.defaultOptions,
                        s = void 0 === r ? Ay : r;
                    return function(a, l, c) {
                        void 0 === c && (c = s);
                        var u = {
                                placement: "bottom",
                                orderedModifiers: [],
                                options: Object.assign({}, Ay, s),
                                modifiersData: {},
                                elements: {
                                    reference: a,
                                    popper: l
                                },
                                attributes: {},
                                styles: {}
                            },
                            p = [],
                            h = !1,
                            m = {
                                state: u,
                                setOptions: function(Y) {
                                    var P = "function" == typeof Y ? Y(u.options) : Y;
                                    I(), u.options = Object.assign({}, s, u.options, P), u.scrollParents = {
                                        reference: Ys(a) ? da(a) : a.contextElement ? da(a.contextElement) : [],
                                        popper: da(l)
                                    };
                                    var ue = function yI(t) {
                                        var n = vI(t);
                                        return YA.reduce(function(e, i) {
                                            return e.concat(n.filter(function(r) {
                                                return r.phase === i
                                            }))
                                        }, [])
                                    }(function DI(t) {
                                        var n = t.reduce(function(e, i) {
                                            var r = e[i.name];
                                            return e[i.name] = r ? Object.assign({}, r, i, {
                                                options: Object.assign({}, r.options, i.options),
                                                data: Object.assign({}, r.data, i.data)
                                            }) : i, e
                                        }, {});
                                        return Object.keys(n).map(function(e) {
                                            return n[e]
                                        })
                                    }([].concat(i, u.options.modifiers)));
                                    return u.orderedModifiers = ue.filter(function(ft) {
                                            return ft.enabled
                                        }),
                                        function M() {
                                            u.orderedModifiers.forEach(function(H) {
                                                var P = H.options,
                                                    re = H.effect;
                                                if ("function" == typeof re) {
                                                    var ge = re({
                                                        state: u,
                                                        name: H.name,
                                                        instance: m,
                                                        options: void 0 === P ? {} : P
                                                    });
                                                    p.push(ge || function() {})
                                                }
                                            })
                                        }(), m.update()
                                },
                                forceUpdate: function() {
                                    if (!h) {
                                        var Y = u.elements,
                                            P = Y.reference,
                                            ue = Y.popper;
                                        if (Iy(P, ue)) {
                                            u.rects = {
                                                reference: _I(P, fa(ue), "fixed" === u.options.strategy),
                                                popper: Tp(ue)
                                            }, u.reset = !1, u.placement = u.options.placement, u.orderedModifiers.forEach(function(ft) {
                                                return u.modifiersData[ft.name] = Object.assign({}, ft.data)
                                            });
                                            for (var ge = 0; ge < u.orderedModifiers.length; ge++)
                                                if (!0 !== u.reset) {
                                                    var we = u.orderedModifiers[ge],
                                                        Ne = we.fn,
                                                        Ue = we.options;
                                                    "function" == typeof Ne && (u = Ne({
                                                        state: u,
                                                        options: void 0 === Ue ? {} : Ue,
                                                        name: we.name,
                                                        instance: m
                                                    }) || u)
                                                } else u.reset = !1, ge = -1
                                        }
                                    }
                                },
                                update: bI(function() {
                                    return new Promise(function(H) {
                                        m.forceUpdate(), H(u)
                                    })
                                }),
                                destroy: function() {
                                    I(), h = !0
                                }
                            };
                        if (!Iy(a, l)) return m;

                        function I() {
                            p.forEach(function(H) {
                                return H()
                            }), p = []
                        }
                        return m.setOptions(c).then(function(H) {
                            !h && c.onFirstUpdate && c.onFirstUpdate(H)
                        }), m
                    }
                }
                var bc = {
                        passive: !0
                    },
                    SI = {
                        top: "auto",
                        right: "auto",
                        bottom: "auto",
                        left: "auto"
                    };

                function Oy(t) {
                    var n, e = t.popper,
                        i = t.popperRect,
                        r = t.placement,
                        s = t.variation,
                        o = t.offsets,
                        a = t.position,
                        l = t.gpuAcceleration,
                        c = t.adaptive,
                        u = t.roundOffsets,
                        p = t.isFixed,
                        h = o.x,
                        m = void 0 === h ? 0 : h,
                        M = o.y,
                        I = void 0 === M ? 0 : M,
                        H = "function" == typeof u ? u({
                            x: m,
                            y: I
                        }) : {
                            x: m,
                            y: I
                        };
                    m = H.x, I = H.y;
                    var Y = o.hasOwnProperty("x"),
                        P = o.hasOwnProperty("y"),
                        ue = Fn,
                        re = Pn,
                        ge = window;
                    if (c) {
                        var we = fa(e),
                            Ne = "clientHeight",
                            Ue = "clientWidth";
                        we === _i(e) && "static" !== Ui(we = pr(e)).position && "absolute" === a && (Ne = "scrollHeight", Ue = "scrollWidth"), we = we, (r === Pn || (r === Fn || r === mi) && s === ca) && (re = gi, I -= (p && ge.visualViewport ? ge.visualViewport.height : we[Ne]) - i.height, I *= l ? 1 : -1), r !== Fn && (r !== Pn && r !== gi || s !== ca) || (ue = mi, m -= (p && ge.visualViewport ? ge.visualViewport.width : we[Ue]) - i.width, m *= l ? 1 : -1)
                    }
                    var Kt, ft = Object.assign({
                            position: a
                        }, c && SI),
                        yn = !0 === u ? function EI(t) {
                            var e = t.y,
                                r = window.devicePixelRatio || 1;
                            return {
                                x: Ks(t.x * r) / r || 0,
                                y: Ks(e * r) / r || 0
                            }
                        }({
                            x: m,
                            y: I
                        }) : {
                            x: m,
                            y: I
                        };
                    return m = yn.x, I = yn.y, Object.assign({}, ft, l ? ((Kt = {})[re] = P ? "0" : "", Kt[ue] = Y ? "0" : "", Kt.transform = (ge.devicePixelRatio || 1) <= 1 ? "translate(" + m + "px, " + I + "px)" : "translate3d(" + m + "px, " + I + "px, 0)", Kt) : ((n = {})[re] = P ? I + "px" : "", n[ue] = Y ? m + "px" : "", n.transform = "", n))
                }
                var RI = xI({
                    defaultModifiers: [{
                        name: "eventListeners",
                        enabled: !0,
                        phase: "write",
                        fn: function() {},
                        effect: function wI(t) {
                            var n = t.state,
                                e = t.instance,
                                i = t.options,
                                r = i.scroll,
                                s = void 0 === r || r,
                                o = i.resize,
                                a = void 0 === o || o,
                                l = _i(n.elements.popper),
                                c = [].concat(n.scrollParents.reference, n.scrollParents.popper);
                            return s && c.forEach(function(u) {
                                    u.addEventListener("scroll", e.update, bc)
                                }), a && l.addEventListener("resize", e.update, bc),
                                function() {
                                    s && c.forEach(function(u) {
                                        u.removeEventListener("scroll", e.update, bc)
                                    }), a && l.removeEventListener("resize", e.update, bc)
                                }
                        },
                        data: {}
                    }, {
                        name: "popperOffsets",
                        enabled: !0,
                        phase: "read",
                        fn: function MI(t) {
                            var n = t.state;
                            n.modifiersData[t.name] = Sy({
                                reference: n.rects.reference,
                                element: n.rects.popper,
                                strategy: "absolute",
                                placement: n.placement
                            })
                        },
                        data: {}
                    }, {
                        name: "computeStyles",
                        enabled: !0,
                        phase: "beforeWrite",
                        fn: function kI(t) {
                            var n = t.state,
                                e = t.options,
                                i = e.gpuAcceleration,
                                r = void 0 === i || i,
                                s = e.adaptive,
                                o = void 0 === s || s,
                                a = e.roundOffsets,
                                l = void 0 === a || a,
                                u = {
                                    placement: Ri(n.placement),
                                    variation: Qs(n.placement),
                                    popper: n.elements.popper,
                                    popperRect: n.rects.popper,
                                    gpuAcceleration: r,
                                    isFixed: "fixed" === n.options.strategy
                                };
                            null != n.modifiersData.popperOffsets && (n.styles.popper = Object.assign({}, n.styles.popper, Oy(Object.assign({}, u, {
                                offsets: n.modifiersData.popperOffsets,
                                position: n.options.strategy,
                                adaptive: o,
                                roundOffsets: l
                            })))), null != n.modifiersData.arrow && (n.styles.arrow = Object.assign({}, n.styles.arrow, Oy(Object.assign({}, u, {
                                offsets: n.modifiersData.arrow,
                                position: "absolute",
                                adaptive: !1,
                                roundOffsets: l
                            })))), n.attributes.popper = Object.assign({}, n.attributes.popper, {
                                "data-popper-placement": n.placement
                            })
                        },
                        data: {}
                    }, {
                        name: "applyStyles",
                        enabled: !0,
                        phase: "write",
                        fn: function AI(t) {
                            var n = t.state;
                            Object.keys(n.elements).forEach(function(e) {
                                var i = n.styles[e] || {},
                                    r = n.attributes[e] || {},
                                    s = n.elements[e];
                                !Kn(s) || !Pi(s) || (Object.assign(s.style, i), Object.keys(r).forEach(function(o) {
                                    var a = r[o];
                                    !1 === a ? s.removeAttribute(o) : s.setAttribute(o, !0 === a ? "" : a)
                                }))
                            })
                        },
                        effect: function II(t) {
                            var n = t.state,
                                e = {
                                    popper: {
                                        position: n.options.strategy,
                                        left: "0",
                                        top: "0",
                                        margin: "0"
                                    },
                                    arrow: {
                                        position: "absolute"
                                    },
                                    reference: {}
                                };
                            return Object.assign(n.elements.popper.style, e.popper), n.styles = e, n.elements.arrow && Object.assign(n.elements.arrow.style, e.arrow),
                                function() {
                                    Object.keys(n.elements).forEach(function(i) {
                                        var r = n.elements[i],
                                            s = n.attributes[i] || {},
                                            a = Object.keys(n.styles.hasOwnProperty(i) ? n.styles[i] : e[i]).reduce(function(l, c) {
                                                return l[c] = "", l
                                            }, {});
                                        !Kn(r) || !Pi(r) || (Object.assign(r.style, a), Object.keys(s).forEach(function(l) {
                                            r.removeAttribute(l)
                                        }))
                                    })
                                }
                        },
                        requires: ["computeStyles"]
                    }]
                });
                const BI = {
                        name: "offset",
                        enabled: !0,
                        phase: "main",
                        requires: ["popperOffsets"],
                        fn: function FI(t) {
                            var n = t.state,
                                i = t.name,
                                r = t.options.offset,
                                s = void 0 === r ? [0, 0] : r,
                                o = Dy.reduce(function(u, p) {
                                    return u[p] = function PI(t, n, e) {
                                        var i = Ri(t),
                                            r = [Fn, Pn].indexOf(i) >= 0 ? -1 : 1,
                                            s = "function" == typeof e ? e(Object.assign({}, n, {
                                                placement: t
                                            })) : e,
                                            o = s[0],
                                            a = s[1];
                                        return o = o || 0, a = (a || 0) * r, [Fn, mi].indexOf(i) >= 0 ? {
                                            x: a,
                                            y: o
                                        } : {
                                            x: o,
                                            y: a
                                        }
                                    }(p, n.rects, s), u
                                }, {}),
                                a = o[n.placement],
                                c = a.y;
                            null != n.modifiersData.popperOffsets && (n.modifiersData.popperOffsets.x += a.x, n.modifiersData.popperOffsets.y += c), n.modifiersData[i] = o
                        }
                    },
                    Ry = ["*"],
                    c3 = ["dialog"];

                function j3(t, n) {
                    1 & t && _(0), 2 & t && Ye(k(2).title)
                }

                function G3(t, n) {}

                function $3(t, n) {
                    if (1 & t && (d(0, "h3", 3), O(1, j3, 1, 1, "ng-template", null, 4, mt), O(3, G3, 0, 0, "ng-template", 5), f()), 2 & t) {
                        const e = Pe(2),
                            i = k();
                        g(3), D("ngTemplateOutlet", i.isTitleTemplate() ? i.title : e)("ngTemplateOutletContext", i.context)
                    }
                }

                function Br(t) {
                    return null != t
                }

                function Js(t) {
                    return (t || document.body).getBoundingClientRect()
                }
                "undefined" != typeof Element && !Element.prototype.closest && (Element.prototype.closest = function(t) {
                    let n = this;
                    if (!document.documentElement.contains(n)) return null;
                    do {
                        if (n.matches(t)) return n;
                        n = n.parentElement || n.parentNode
                    } while (null !== n && 1 === n.nodeType);
                    return null
                });
                const Fy = {
                        animation: !0,
                        transitionTimerDelayMs: 5
                    },
                    sO = () => {},
                    {
                        transitionTimerDelayMs: oO
                    } = Fy,
                    ha = new Map,
                    vn = (t, n, e, i) => {
                        let r = i.context || {};
                        const s = ha.get(n);
                        if (s) switch (i.runningTransition) {
                            case "continue":
                                return Ki;
                            case "stop":
                                t.run(() => s.transition$.complete()), r = Object.assign(s.context, r), ha.delete(n)
                        }
                        const o = e(n, i.animation, r) || sO;
                        if (!i.animation || "none" === window.getComputedStyle(n).transitionProperty) return t.run(() => o()), ic(void 0).pipe(function iO(t) {
                            return n => new le(e => n.subscribe({
                                next: o => t.run(() => e.next(o)),
                                error: o => t.run(() => e.error(o)),
                                complete: () => t.run(() => e.complete())
                            }))
                        }(t));
                        const a = new Te,
                            l = new Te,
                            c = a.pipe(function kN(...t) {
                                return n => ac(n, ic(...t))
                            }(!0));
                        ha.set(n, {
                            transition$: a,
                            complete: () => {
                                l.next(), l.complete()
                            },
                            context: r
                        });
                        const u = function rO(t) {
                            const {
                                transitionDelay: n,
                                transitionDuration: e
                            } = window.getComputedStyle(t);
                            return 1e3 * (parseFloat(n) + parseFloat(e))
                        }(n);
                        return t.runOutsideAngular(() => {
                            const p = mn(n, "transitionend").pipe(qt(c), hi(({
                                target: m
                            }) => m === n));
                            rv(sc(u + oO).pipe(qt(c)), p, l).pipe(qt(c)).subscribe(() => {
                                ha.delete(n), t.run(() => {
                                    o(), a.next(), a.complete()
                                })
                            })
                        }), a.asObservable()
                    };
                let ga = (() => {
                    class t {
                        constructor() {
                            this.animation = Fy.animation
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
                var Ut = (() => {
                    return (t = Ut || (Ut = {}))[t.Tab = 9] = "Tab", t[t.Enter = 13] = "Enter", t[t.Escape = 27] = "Escape", t[t.Space = 32] = "Space", t[t.PageUp = 33] = "PageUp", t[t.PageDown = 34] = "PageDown", t[t.End = 35] = "End", t[t.Home = 36] = "Home", t[t.ArrowLeft = 37] = "ArrowLeft", t[t.ArrowUp = 38] = "ArrowUp", t[t.ArrowRight = 39] = "ArrowRight", t[t.ArrowDown = 40] = "ArrowDown", Ut;
                    var t
                })();
                const wc = (t, n) => !!n && n.some(e => e.contains(t)),
                    Uy = (t, n) => !n || null != function nO(t, n) {
                        return n && void 0 !== t.closest ? t.closest(n) : null
                    }(t, n),
                    kO = "undefined" != typeof navigator && !!navigator.userAgent && (/iPad|iPhone|iPod/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2 || /Android/.test(navigator.userAgent));
                const Wy = ["a[href]", "button:not([disabled])", 'input:not([disabled]):not([type="hidden"])', "select:not([disabled])", "textarea:not([disabled])", "[contenteditable]", '[tabindex]:not([tabindex="-1"])'].join(", ");

                function Yy(t) {
                    const n = Array.from(t.querySelectorAll(Wy)).filter(e => -1 !== e.tabIndex);
                    return [n[0], n[n.length - 1]]
                }
                const IO = /\s+/,
                    OO = /  +/gi,
                    RO = /^start/,
                    PO = /^end/,
                    FO = /-(top|left)$/,
                    BO = /-(bottom|right)$/,
                    VO = /^left/,
                    HO = /^right/,
                    jO = /^start/,
                    GO = /^end/;

                function Ky({
                    placement: t,
                    baseClass: n
                }) {
                    let e = Array.isArray(t) ? t : t.split(IO),
                        r = e.findIndex(l => "auto" === l);
                    r >= 0 && ["top", "bottom", "start", "end", "top-start", "top-end", "bottom-start", "bottom-end", "start-top", "start-bottom", "end-top", "end-bottom"].forEach(function(l) {
                        null == e.find(c => -1 !== c.search("^" + l)) && e.splice(r++, 1, l)
                    });
                    const s = e.map(l => function LO(t) {
                        return t.replace(RO, "left").replace(PO, "right").replace(FO, "-start").replace(BO, "-end")
                    }(l));
                    return {
                        placement: s.shift(),
                        modifiers: [{
                            name: "bootstrapClasses",
                            enabled: !!n,
                            phase: "write",
                            fn({
                                state: l
                            }) {
                                const c = new RegExp(n + "-[a-z]+", "gi"),
                                    u = l.elements.popper,
                                    p = l.placement;
                                let h = u.className;
                                h = h.replace(c, ""), h += ` ${function $O(t,n){let[e,i]=n.split("-");const r=e.replace(VO,"start").replace(HO,"end");let s=[r];if(i){let o=i;("left"===e||"right"===e)&&(o=o.replace(jO,"top").replace(GO,"bottom")),s.push(`${r}-${o}`)}return t&&(s=s.map(o=>`
                                $ {
                                    t
                                } - $ {
                                    o
                                }
                                `)),s.join(" ")}(n,p)}`, h = h.trim().replace(OO, " "), u.className = h
                            }
                        }, sI, cI, pI, {
                            enabled: !0,
                            name: "flip",
                            options: {
                                fallbackPlacements: s
                            }
                        }, {
                            enabled: !0,
                            name: "preventOverflow",
                            phase: "main",
                            fn: function() {}
                        }]
                    }
                }

                function Zy(t) {
                    return t
                }
                new Date(1882, 10, 12), new Date(2174, 10, 25);
                class jr {
                    constructor(n, e, i) {
                        this.nodes = n, this.viewRef = e, this.componentRef = i
                    }
                }
                class n4 {
                    constructor(n, e, i, r, s, o) {
                        this._type = n, this._injector = e, this._viewContainerRef = i, this._renderer = r, this._ngZone = s, this._applicationRef = o, this._windowRef = null, this._contentRef = null
                    }
                    open(n, e, i = !1) {
                        this._windowRef || (this._contentRef = this._getContentRef(n, e), this._windowRef = this._viewContainerRef.createComponent(this._type, {
                            index: this._viewContainerRef.length,
                            injector: this._injector,
                            projectableNodes: this._contentRef.nodes
                        }));
                        const {
                            nativeElement: r
                        } = this._windowRef.location, s = this._ngZone.onStable.pipe(on(1), Lt(() => vn(this._ngZone, r, ({
                            classList: o
                        }) => o.add("show"), {
                            animation: i,
                            runningTransition: "continue"
                        })));
                        return {
                            windowRef: this._windowRef,
                            transition$: s
                        }
                    }
                    close(n = !1) {
                        return this._windowRef ? vn(this._ngZone, this._windowRef.location.nativeElement, ({
                            classList: e
                        }) => e.remove("show"), {
                            animation: n,
                            runningTransition: "stop"
                        }).pipe(Kf(() => {
                            var e;
                            this._windowRef && (this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView)), this._windowRef = null), (null === (e = this._contentRef) || void 0 === e ? void 0 : e.viewRef) && (this._applicationRef.detachView(this._contentRef.viewRef), this._contentRef.viewRef.destroy(), this._contentRef = null)
                        })) : ic(void 0)
                    }
                    _getContentRef(n, e) {
                        if (n) {
                            if (n instanceof bt) {
                                const i = n.createEmbeddedView(e);
                                return this._applicationRef.attachView(i), new jr([i.rootNodes], i)
                            }
                            return new jr([
                                [this._renderer.createText(`${n}`)]
                            ])
                        }
                        return new jr([])
                    }
                }
                let i4 = (() => {
                    class t {
                        constructor(e, i) {
                            this._el = e, this._zone = i
                        }
                        ngOnInit() {
                            this._zone.onStable.asObservable().pipe(on(1)).subscribe(() => {
                                vn(this._zone, this._el.nativeElement, (e, i) => {
                                    i && Js(e), e.classList.add("show")
                                }, {
                                    animation: this.animation,
                                    runningTransition: "continue"
                                })
                            })
                        }
                        hide() {
                            return vn(this._zone, this._el.nativeElement, ({
                                classList: e
                            }) => e.remove("show"), {
                                animation: this.animation,
                                runningTransition: "stop"
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(F(gt), F(Dt))
                    }, t.\u0275cmp = Xn({
                        type: t,
                        selectors: [
                            ["ngb-modal-backdrop"]
                        ],
                        hostAttrs: [2, "z-index", "1050"],
                        hostVars: 6,
                        hostBindings: function(e, i) {
                            2 & e && (qn("modal-backdrop" + (i.backdropClass ? " " + i.backdropClass : "")), vt("show", !i.animation)("fade", i.animation))
                        },
                        inputs: {
                            animation: "animation",
                            backdropClass: "backdropClass"
                        },
                        decls: 0,
                        vars: 0,
                        template: function(e, i) {},
                        encapsulation: 2
                    }), t
                })();
                class ob {
                    close(n) {}
                    dismiss(n) {}
                }
                class r4 {
                    constructor(n, e, i, r) {
                        this._windowCmptRef = n, this._contentRef = e, this._backdropCmptRef = i, this._beforeDismiss = r, this._closed = new Te, this._dismissed = new Te, this._hidden = new Te, n.instance.dismissEvent.subscribe(s => {
                            this.dismiss(s)
                        }), this.result = new Promise((s, o) => {
                            this._resolve = s, this._reject = o
                        }), this.result.then(null, () => {})
                    }
                    get componentInstance() {
                        if (this._contentRef && this._contentRef.componentRef) return this._contentRef.componentRef.instance
                    }
                    get closed() {
                        return this._closed.asObservable().pipe(qt(this._hidden))
                    }
                    get dismissed() {
                        return this._dismissed.asObservable().pipe(qt(this._hidden))
                    }
                    get hidden() {
                        return this._hidden.asObservable()
                    }
                    get shown() {
                        return this._windowCmptRef.instance.shown.asObservable()
                    }
                    close(n) {
                        this._windowCmptRef && (this._closed.next(n), this._resolve(n), this._removeModalElements())
                    }
                    _dismiss(n) {
                        this._dismissed.next(n), this._reject(n), this._removeModalElements()
                    }
                    dismiss(n) {
                        if (this._windowCmptRef)
                            if (this._beforeDismiss) {
                                const e = this._beforeDismiss();
                                ! function tO(t) {
                                    return t && t.then
                                }(e) ? !1 !== e && this._dismiss(n): e.then(i => {
                                    !1 !== i && this._dismiss(n)
                                }, () => {})
                            } else this._dismiss(n)
                    }
                    _removeModalElements() {
                        const n = this._windowCmptRef.instance.hide(),
                            e = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : ic(void 0);
                        n.subscribe(() => {
                            const {
                                nativeElement: i
                            } = this._windowCmptRef.location;
                            i.parentNode.removeChild(i), this._windowCmptRef.destroy(), this._contentRef && this._contentRef.viewRef && this._contentRef.viewRef.destroy(), this._windowCmptRef = null, this._contentRef = null
                        }), e.subscribe(() => {
                            if (this._backdropCmptRef) {
                                const {
                                    nativeElement: i
                                } = this._backdropCmptRef.location;
                                i.parentNode.removeChild(i), this._backdropCmptRef.destroy(), this._backdropCmptRef = null
                            }
                        }), oc(n, e).subscribe(() => {
                            this._hidden.next(), this._hidden.complete()
                        })
                    }
                }
                var ya = (() => {
                    return (t = ya || (ya = {}))[t.BACKDROP_CLICK = 0] = "BACKDROP_CLICK", t[t.ESC = 1] = "ESC", ya;
                    var t
                })();
                let s4 = (() => {
                    class t {
                        constructor(e, i, r) {
                            this._document = e, this._elRef = i, this._zone = r, this._closed$ = new Te, this._elWithFocus = null, this.backdrop = !0, this.keyboard = !0, this.dismissEvent = new Ke, this.shown = new Te, this.hidden = new Te
                        }
                        dismiss(e) {
                            this.dismissEvent.emit(e)
                        }
                        ngOnInit() {
                            this._elWithFocus = this._document.activeElement, this._zone.onStable.asObservable().pipe(on(1)).subscribe(() => {
                                this._show()
                            })
                        }
                        ngOnDestroy() {
                            this._disableEventHandling()
                        }
                        hide() {
                            const {
                                nativeElement: e
                            } = this._elRef, i = {
                                animation: this.animation,
                                runningTransition: "stop"
                            }, o = oc(vn(this._zone, e, () => e.classList.remove("show"), i), vn(this._zone, this._dialogEl.nativeElement, () => {}, i));
                            return o.subscribe(() => {
                                this.hidden.next(), this.hidden.complete()
                            }), this._disableEventHandling(), this._restoreFocus(), o
                        }
                        _show() {
                            const e = {
                                animation: this.animation,
                                runningTransition: "continue"
                            };
                            oc(vn(this._zone, this._elRef.nativeElement, (s, o) => {
                                o && Js(s), s.classList.add("show")
                            }, e), vn(this._zone, this._dialogEl.nativeElement, () => {}, e)).subscribe(() => {
                                this.shown.next(), this.shown.complete()
                            }), this._enableEventHandling(), this._setFocus()
                        }
                        _enableEventHandling() {
                            const {
                                nativeElement: e
                            } = this._elRef;
                            this._zone.runOutsideAngular(() => {
                                mn(e, "keydown").pipe(qt(this._closed$), hi(r => r.which === Ut.Escape)).subscribe(r => {
                                    this.keyboard ? requestAnimationFrame(() => {
                                        r.defaultPrevented || this._zone.run(() => this.dismiss(ya.ESC))
                                    }) : "static" === this.backdrop && this._bumpBackdrop()
                                });
                                let i = !1;
                                mn(this._dialogEl.nativeElement, "mousedown").pipe(qt(this._closed$), Kf(() => i = !1), function uv(t, n) {
                                    return te((e, i) => {
                                        let r = null,
                                            s = 0,
                                            o = !1;
                                        const a = () => o && !r && i.complete();
                                        e.subscribe(new Z(i, l => {
                                            null == r || r.unsubscribe();
                                            let c = 0;
                                            const u = s++;
                                            Wt(t(l, u)).subscribe(r = new Z(i, p => i.next(n ? n(l, p, u, c++) : p), () => {
                                                r = null, a()
                                            }))
                                        }, () => {
                                            o = !0, a()
                                        }))
                                    })
                                }(() => mn(e, "mouseup").pipe(qt(this._closed$), on(1))), hi(({
                                    target: r
                                }) => e === r)).subscribe(() => {
                                    i = !0
                                }), mn(e, "click").pipe(qt(this._closed$)).subscribe(({
                                    target: r
                                }) => {
                                    e === r && ("static" === this.backdrop ? this._bumpBackdrop() : !0 === this.backdrop && !i && this._zone.run(() => this.dismiss(ya.BACKDROP_CLICK))), i = !1
                                })
                            })
                        }
                        _disableEventHandling() {
                            this._closed$.next()
                        }
                        _setFocus() {
                            const {
                                nativeElement: e
                            } = this._elRef;
                            if (!e.contains(document.activeElement)) {
                                const i = e.querySelector("[ngbAutofocus]"),
                                    r = Yy(e)[0];
                                (i || r || e).focus()
                            }
                        }
                        _restoreFocus() {
                            const e = this._document.body,
                                i = this._elWithFocus;
                            let r;
                            r = i && i.focus && e.contains(i) ? i : e, this._zone.runOutsideAngular(() => {
                                setTimeout(() => r.focus()), this._elWithFocus = null
                            })
                        }
                        _bumpBackdrop() {
                            "static" === this.backdrop && vn(this._zone, this._elRef.nativeElement, ({
                                classList: e
                            }) => (e.add("modal-static"), () => e.remove("modal-static")), {
                                animation: this.animation,
                                runningTransition: "continue"
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(F(nn), F(gt), F(Dt))
                    }, t.\u0275cmp = Xn({
                        type: t,
                        selectors: [
                            ["ngb-modal-window"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && Pl(c3, 7), 2 & e) {
                                let r;
                                St(r = Et()) && (i._dialogEl = r.first)
                            }
                        },
                        hostAttrs: ["role", "dialog", "tabindex", "-1"],
                        hostVars: 7,
                        hostBindings: function(e, i) {
                            2 & e && (at("aria-modal", !0)("aria-labelledby", i.ariaLabelledBy)("aria-describedby", i.ariaDescribedBy), qn("modal d-block" + (i.windowClass ? " " + i.windowClass : "")), vt("fade", i.animation))
                        },
                        inputs: {
                            animation: "animation",
                            ariaLabelledBy: "ariaLabelledBy",
                            ariaDescribedBy: "ariaDescribedBy",
                            backdrop: "backdrop",
                            centered: "centered",
                            keyboard: "keyboard",
                            scrollable: "scrollable",
                            size: "size",
                            windowClass: "windowClass",
                            modalDialogClass: "modalDialogClass"
                        },
                        outputs: {
                            dismissEvent: "dismiss"
                        },
                        ngContentSelectors: Ry,
                        decls: 4,
                        vars: 2,
                        consts: [
                            ["role", "document"],
                            ["dialog", ""],
                            [1, "modal-content"]
                        ],
                        template: function(e, i) {
                            1 & e && (Fd(), d(0, "div", 0, 1), d(2, "div", 2), Bd(3), f(), f()), 2 & e && qn("modal-dialog" + (i.size ? " modal-" + i.size : "") + (i.centered ? " modal-dialog-centered" : "") + (i.scrollable ? " modal-dialog-scrollable" : "") + (i.modalDialogClass ? " " + i.modalDialogClass : ""))
                        },
                        styles: ["ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\n"],
                        encapsulation: 2
                    }), t
                })();
                const o4 = () => {};
                let a4 = (() => {
                        class t {
                            constructor(e) {
                                this._document = e
                            }
                            compensate() {
                                const e = this._getWidth();
                                return this._isPresent(e) ? this._adjustBody(e) : o4
                            }
                            _adjustBody(e) {
                                const i = this._document.body,
                                    r = i.style.paddingRight,
                                    s = parseFloat(window.getComputedStyle(i)["padding-right"]);
                                return i.style["padding-right"] = `${s+e}px`, () => i.style["padding-right"] = r
                            }
                            _isPresent(e) {
                                const i = this._document.body.getBoundingClientRect();
                                return window.innerWidth - (i.left + i.right) >= e - .1 * e
                            }
                            _getWidth() {
                                const e = this._document.createElement("div");
                                e.className = "modal-scrollbar-measure";
                                const i = this._document.body;
                                i.appendChild(e);
                                const r = e.getBoundingClientRect().width - e.clientWidth;
                                return i.removeChild(e), r
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(nn))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })(),
                    l4 = (() => {
                        class t {
                            constructor(e, i, r, s, o, a) {
                                this._applicationRef = e, this._injector = i, this._document = r, this._scrollBar = s, this._rendererFactory = o, this._ngZone = a, this._activeWindowCmptHasChanged = new Te, this._ariaHiddenValues = new Map, this._backdropAttributes = ["animation", "backdropClass"], this._modalRefs = [], this._windowAttributes = ["animation", "ariaLabelledBy", "ariaDescribedBy", "backdrop", "centered", "keyboard", "scrollable", "size", "windowClass", "modalDialogClass"], this._windowCmpts = [], this._activeInstances = new Ke, this._activeWindowCmptHasChanged.subscribe(() => {
                                    if (this._windowCmpts.length) {
                                        const l = this._windowCmpts[this._windowCmpts.length - 1];
                                        ((t, n, e, i = !1) => {
                                            this._ngZone.runOutsideAngular(() => {
                                                const r = mn(n, "focusin").pipe(qt(e), Ge(s => s.target));
                                                mn(n, "keydown").pipe(qt(e), hi(s => s.which === Ut.Tab), Zf(r)).subscribe(([s, o]) => {
                                                    const [a, l] = Yy(n);
                                                    (o === a || o === n) && s.shiftKey && (l.focus(), s.preventDefault()), o === l && !s.shiftKey && (a.focus(), s.preventDefault())
                                                }), i && mn(n, "click").pipe(qt(e), Zf(r), Ge(s => s[1])).subscribe(s => s.focus())
                                            })
                                        })(0, l.location.nativeElement, this._activeWindowCmptHasChanged), this._revertAriaHidden(), this._setAriaHidden(l.location.nativeElement)
                                    }
                                })
                            }
                            open(e, i, r, s) {
                                const o = s.container instanceof HTMLElement ? s.container : Br(s.container) ? this._document.querySelector(s.container) : this._document.body,
                                    a = this._rendererFactory.createRenderer(null, null),
                                    l = this._scrollBar.compensate(),
                                    c = () => {
                                        this._modalRefs.length || (a.removeClass(this._document.body, "modal-open"), this._revertAriaHidden())
                                    };
                                if (!o) throw new Error(`The specified modal container "${s.container||"body"}" was not found in the DOM.`);
                                const u = new ob,
                                    p = this._getContentRef(e, s.injector || i, r, u, s);
                                let h = !1 !== s.backdrop ? this._attachBackdrop(e, o) : void 0,
                                    m = this._attachWindowComponent(e, o, p),
                                    M = new r4(m, p, h, s.beforeDismiss);
                                return this._registerModalRef(M), this._registerWindowCmpt(m), M.result.then(l, l), M.result.then(c, c), u.close = I => {
                                    M.close(I)
                                }, u.dismiss = I => {
                                    M.dismiss(I)
                                }, this._applyWindowOptions(m.instance, s), 1 === this._modalRefs.length && a.addClass(this._document.body, "modal-open"), h && h.instance && (this._applyBackdropOptions(h.instance, s), h.changeDetectorRef.detectChanges()), m.changeDetectorRef.detectChanges(), M
                            }
                            get activeInstances() {
                                return this._activeInstances
                            }
                            dismissAll(e) {
                                this._modalRefs.forEach(i => i.dismiss(e))
                            }
                            hasOpenModals() {
                                return this._modalRefs.length > 0
                            }
                            _attachBackdrop(e, i) {
                                let s = e.resolveComponentFactory(i4).create(this._injector);
                                return this._applicationRef.attachView(s.hostView), i.appendChild(s.location.nativeElement), s
                            }
                            _attachWindowComponent(e, i, r) {
                                let o = e.resolveComponentFactory(s4).create(this._injector, r.nodes);
                                return this._applicationRef.attachView(o.hostView), i.appendChild(o.location.nativeElement), o
                            }
                            _applyWindowOptions(e, i) {
                                this._windowAttributes.forEach(r => {
                                    Br(i[r]) && (e[r] = i[r])
                                })
                            }
                            _applyBackdropOptions(e, i) {
                                this._backdropAttributes.forEach(r => {
                                    Br(i[r]) && (e[r] = i[r])
                                })
                            }
                            _getContentRef(e, i, r, s, o) {
                                return r ? r instanceof bt ? this._createFromTemplateRef(r, s) : function Py(t) {
                                    return "string" == typeof t
                                }(r) ? this._createFromString(r) : this._createFromComponent(e, i, r, s, o) : new jr([])
                            }
                            _createFromTemplateRef(e, i) {
                                const s = e.createEmbeddedView({
                                    $implicit: i,
                                    close(o) {
                                        i.close(o)
                                    },
                                    dismiss(o) {
                                        i.dismiss(o)
                                    }
                                });
                                return this._applicationRef.attachView(s), new jr([s.rootNodes], s)
                            }
                            _createFromString(e) {
                                const i = this._document.createTextNode(`${e}`);
                                return new jr([
                                    [i]
                                ])
                            }
                            _createFromComponent(e, i, r, s, o) {
                                const a = e.resolveComponentFactory(r),
                                    l = Yt.create({
                                        providers: [{
                                            provide: ob,
                                            useValue: s
                                        }],
                                        parent: i
                                    }),
                                    c = a.create(l),
                                    u = c.location.nativeElement;
                                return o.scrollable && u.classList.add("component-host-scrollable"), this._applicationRef.attachView(c.hostView), new jr([
                                    [u]
                                ], c.hostView, c)
                            }
                            _setAriaHidden(e) {
                                const i = e.parentElement;
                                i && e !== this._document.body && (Array.from(i.children).forEach(r => {
                                    r !== e && "SCRIPT" !== r.nodeName && (this._ariaHiddenValues.set(r, r.getAttribute("aria-hidden")), r.setAttribute("aria-hidden", "true"))
                                }), this._setAriaHidden(i))
                            }
                            _revertAriaHidden() {
                                this._ariaHiddenValues.forEach((e, i) => {
                                    e ? i.setAttribute("aria-hidden", e) : i.removeAttribute("aria-hidden")
                                }), this._ariaHiddenValues.clear()
                            }
                            _registerModalRef(e) {
                                const i = () => {
                                    const r = this._modalRefs.indexOf(e);
                                    r > -1 && (this._modalRefs.splice(r, 1), this._activeInstances.emit(this._modalRefs))
                                };
                                this._modalRefs.push(e), this._activeInstances.emit(this._modalRefs), e.result.then(i, i)
                            }
                            _registerWindowCmpt(e) {
                                this._windowCmpts.push(e), this._activeWindowCmptHasChanged.next(), e.onDestroy(() => {
                                    const i = this._windowCmpts.indexOf(e);
                                    i > -1 && (this._windowCmpts.splice(i, 1), this._activeWindowCmptHasChanged.next())
                                })
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(js), Ce(Yt), Ce(nn), Ce(a4), Ce(Yd), Ce(Dt))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })(),
                    ab = (() => {
                        class t {
                            constructor(e) {
                                this._ngbConfig = e, this.backdrop = !0, this.keyboard = !0
                            }
                            get animation() {
                                return void 0 === this._animation ? this._ngbConfig.animation : this._animation
                            }
                            set animation(e) {
                                this._animation = e
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(ga))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })(),
                    lb = (() => {
                        class t {
                            constructor(e, i, r, s) {
                                this._moduleCFR = e, this._injector = i, this._modalStack = r, this._config = s
                            }
                            open(e, i = {}) {
                                const r = Object.assign(Object.assign(Object.assign({}, this._config), {
                                    animation: this._config.animation
                                }), i);
                                return this._modalStack.open(this._moduleCFR, this._injector, e, r)
                            }
                            get activeInstances() {
                                return this._modalStack.activeInstances
                            }
                            dismissAll(e) {
                                this._modalStack.dismissAll(e)
                            }
                            hasOpenModals() {
                                return this._modalStack.hasOpenModals()
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(Ps), Ce(Yt), Ce(l4), Ce(ab))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })(),
                    u4 = (() => {
                        class t {
                            constructor(e) {
                                this._ngbConfig = e, this.destroyOnHide = !0, this.orientation = "horizontal", this.roles = "tablist", this.keyboard = !1
                            }
                            get animation() {
                                return void 0 === this._animation ? this._ngbConfig.animation : this._animation
                            }
                            set animation(e) {
                                this._animation = e
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(ga))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })();
                const cb = t => Br(t) && "" !== t;
                let d4 = 0,
                    ub = (() => {
                        class t {
                            constructor(e) {
                                this.templateRef = e
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(bt))
                        }, t.\u0275dir = ye({
                            type: t,
                            selectors: [
                                ["ng-template", "ngbNavContent", ""]
                            ]
                        }), t
                    })(),
                    kc = (() => {
                        class t {
                            constructor(e, i) {
                                this.elementRef = i, this.disabled = !1, this.shown = new Ke, this.hidden = new Ke, this._nav = e
                            }
                            ngAfterContentChecked() {
                                this.contentTpl = this.contentTpls.first
                            }
                            ngOnInit() {
                                Br(this.domId) || (this.domId = "ngb-nav-" + d4++)
                            }
                            get active() {
                                return this._nav.activeId === this.id
                            }
                            get id() {
                                return cb(this._id) ? this._id : this.domId
                            }
                            get panelDomId() {
                                return `${this.domId}-panel`
                            }
                            isPanelInDom() {
                                return (Br(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(Xe(() => Nc)), F(gt))
                        }, t.\u0275dir = ye({
                            type: t,
                            selectors: [
                                ["", "ngbNavItem", ""]
                            ],
                            contentQueries: function(e, i, r) {
                                if (1 & e && Gt(r, ub, 4), 2 & e) {
                                    let s;
                                    St(s = Et()) && (i.contentTpls = s)
                                }
                            },
                            hostVars: 2,
                            hostBindings: function(e, i) {
                                2 & e && vt("nav-item", !0)
                            },
                            inputs: {
                                destroyOnHide: "destroyOnHide",
                                disabled: "disabled",
                                domId: "domId",
                                _id: ["ngbNavItem", "_id"]
                            },
                            outputs: {
                                shown: "shown",
                                hidden: "hidden"
                            },
                            exportAs: ["ngbNavItem"]
                        }), t
                    })(),
                    Nc = (() => {
                        class t {
                            constructor(e, i, r, s) {
                                this.role = e, this._cd = r, this._document = s, this.activeIdChange = new Ke, this.shown = new Ke, this.hidden = new Ke, this.destroy$ = new Te, this.navItemChange$ = new Te, this.navChange = new Ke, this.animation = i.animation, this.destroyOnHide = i.destroyOnHide, this.orientation = i.orientation, this.roles = i.roles, this.keyboard = i.keyboard
                            }
                            click(e) {
                                e.disabled || this._updateActiveId(e.id)
                            }
                            onKeyDown(e) {
                                if ("tablist" !== this.roles || !this.keyboard) return;
                                const i = e.which,
                                    r = this.links.filter(a => !a.navItem.disabled),
                                    {
                                        length: s
                                    } = r;
                                let o = -1;
                                if (r.forEach((a, l) => {
                                        a.elRef.nativeElement === this._document.activeElement && (o = l)
                                    }), s) {
                                    switch (i) {
                                        case Ut.ArrowLeft:
                                            if ("vertical" === this.orientation) return;
                                            o = (o - 1 + s) % s;
                                            break;
                                        case Ut.ArrowRight:
                                            if ("vertical" === this.orientation) return;
                                            o = (o + 1) % s;
                                            break;
                                        case Ut.ArrowDown:
                                            if ("horizontal" === this.orientation) return;
                                            o = (o + 1) % s;
                                            break;
                                        case Ut.ArrowUp:
                                            if ("horizontal" === this.orientation) return;
                                            o = (o - 1 + s) % s;
                                            break;
                                        case Ut.Home:
                                            o = 0;
                                            break;
                                        case Ut.End:
                                            o = s - 1
                                    }
                                    "changeWithArrows" === this.keyboard && this.select(r[o].navItem.id), r[o].elRef.nativeElement.focus(), e.preventDefault()
                                }
                            }
                            select(e) {
                                this._updateActiveId(e, !1)
                            }
                            ngAfterContentInit() {
                                if (!Br(this.activeId)) {
                                    const e = this.items.first ? this.items.first.id : null;
                                    cb(e) && (this._updateActiveId(e, !1), this._cd.detectChanges())
                                }
                                this.items.changes.pipe(qt(this.destroy$)).subscribe(() => this._notifyItemChanged(this.activeId))
                            }
                            ngOnChanges({
                                activeId: e
                            }) {
                                e && !e.firstChange && this._notifyItemChanged(e.currentValue)
                            }
                            ngOnDestroy() {
                                this.destroy$.next()
                            }
                            _updateActiveId(e, i = !0) {
                                if (this.activeId !== e) {
                                    let r = !1;
                                    i && this.navChange.emit({
                                        activeId: this.activeId,
                                        nextId: e,
                                        preventDefault: () => {
                                            r = !0
                                        }
                                    }), r || (this.activeId = e, this.activeIdChange.emit(e), this._notifyItemChanged(e))
                                }
                            }
                            _notifyItemChanged(e) {
                                this.navItemChange$.next(this._getItemById(e))
                            }
                            _getItemById(e) {
                                return this.items && this.items.find(i => i.id === e) || null
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(vo("role"), F(u4), F(Oi), F(nn))
                        }, t.\u0275dir = ye({
                            type: t,
                            selectors: [
                                ["", "ngbNav", ""]
                            ],
                            contentQueries: function(e, i, r) {
                                if (1 & e && (Gt(r, kc, 4), Gt(r, Pp, 5)), 2 & e) {
                                    let s;
                                    St(s = Et()) && (i.items = s), St(s = Et()) && (i.links = s)
                                }
                            },
                            hostVars: 6,
                            hostBindings: function(e, i) {
                                1 & e && ie("keydown.arrowLeft", function(s) {
                                    return i.onKeyDown(s)
                                })("keydown.arrowRight", function(s) {
                                    return i.onKeyDown(s)
                                })("keydown.arrowDown", function(s) {
                                    return i.onKeyDown(s)
                                })("keydown.arrowUp", function(s) {
                                    return i.onKeyDown(s)
                                })("keydown.Home", function(s) {
                                    return i.onKeyDown(s)
                                })("keydown.End", function(s) {
                                    return i.onKeyDown(s)
                                }), 2 & e && (at("aria-orientation", "vertical" === i.orientation && "tablist" === i.roles ? "vertical" : void 0)("role", i.role ? i.role : i.roles ? "tablist" : void 0), vt("nav", !0)("flex-column", "vertical" === i.orientation))
                            },
                            inputs: {
                                activeId: "activeId",
                                animation: "animation",
                                destroyOnHide: "destroyOnHide",
                                orientation: "orientation",
                                roles: "roles",
                                keyboard: "keyboard"
                            },
                            outputs: {
                                activeIdChange: "activeIdChange",
                                shown: "shown",
                                hidden: "hidden",
                                navChange: "navChange"
                            },
                            exportAs: ["ngbNav"],
                            features: [xn]
                        }), t
                    })(),
                    Pp = (() => {
                        class t {
                            constructor(e, i, r, s) {
                                this.role = e, this.navItem = i, this.nav = r, this.elRef = s
                            }
                            hasNavItemClass() {
                                return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(vo("role"), F(kc), F(Nc), F(gt))
                        }, t.\u0275dir = ye({
                            type: t,
                            selectors: [
                                ["a", "ngbNavLink", ""]
                            ],
                            hostAttrs: ["href", ""],
                            hostVars: 14,
                            hostBindings: function(e, i) {
                                1 & e && ie("click", function(s) {
                                    return i.nav.click(i.navItem), s.preventDefault()
                                }), 2 & e && (sr("id", i.navItem.domId), at("role", i.role ? i.role : i.nav.roles ? "tab" : void 0)("tabindex", i.navItem.disabled ? -1 : void 0)("aria-controls", i.navItem.isPanelInDom() ? i.navItem.panelDomId : null)("aria-selected", i.navItem.active)("aria-disabled", i.navItem.disabled), vt("nav-link", !0)("nav-item", i.hasNavItemClass())("active", i.navItem.active)("disabled", i.navItem.disabled))
                            }
                        }), t
                    })(),
                    db = (() => {
                        class t {}
                        return t.\u0275fac = function(e) {
                            return new(e || t)
                        }, t.\u0275mod = ht({
                            type: t
                        }), t.\u0275inj = ct({
                            imports: [
                                [Rn]
                            ]
                        }), t
                    })();
                class m4 {
                    constructor(n, e) {
                        this.open = n, this.close = e, e || (this.close = n)
                    }
                    isManual() {
                        return "manual" === this.open || "manual" === this.close
                    }
                }
                const _4 = {
                        hover: ["mouseenter", "mouseleave"],
                        focus: ["focusin", "focusout"]
                    },
                    yb = t => t > 0 ? fv(t) : n => n;
                let bb = (() => {
                        class t {
                            constructor(e) {
                                this._ngbConfig = e, this.autoClose = !0, this.placement = "auto", this.triggers = "click", this.disablePopover = !1, this.openDelay = 0, this.closeDelay = 0
                            }
                            get animation() {
                                return void 0 === this._animation ? this._ngbConfig.animation : this._animation
                            }
                            set animation(e) {
                                this._animation = e
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(ga))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })(),
                    x4 = 0;

                function w4(t) {
                    return t.modifiers.push(BI, {
                        name: "offset",
                        options: {
                            offset: () => [0, 12]
                        }
                    }), t
                }
                let C4 = (() => {
                        class t {
                            isTitleTemplate() {
                                return this.title instanceof bt
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)
                        }, t.\u0275cmp = Xn({
                            type: t,
                            selectors: [
                                ["ngb-popover-window"]
                            ],
                            hostAttrs: ["role", "tooltip"],
                            hostVars: 5,
                            hostBindings: function(e, i) {
                                2 & e && (sr("id", i.id), qn("popover" + (i.popoverClass ? " " + i.popoverClass : "")), vt("fade", i.animation))
                            },
                            inputs: {
                                animation: "animation",
                                title: "title",
                                id: "id",
                                popoverClass: "popoverClass",
                                context: "context"
                            },
                            ngContentSelectors: Ry,
                            decls: 4,
                            vars: 1,
                            consts: [
                                ["data-popper-arrow", "", 1, "popover-arrow"],
                                ["class", "popover-header", 4, "ngIf"],
                                [1, "popover-body"],
                                [1, "popover-header"],
                                ["simpleTitle", ""],
                                [3, "ngTemplateOutlet", "ngTemplateOutletContext"]
                            ],
                            template: function(e, i) {
                                1 & e && (Fd(), ee(0, "div", 0), O(1, $3, 4, 2, "h3", 1), d(2, "div", 2), Bd(3), f()), 2 & e && (g(1), D("ngIf", i.title))
                            },
                            directives: [lr, qs],
                            encapsulation: 2,
                            changeDetection: 0
                        }), t
                    })(),
                    Db = (() => {
                        class t {
                            constructor(e, i, r, s, o, a, l, c, u) {
                                this._elementRef = e, this._renderer = i, this._ngZone = a, this._document = l, this._changeDetector = c, this.shown = new Ke, this.hidden = new Ke, this._ngbPopoverWindowId = "ngb-popover-" + x4++, this._windowRef = null, this._positioning = function Qy() {
                                    let t = null;
                                    return {
                                        createPopper(n) {
                                            if (!t) {
                                                let i = (n.updatePopperOptions || Zy)(Ky(n));
                                                t = RI(n.hostElement, n.targetElement, i)
                                            }
                                        },
                                        update() {
                                            t && t.update()
                                        },
                                        setOptions(n) {
                                            if (t) {
                                                let i = (n.updatePopperOptions || Zy)(Ky(n));
                                                t.setOptions(i)
                                            }
                                        },
                                        destroy() {
                                            t && (t.destroy(), t = null)
                                        }
                                    }
                                }(), this.animation = o.animation, this.autoClose = o.autoClose, this.placement = o.placement, this.triggers = o.triggers, this.container = o.container, this.disablePopover = o.disablePopover, this.popoverClass = o.popoverClass, this.openDelay = o.openDelay, this.closeDelay = o.closeDelay, this._popupService = new n4(C4, r, s, i, this._ngZone, u), this._zoneSubscription = a.onStable.subscribe(() => {
                                    this._positioning.update()
                                })
                            }
                            _isDisabled() {
                                return !(!this.disablePopover && (this.ngbPopover || this.popoverTitle))
                            }
                            open(e) {
                                if (!this._windowRef && !this._isDisabled()) {
                                    const {
                                        windowRef: i,
                                        transition$: r
                                    } = this._popupService.open(this.ngbPopover, e, this.animation);
                                    this._windowRef = i, this._windowRef.instance.animation = this.animation, this._windowRef.instance.title = this.popoverTitle, this._windowRef.instance.context = e, this._windowRef.instance.popoverClass = this.popoverClass, this._windowRef.instance.id = this._ngbPopoverWindowId, this._renderer.setAttribute(this._elementRef.nativeElement, "aria-describedby", this._ngbPopoverWindowId), "body" === this.container && this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement), this._windowRef.changeDetectorRef.detectChanges(), this._windowRef.changeDetectorRef.markForCheck(), this._ngZone.onStable.pipe(on(1)).subscribe(() => {
                                            this._positioning.createPopper({
                                                hostElement: this._elementRef.nativeElement,
                                                targetElement: this._windowRef.location.nativeElement,
                                                placement: this.placement,
                                                appendToBody: "body" === this.container,
                                                baseClass: "bs-popover",
                                                updatePopperOptions: w4
                                            })
                                        }),
                                        function zy(t, n, e, i, r, s, o, a) {
                                            e && t.runOutsideAngular((t => kO ? () => setTimeout(() => t(), 100) : t)(() => {
                                                const c = mn(n, "keydown").pipe(qt(r), hi(h => h.which === Ut.Escape), Kf(h => h.preventDefault())),
                                                    u = mn(n, "mousedown").pipe(Ge(h => {
                                                        const m = h.target;
                                                        return 2 !== h.button && !wc(m, o) && ("inside" === e ? wc(m, s) && Uy(m, a) : "outside" === e ? !wc(m, s) : Uy(m, a) || !wc(m, s))
                                                    }), qt(r)),
                                                    p = mn(n, "mouseup").pipe(Zf(u), hi(([h, m]) => m), fv(0), qt(r));
                                                rv([c.pipe(Ge(h => 0)), p.pipe(Ge(h => 1))]).subscribe(h => t.run(() => i(h)))
                                            }))
                                        }(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]), r.subscribe(() => this.shown.emit())
                                }
                            }
                            close() {
                                this._windowRef && (this._renderer.removeAttribute(this._elementRef.nativeElement, "aria-describedby"), this._popupService.close(this.animation).subscribe(() => {
                                    this._windowRef = null, this._positioning.destroy(), this.hidden.emit(), this._changeDetector.markForCheck()
                                }))
                            }
                            toggle() {
                                this._windowRef ? this.close() : this.open()
                            }
                            isOpen() {
                                return null != this._windowRef
                            }
                            ngOnInit() {
                                this._unregisterListenersFn = function D4(t, n, e, i, r, s, o = 0, a = 0) {
                                    const l = function v4(t, n = _4) {
                                        const e = (t || "").trim();
                                        if (0 === e.length) return [];
                                        const i = e.split(/\s+/).map(s => s.split(":")).map(s => {
                                                let o = n[s[0]] || s;
                                                return new m4(o[0], o[1])
                                            }),
                                            r = i.filter(s => s.isManual());
                                        if (r.length > 1) throw "Triggers parse error: only one manual trigger is allowed";
                                        if (1 === r.length && i.length > 1) throw "Triggers parse error: manual trigger can't be mixed with other triggers";
                                        return i
                                    }(e);
                                    if (1 === l.length && l[0].isManual()) return () => {};
                                    const c = function y4(t, n, e, i) {
                                        return new le(r => {
                                            const s = [],
                                                o = () => r.next(!0),
                                                a = () => r.next(!1),
                                                l = () => r.next(!i());
                                            return e.forEach(c => {
                                                c.open === c.close ? s.push(t.listen(n, c.open, l)) : s.push(t.listen(n, c.open, o), t.listen(n, c.close, a))
                                            }), () => {
                                                s.forEach(c => c())
                                            }
                                        })
                                    }(t, n, l, i).pipe(function b4(t, n, e) {
                                        return i => {
                                            let r = null;
                                            const s = i.pipe(Ge(l => ({
                                                open: l
                                            })), hi(l => {
                                                const c = e();
                                                return c === l.open || r && r.open !== c ? (r && r.open !== l.open && (r = null), !1) : (r = l, !0)
                                            }), Kp());
                                            return Yp(s.pipe(hi(l => l.open), yb(t)), s.pipe(hi(l => !l.open), yb(n))).pipe(hi(l => l === r && (r = null, l.open !== e())), Ge(l => l.open))
                                        }
                                    }(o, a, i)).subscribe(u => u ? r() : s());
                                    return () => c.unsubscribe()
                                }(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay)
                            }
                            ngOnChanges({
                                ngbPopover: e,
                                popoverTitle: i,
                                disablePopover: r,
                                popoverClass: s
                            }) {
                                s && this.isOpen() && (this._windowRef.instance.popoverClass = s.currentValue), (e || i || r) && this._isDisabled() && this.close()
                            }
                            ngOnDestroy() {
                                this.close(), this._unregisterListenersFn && this._unregisterListenersFn(), this._zoneSubscription.unsubscribe()
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(gt), F(Ii), F(Yt), F(ui), F(bb), F(Dt), F(nn), F(Oi), F(js))
                        }, t.\u0275dir = ye({
                            type: t,
                            selectors: [
                                ["", "ngbPopover", ""]
                            ],
                            inputs: {
                                animation: "animation",
                                autoClose: "autoClose",
                                ngbPopover: "ngbPopover",
                                popoverTitle: "popoverTitle",
                                placement: "placement",
                                triggers: "triggers",
                                container: "container",
                                disablePopover: "disablePopover",
                                popoverClass: "popoverClass",
                                openDelay: "openDelay",
                                closeDelay: "closeDelay"
                            },
                            outputs: {
                                shown: "shown",
                                hidden: "hidden"
                            },
                            exportAs: ["ngbPopover"],
                            features: [xn]
                        }), t
                    })(),
                    xb = (() => {
                        class t {}
                        return t.\u0275fac = function(e) {
                            return new(e || t)
                        }, t.\u0275mod = ht({
                            type: t
                        }), t.\u0275inj = ct({
                            imports: [
                                [Rn]
                            ]
                        }), t
                    })();
                new Ze("live announcer delay", {
                    providedIn: "root",
                    factory: function I4() {
                        return 100
                    }
                });
                const wb = {
                    production: !0
                };
                var O4 = L(327);
                class he {
                    static get(n, e) {
                        return void 0 === e && (e = n, n = 0), Math.floor(Math.random() * (1 + e - n)) + n
                    }
                    static roll(n) {
                        return Math.random() < n
                    }
                    static fromArray(n, e = []) {
                        return (n = n.filter(i => !e.includes(i)))[he.get(0, n.length - 1)]
                    }
                    static fromArrayWithWeights(n) {
                        let e = [];
                        return n.forEach(i => {
                            for (let r = 0; r < i.weight; r++) e.push(i.el)
                        }), e[he.get(0, e.length - 1)]
                    }
                }
                let ba = (() => {
                    class t {
                        constructor(e) {
                            this.decimalPipe = e
                        }
                        transform(e, i = "") {
                            return e > 0 && e < 1 ? "1" : e > 1e6 ? e.toPrecision(3) : this.decimalPipe.transform(e, "1.0-0")
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(F(Jl, 16))
                    }, t.\u0275pipe = ln({
                        name: "float",
                        type: t,
                        pure: !0
                    }), t
                })();
                const P4 = [{
                        id: "cap",
                        name: "Cap",
                        lvl: 1,
                        type: 0,
                        def: [3, 5]
                    }, {
                        id: "skullcap",
                        name: "Skull Cap",
                        lvl: 5,
                        type: 0,
                        def: [8, 11],
                        req_str: 15
                    }, {
                        id: "helm",
                        name: "Helm",
                        lvl: 11,
                        type: 0,
                        def: [15, 18],
                        req_str: 26
                    }, {
                        id: "fullhelm",
                        name: "Full Helm",
                        lvl: 15,
                        type: 0,
                        def: [23, 26],
                        req_str: 41
                    }, {
                        id: "mask",
                        name: "Mask",
                        lvl: 19,
                        type: 0,
                        def: [9, 27],
                        req_str: 23
                    }, {
                        id: "bonehelm",
                        name: "Bone Helm",
                        lvl: 22,
                        type: 0,
                        def: [33, 36],
                        req_str: 25
                    }, {
                        id: "greathelm",
                        name: "Great Helm",
                        lvl: 23,
                        type: 0,
                        def: [30, 35],
                        req_str: 63
                    }, {
                        id: "crown",
                        name: "Crown",
                        lvl: 29,
                        type: 0,
                        def: [25, 45],
                        req_str: 55
                    }, {
                        id: "warhat",
                        name: "War Hat",
                        lvl: 39,
                        type: 0,
                        def: [45, 53],
                        req_str: 20
                    }, {
                        id: "sallet",
                        name: "Sallet",
                        lvl: 42,
                        type: 0,
                        def: [52, 62],
                        req_str: 43
                    }, {
                        id: "casque",
                        name: "Casque",
                        lvl: 47,
                        type: 0,
                        def: [63, 72],
                        req_str: 59
                    }, {
                        id: "basinet",
                        name: "Basinet",
                        lvl: 50,
                        type: 0,
                        def: [75, 84],
                        req_str: 82
                    }, {
                        id: "deathmask",
                        name: "Death Mask",
                        lvl: 53,
                        type: 0,
                        def: [54, 86],
                        req_str: 25
                    }, {
                        id: "grimhelm",
                        name: "Grim Helm",
                        lvl: 55,
                        type: 0,
                        def: [60, 125],
                        req_str: 58
                    }, {
                        id: "wingedhelm",
                        name: "Winged Helm",
                        lvl: 56,
                        type: 0,
                        def: [85, 98],
                        req_str: 115
                    }, {
                        id: "grandcrown",
                        name: "Grand Crown",
                        lvl: 60,
                        type: 0,
                        def: [78, 113],
                        req_str: 103
                    }, {
                        id: "wolfhead",
                        name: "Wolf Head",
                        lvl: 4,
                        type: 0,
                        def: [8, 11],
                        req_str: 16,
                        class: 3
                    }, {
                        id: "hawkhelm",
                        name: "Hawk Helm",
                        lvl: 8,
                        type: 0,
                        def: [4, 15],
                        req_str: 20,
                        class: 3
                    }, {
                        id: "antlers",
                        name: "Antlers",
                        lvl: 16,
                        type: 0,
                        def: [18, 24],
                        req_str: 24,
                        class: 3
                    }, {
                        id: "falconmask",
                        name: "Falcon Mask",
                        lvl: 20,
                        type: 0,
                        def: [12, 28],
                        req_str: 28,
                        class: 3
                    }, {
                        id: "spiritmask",
                        name: "Spirit Mask",
                        lvl: 24,
                        type: 0,
                        def: [22, 35],
                        req_str: 30,
                        class: 3
                    }, {
                        id: "alphahelm",
                        name: "Alpha Helm",
                        lvl: 40,
                        type: 0,
                        def: [52, 62],
                        req_str: 44,
                        class: 3
                    }, {
                        id: "griffonheaddress",
                        name: "Griffon Headdress",
                        lvl: 45,
                        type: 0,
                        def: [46, 68],
                        req_str: 50,
                        class: 3
                    }, {
                        id: "huntersguise",
                        name: "Hunter's Guise",
                        lvl: 51,
                        type: 0,
                        def: [67, 81],
                        req_str: 56,
                        class: 3
                    }, {
                        id: "sacredfeathers",
                        name: "Sacred Feathers",
                        lvl: 55,
                        type: 0,
                        def: [58, 87],
                        req_str: 62,
                        class: 3
                    }, {
                        id: "totemicmask",
                        name: "Totemic Mask",
                        lvl: 60,
                        type: 0,
                        def: [73, 98],
                        req_str: 65,
                        class: 3
                    }, {
                        id: "amulet",
                        name: "Amulet",
                        lvl: 2,
                        anylvlover: !0,
                        type: 1
                    }, {
                        id: "robe",
                        name: "Robe",
                        lvl: 1,
                        type: 2,
                        def: [5, 10],
                        class: 0
                    }, {
                        id: "quilted",
                        name: "Quilted Armor",
                        lvl: 2,
                        type: 2,
                        def: [8, 11],
                        req_str: 10
                    }, {
                        id: "leather",
                        name: "Leather Armor",
                        lvl: 3,
                        type: 2,
                        def: [14, 17],
                        req_str: 15
                    }, {
                        id: "hardleather",
                        name: "Hard Leather Armor",
                        lvl: 5,
                        type: 2,
                        def: [21, 24],
                        req_str: 20
                    }, {
                        id: "studdedleather",
                        name: "Studded Leather",
                        lvl: 8,
                        type: 2,
                        def: [32, 35],
                        req_str: 27
                    }, {
                        id: "ringmail",
                        name: "Ring Mail",
                        lvl: 11,
                        type: 2,
                        def: [45, 48],
                        req_str: 36
                    }, {
                        id: "scalemail",
                        name: "Scale Mail",
                        lvl: 13,
                        type: 2,
                        def: [57, 60],
                        req_str: 44
                    }, {
                        id: "chainmail",
                        name: "Chain Mail",
                        lvl: 15,
                        type: 2,
                        def: [72, 75],
                        req_str: 48
                    }, {
                        id: "breastplate",
                        name: "Breast Plate",
                        lvl: 18,
                        type: 2,
                        def: [65, 68],
                        req_str: 30
                    }, {
                        id: "splintmail",
                        name: "Splint Mail",
                        lvl: 20,
                        type: 2,
                        def: [90, 95],
                        req_str: 51
                    }, {
                        id: "platemail",
                        name: "Plate Mail",
                        lvl: 24,
                        type: 2,
                        def: [108, 116],
                        req_str: 65
                    }, {
                        id: "gothicplate",
                        name: "Gothic Plate",
                        lvl: 32,
                        type: 2,
                        def: [128, 135],
                        req_str: 70
                    }, {
                        id: "fullplate",
                        name: "Full Plate",
                        lvl: 37,
                        type: 2,
                        def: [105, 161],
                        req_str: 80
                    }, {
                        id: "ancientarmor",
                        name: "Ancient Armor",
                        lvl: 40,
                        type: 2,
                        def: [218, 233],
                        req_str: 100
                    }, {
                        id: "ghostarmor",
                        name: "Ghost Armor",
                        lvl: 39,
                        type: 2,
                        def: [102, 117],
                        req_str: 38
                    }, {
                        id: "serpentskinarmor",
                        name: "Serpentskin Armor",
                        lvl: 41,
                        type: 2,
                        def: [111, 126],
                        req_str: 43
                    }, {
                        id: "demonhidearmor",
                        name: "Demonhide Armor",
                        lvl: 42,
                        type: 2,
                        def: [122, 136],
                        req_str: 50
                    }, {
                        id: "trellisedarmor",
                        name: "Trellised Armor",
                        lvl: 45,
                        type: 2,
                        def: [138, 153],
                        req_str: 61
                    }, {
                        id: "linkedmail",
                        name: "Linked Mail",
                        lvl: 47,
                        type: 2,
                        def: [158, 172],
                        req_str: 74
                    }, {
                        id: "tigulatedmail",
                        name: "Tigulated Mail",
                        lvl: 48,
                        type: 2,
                        def: [176, 190],
                        req_str: 86
                    }, {
                        id: "cuirass",
                        name: "Cuirass",
                        lvl: 52,
                        type: 2,
                        def: [188, 202],
                        req_str: 65
                    }, {
                        id: "mesharmor",
                        name: "Mesh Armor",
                        lvl: 50,
                        type: 2,
                        def: [198, 213],
                        req_str: 92
                    }, {
                        id: "russetarmor",
                        name: "Russet Armor",
                        lvl: 54,
                        type: 2,
                        def: [225, 243],
                        req_str: 97
                    }, {
                        id: "mageplate",
                        name: "Mage Plate",
                        lvl: 65,
                        type: 2,
                        def: [225, 261],
                        req_str: 55
                    }, {
                        id: "sharktootharmor",
                        name: "Sharktooth Armor",
                        lvl: 60,
                        type: 2,
                        def: [242, 258],
                        req_str: 103
                    }, {
                        id: "templarcoat",
                        name: "Templar Coat",
                        lvl: 57,
                        type: 2,
                        def: [252, 274],
                        req_str: 118
                    }, {
                        id: "embossedplate",
                        name: "Embossed Plate",
                        lvl: 63,
                        type: 2,
                        def: [282, 303],
                        req_str: 125
                    }, {
                        id: "chaosarmor",
                        name: "Chaos Armor",
                        lvl: 66,
                        type: 2,
                        def: [315, 342],
                        req_str: 140
                    }, {
                        id: "ornateplate",
                        name: "Ornate Plate",
                        lvl: 69,
                        type: 2,
                        def: [417, 450],
                        req_str: 170
                    }, {
                        id: "dagger",
                        name: "Dagger",
                        lvl: 1,
                        type: 3,
                        minDmg: 1,
                        maxDmg: 4,
                        spd: -20,
                        wtype: "d"
                    }, {
                        id: "poignard",
                        name: "Poignard",
                        lvl: 36,
                        type: 3,
                        minDmg: 9,
                        maxDmg: 18,
                        spd: -20,
                        wtype: "d"
                    }, {
                        id: "club",
                        name: "Club",
                        lvl: 1,
                        type: 3,
                        minDmg: 1,
                        maxDmg: 6,
                        spd: -10,
                        wtype: "m"
                    }, {
                        id: "spikedclub",
                        name: "Spiked Club",
                        lvl: 4,
                        type: 3,
                        minDmg: 5,
                        maxDmg: 8,
                        spd: 0,
                        wtype: "m"
                    }, {
                        id: "mace",
                        name: "Mace",
                        lvl: 8,
                        type: 3,
                        minDmg: 3,
                        maxDmg: 10,
                        spd: 0,
                        wtype: "m",
                        req_str: 27
                    }, {
                        id: "morningstar",
                        name: "Morning Star",
                        lvl: 13,
                        type: 3,
                        minDmg: 7,
                        maxDmg: 16,
                        spd: 10,
                        wtype: "m",
                        req_str: 36
                    }, {
                        id: "flail",
                        name: "Flail",
                        lvl: 19,
                        type: 3,
                        minDmg: 1,
                        maxDmg: 24,
                        spd: -10,
                        wtype: "m",
                        req_str: 41,
                        req_dex: 35
                    }, {
                        id: "warhammer",
                        name: "War Hammer",
                        lvl: 25,
                        type: 3,
                        minDmg: 19,
                        maxDmg: 29,
                        spd: 20,
                        wtype: "m",
                        req_str: 53
                    }, {
                        id: "cudgel",
                        name: "Cudgel",
                        lvl: 35,
                        type: 3,
                        minDmg: 6,
                        maxDmg: 21,
                        spd: -10,
                        wtype: "m",
                        req_str: 25
                    }, {
                        id: "barbedclub",
                        name: "Barbed Club",
                        lvl: 37,
                        type: 3,
                        minDmg: 13,
                        maxDmg: 25,
                        spd: 0,
                        wtype: "m",
                        req_str: 30
                    }, {
                        id: "flangedmace",
                        name: "Flanged Mace",
                        lvl: 40,
                        type: 3,
                        minDmg: 15,
                        maxDmg: 23,
                        spd: 0,
                        wtype: "m",
                        req_str: 61
                    }, {
                        id: "jaggedstar",
                        name: "Jagged Star",
                        lvl: 44,
                        type: 3,
                        minDmg: 20,
                        maxDmg: 31,
                        spd: 10,
                        wtype: "m",
                        req_str: 74
                    }, {
                        id: "knout",
                        name: "Knout",
                        lvl: 48,
                        type: 3,
                        minDmg: 13,
                        maxDmg: 35,
                        spd: -10,
                        wtype: "m",
                        req_str: 82,
                        req_dex: 73
                    }, {
                        id: "shortsword",
                        name: "Short Sword",
                        lvl: 1,
                        type: 3,
                        minDmg: 2,
                        maxDmg: 7,
                        spd: 0,
                        wtype: "s"
                    }, {
                        id: "scimitar",
                        name: "Scimitar",
                        lvl: 5,
                        type: 3,
                        minDmg: 2,
                        maxDmg: 6,
                        spd: -20,
                        wtype: "s",
                        req_dex: 21
                    }, {
                        id: "sabre",
                        name: "Sabre",
                        lvl: 8,
                        type: 3,
                        minDmg: 3,
                        maxDmg: 8,
                        spd: -10,
                        wtype: "s",
                        req_str: 25,
                        req_dex: 25
                    }, {
                        id: "falchion",
                        name: "Falchion",
                        lvl: 8,
                        type: 3,
                        minDmg: 9,
                        maxDmg: 17,
                        spd: 20,
                        wtype: "s",
                        req_str: 33
                    }, {
                        id: "crystalsword",
                        name: "Crystal Sword",
                        lvl: 11,
                        type: 3,
                        minDmg: 5,
                        maxDmg: 15,
                        spd: 0,
                        wtype: "s",
                        req_str: 43
                    }, {
                        id: "broadsword",
                        name: "Broad Sword",
                        lvl: 15,
                        type: 3,
                        minDmg: 7,
                        maxDmg: 14,
                        spd: 0,
                        wtype: "s",
                        req_str: 48
                    }, {
                        id: "longsword",
                        name: "Long Sword",
                        lvl: 20,
                        type: 3,
                        minDmg: 3,
                        maxDmg: 19,
                        spd: -10,
                        wtype: "s",
                        req_str: 55,
                        req_dex: 39
                    }, {
                        id: "warsword",
                        name: "War Sword",
                        lvl: 27,
                        type: 3,
                        minDmg: 8,
                        maxDmg: 20,
                        spd: 0,
                        wtype: "s",
                        req_str: 71,
                        req_dex: 45
                    }, {
                        id: "gladius",
                        name: "Gladius",
                        lvl: 35,
                        type: 3,
                        minDmg: 8,
                        maxDmg: 22,
                        spd: 0,
                        wtype: "s"
                    }, {
                        id: "cutlass",
                        name: "Cutlass",
                        lvl: 48,
                        type: 3,
                        minDmg: 8,
                        maxDmg: 21,
                        spd: -30,
                        wtype: "s",
                        req_str: 25,
                        req_dex: 52
                    }, {
                        id: "shamshir",
                        name: "Shamshir",
                        lvl: 40,
                        type: 3,
                        minDmg: 10,
                        maxDmg: 24,
                        spd: -10,
                        wtype: "s",
                        req_str: 58,
                        req_dex: 58
                    }, {
                        id: "tulwar",
                        name: "Tulwar",
                        lvl: 42,
                        type: 3,
                        minDmg: 16,
                        maxDmg: 35,
                        spd: 20,
                        wtype: "s",
                        req_str: 70
                    }, {
                        id: "dimensionalblade",
                        name: "Dimensional Blade",
                        lvl: 42,
                        type: 3,
                        minDmg: 13,
                        maxDmg: 35,
                        spd: 0,
                        wtype: "s",
                        req_str: 85,
                        req_dex: 60
                    }, {
                        id: "battlesword",
                        name: "Battle Sword",
                        lvl: 45,
                        type: 3,
                        minDmg: 16,
                        maxDmg: 34,
                        spd: 0,
                        wtype: "s",
                        req_str: 93
                    }, {
                        id: "runesword",
                        name: "Rune Sword",
                        lvl: 49,
                        type: 3,
                        minDmg: 10,
                        maxDmg: 42,
                        spd: -10,
                        wtype: "s",
                        req_str: 103,
                        req_dex: 79
                    }, {
                        id: "ancientsword",
                        name: "Ancient Sword",
                        lvl: 54,
                        type: 3,
                        minDmg: 18,
                        maxDmg: 43,
                        spd: 0,
                        wtype: "s",
                        req_str: 127,
                        req_dex: 88
                    }, {
                        id: "twohandedsword",
                        name: "Two-Handed Sword",
                        lvl: 10,
                        type: 3,
                        minDmg: 8,
                        maxDmg: 17,
                        spd: 0,
                        wtype: "s",
                        req_str: 35,
                        req_dex: 27,
                        w2handed: !0
                    }, {
                        id: "claymore",
                        name: "Claymore",
                        lvl: 17,
                        type: 3,
                        minDmg: 13,
                        maxDmg: 30,
                        spd: 10,
                        wtype: "s",
                        req_str: 47,
                        w2handed: !0
                    }, {
                        id: "giantsword",
                        name: "Giant Sword",
                        lvl: 21,
                        type: 3,
                        minDmg: 9,
                        maxDmg: 28,
                        spd: 0,
                        wtype: "s",
                        req_str: 56,
                        req_dex: 34,
                        w2handed: !0
                    }, {
                        id: "bastardsword",
                        name: "Bastard Sword",
                        lvl: 24,
                        type: 3,
                        minDmg: 20,
                        maxDmg: 28,
                        spd: 10,
                        wtype: "s",
                        req_str: 62,
                        w2handed: !0
                    }, {
                        id: "flamberge",
                        name: "Flamberge",
                        lvl: 27,
                        type: 3,
                        minDmg: 13,
                        maxDmg: 26,
                        spd: -10,
                        wtype: "s",
                        req_str: 70,
                        req_dex: 49,
                        w2handed: !0
                    }, {
                        id: "greatsword",
                        name: "Great Sword",
                        lvl: 33,
                        type: 3,
                        minDmg: 25,
                        maxDmg: 42,
                        spd: 10,
                        wtype: "s",
                        req_str: 100,
                        req_dex: 60,
                        w2handed: !0
                    }, {
                        id: "espandon",
                        name: "Espandon",
                        lvl: 42,
                        type: 3,
                        minDmg: 18,
                        maxDmg: 40,
                        spd: 0,
                        wtype: "s",
                        req_str: 73,
                        req_dex: 61,
                        w2handed: !0
                    }, {
                        id: "dalcianfalx",
                        name: "Dalcian Falx",
                        lvl: 47,
                        type: 3,
                        minDmg: 26,
                        maxDmg: 61,
                        spd: 10,
                        wtype: "s",
                        req_str: 91,
                        req_dex: 20,
                        w2handed: !0
                    }, {
                        id: "tusksword",
                        name: "Tusk Sword",
                        lvl: 50,
                        type: 3,
                        minDmg: 19,
                        maxDmg: 58,
                        spd: 0,
                        wtype: "s",
                        req_str: 104,
                        req_dex: 71,
                        w2handed: !0
                    }, {
                        id: "gothicsword",
                        name: "Gothic Sword",
                        lvl: 53,
                        type: 3,
                        minDmg: 39,
                        maxDmg: 60,
                        spd: 10,
                        wtype: "s",
                        req_str: 113,
                        req_dex: 20,
                        w2handed: !0
                    }, {
                        id: "zweihander",
                        name: "Zweihander",
                        lvl: 54,
                        type: 3,
                        minDmg: 29,
                        maxDmg: 54,
                        spd: -10,
                        wtype: "s",
                        req_str: 113,
                        req_dex: 20,
                        w2handed: !0
                    }, {
                        id: "executionersword",
                        name: "Executioner Sword",
                        lvl: 59,
                        type: 3,
                        minDmg: 47,
                        maxDmg: 80,
                        spd: 10,
                        wtype: "s",
                        req_str: 170,
                        req_dex: 110,
                        w2handed: !0
                    }, {
                        id: "handaxe",
                        name: "Hand Axe",
                        lvl: 1,
                        type: 3,
                        minDmg: 3,
                        maxDmg: 6,
                        spd: 0,
                        wtype: "a"
                    }, {
                        id: "axe",
                        name: "Axe",
                        lvl: 7,
                        type: 3,
                        minDmg: 4,
                        maxDmg: 11,
                        spd: 10,
                        wtype: "a",
                        req_str: 32
                    }, {
                        id: "doubleaxe",
                        name: "Double Axe",
                        lvl: 13,
                        type: 3,
                        minDmg: 5,
                        maxDmg: 13,
                        spd: 10,
                        wtype: "a",
                        req_str: 43
                    }, {
                        id: "militarypick",
                        name: "Military Pick",
                        lvl: 19,
                        type: 3,
                        minDmg: 7,
                        maxDmg: 11,
                        spd: -10,
                        wtype: "a",
                        req_str: 49,
                        req_dex: 33
                    }, {
                        id: "waraxe",
                        name: "War Axe",
                        lvl: 25,
                        type: 3,
                        minDmg: 10,
                        maxDmg: 18,
                        spd: 0,
                        wtype: "a",
                        req_str: 67
                    }, {
                        id: "hatchet",
                        name: "Hatchet",
                        lvl: 36,
                        type: 3,
                        minDmg: 10,
                        maxDmg: 21,
                        spd: 0,
                        wtype: "a",
                        req_str: 25,
                        req_dex: 25
                    }, {
                        id: "cleaver",
                        name: "Cleaver",
                        lvl: 39,
                        type: 3,
                        minDmg: 10,
                        maxDmg: 33,
                        spd: 10,
                        wtype: "a",
                        req_str: 68
                    }, {
                        id: "twinaxe",
                        name: "Twin Axe",
                        lvl: 44,
                        type: 3,
                        minDmg: 13,
                        maxDmg: 38,
                        spd: 10,
                        wtype: "a",
                        req_str: 85
                    }, {
                        id: "crowbill",
                        name: "Crowbill",
                        lvl: 48,
                        type: 3,
                        minDmg: 14,
                        maxDmg: 34,
                        spd: -10,
                        wtype: "a",
                        req_str: 94,
                        req_dex: 70
                    }, {
                        id: "naga",
                        name: "Naga",
                        lvl: 53,
                        type: 3,
                        minDmg: 16,
                        maxDmg: 45,
                        spd: 0,
                        wtype: "a",
                        req_str: 121
                    }, {
                        id: "largeaxe",
                        name: "Large Axe",
                        lvl: 6,
                        type: 3,
                        minDmg: 6,
                        maxDmg: 13,
                        spd: -10,
                        wtype: "a",
                        req_str: 35,
                        w2handed: !0
                    }, {
                        id: "broadaxe",
                        name: "Broad Axe",
                        lvl: 12,
                        type: 3,
                        minDmg: 10,
                        maxDmg: 18,
                        spd: 0,
                        wtype: "a",
                        req_str: 48,
                        w2handed: !0
                    }, {
                        id: "battleaxe",
                        name: "Battle Axe",
                        lvl: 17,
                        type: 3,
                        minDmg: 12,
                        maxDmg: 32,
                        spd: 10,
                        wtype: "a",
                        req_str: 54,
                        w2handed: !0
                    }, {
                        id: "greataxe",
                        name: "Great Axe",
                        lvl: 23,
                        type: 3,
                        minDmg: 9,
                        maxDmg: 30,
                        spd: -10,
                        wtype: "a",
                        req_str: 63,
                        req_dex: 39,
                        w2handed: !0
                    }, {
                        id: "militaryaxe",
                        name: "Military Axe",
                        lvl: 39,
                        type: 3,
                        minDmg: 14,
                        maxDmg: 34,
                        spd: -10,
                        wtype: "a",
                        req_str: 73,
                        w2handed: !0
                    }, {
                        id: "beardedaxe",
                        name: "Bearded Axe",
                        lvl: 43,
                        type: 3,
                        minDmg: 21,
                        maxDmg: 42,
                        spd: 0,
                        wtype: "a",
                        req_str: 92,
                        w2handed: !0
                    }, {
                        id: "tabar",
                        name: "Tabar",
                        lvl: 47,
                        type: 3,
                        minDmg: 24,
                        maxDmg: 58,
                        spd: 10,
                        wtype: "a",
                        req_str: 101,
                        w2handed: !0
                    }, {
                        id: "gothicaxe",
                        name: "Gothic Axe",
                        lvl: 51,
                        type: 3,
                        minDmg: 18,
                        maxDmg: 54,
                        spd: -10,
                        wtype: "a",
                        req_str: 115,
                        req_dex: 79,
                        w2handed: !0
                    }, {
                        id: "ancientaxe",
                        name: "Ancient Axe",
                        lvl: 56,
                        type: 3,
                        minDmg: 46,
                        maxDmg: 74,
                        spd: 10,
                        wtype: "a",
                        req_str: 125,
                        w2handed: !0
                    }, {
                        id: "giantaxe",
                        name: "Giant Axe",
                        lvl: 32,
                        type: 3,
                        minDmg: 22,
                        maxDmg: 45,
                        spd: 10,
                        wtype: "a",
                        req_str: 70,
                        w2handed: !0
                    }, {
                        id: "shortstaff",
                        name: "Short Staff",
                        lvl: 1,
                        type: 3,
                        minDmg: 1,
                        maxDmg: 5,
                        spd: -10,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "longstaff",
                        name: "Long Staff",
                        lvl: 8,
                        type: 3,
                        minDmg: 2,
                        maxDmg: 8,
                        spd: 0,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "gnarledstaff",
                        name: "Gnarled Staff",
                        lvl: 12,
                        type: 3,
                        minDmg: 4,
                        maxDmg: 12,
                        spd: 10,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "battlestaff",
                        name: "Battle Staff",
                        lvl: 17,
                        type: 3,
                        minDmg: 6,
                        maxDmg: 13,
                        spd: 0,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "warstaff",
                        name: "War Staff",
                        lvl: 24,
                        type: 3,
                        minDmg: 12,
                        maxDmg: 28,
                        spd: 20,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "jostaff",
                        name: "Jo Staff",
                        lvl: 35,
                        type: 3,
                        minDmg: 6,
                        maxDmg: 21,
                        spd: -10,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "quarterstaff",
                        name: "Quarter Staff",
                        lvl: 40,
                        type: 3,
                        minDmg: 8,
                        maxDmg: 26,
                        spd: 0,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "cedarstaff",
                        name: "Cedar Staff",
                        lvl: 43,
                        type: 3,
                        minDmg: 11,
                        maxDmg: 32,
                        spd: 10,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "gothicstaff",
                        name: "Gothic Staff",
                        lvl: 47,
                        type: 3,
                        minDmg: 14,
                        maxDmg: 34,
                        spd: 0,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "runestaff",
                        name: "Rune Staff",
                        lvl: 52,
                        type: 3,
                        minDmg: 24,
                        maxDmg: 58,
                        spd: 20,
                        wtype: "st",
                        w2handed: !0
                    }, {
                        id: "buckler",
                        name: "Buckler",
                        lvl: 1,
                        type: 4,
                        def: [4, 6],
                        block: 0,
                        req_str: 10
                    }, {
                        id: "smallshield",
                        name: "Small Shield",
                        lvl: 5,
                        type: 4,
                        def: [8, 10],
                        block: 5,
                        req_str: 22
                    }, {
                        id: "largeshield",
                        name: "Large Shield",
                        lvl: 11,
                        type: 4,
                        def: [12, 14],
                        block: 12,
                        req_str: 34
                    }, {
                        id: "kiteshield",
                        name: "Kite Shield",
                        lvl: 15,
                        type: 4,
                        def: [16, 18],
                        block: 8,
                        req_str: 47
                    }, {
                        id: "spikedshield",
                        name: "Spiked Shield",
                        lvl: 11,
                        type: 4,
                        def: [15, 25],
                        block: 10,
                        req_str: 30
                    }, {
                        id: "boneshield",
                        name: "Bone Shield",
                        lvl: 19,
                        type: 4,
                        def: [10, 30],
                        block: 20,
                        req_str: 25
                    }, {
                        id: "towershield",
                        name: "Tower Shield",
                        lvl: 22,
                        type: 4,
                        def: [22, 24],
                        block: 24,
                        req_str: 75
                    }, {
                        id: "gothicshield",
                        name: "Gothic Shield",
                        lvl: 30,
                        type: 4,
                        def: [30, 35],
                        block: 16,
                        req_str: 60
                    }, {
                        id: "defender",
                        name: "Defender",
                        lvl: 39,
                        type: 4,
                        def: [41, 49],
                        block: 10,
                        req_str: 38
                    }, {
                        id: "roundshield",
                        name: "Round Shield",
                        lvl: 42,
                        type: 4,
                        def: [47, 55],
                        block: 12,
                        req_str: 53
                    }, {
                        id: "scutum",
                        name: "Scutum",
                        lvl: 47,
                        type: 4,
                        def: [53, 61],
                        block: 14,
                        req_str: 71
                    }, {
                        id: "dragonshield",
                        name: "Dragon Shield",
                        lvl: 50,
                        type: 4,
                        def: [59, 67],
                        block: 18,
                        req_str: 91
                    }, {
                        id: "barbedshield",
                        name: "Barbed Shield",
                        lvl: 47,
                        type: 4,
                        def: [68, 78],
                        block: 17,
                        req_str: 65
                    }, {
                        id: "grimshield",
                        name: "Grim Shield",
                        lvl: 53,
                        type: 4,
                        def: [50, 150],
                        block: 20,
                        req_str: 58
                    }, {
                        id: "pavise",
                        name: "Pavise",
                        lvl: 55,
                        type: 4,
                        def: [68, 78],
                        block: 24,
                        req_str: 133
                    }, {
                        id: "ancientshield",
                        name: "Ancient Shield",
                        lvl: 61,
                        type: 4,
                        def: [80, 93],
                        block: 16,
                        req_str: 110
                    }, {
                        id: "leathergloves",
                        name: "Leather Gloves",
                        lvl: 3,
                        type: 5,
                        def: [2, 3]
                    }, {
                        id: "heavygloves",
                        name: "Heavy Gloves",
                        lvl: 7,
                        type: 5,
                        def: [5, 6]
                    }, {
                        id: "chaingloves",
                        name: "Chain Gloves",
                        lvl: 12,
                        type: 5,
                        def: [8, 9],
                        req_str: 25
                    }, {
                        id: "lightgauntlets",
                        name: "Light Gauntlets",
                        lvl: 20,
                        type: 5,
                        def: [9, 11],
                        req_str: 45
                    }, {
                        id: "gauntlets",
                        name: "Gauntlets",
                        lvl: 27,
                        type: 5,
                        def: [12, 15],
                        req_str: 60
                    }, {
                        id: "demonhidegloves",
                        name: "Demonhide Gloves",
                        lvl: 38,
                        type: 5,
                        def: [28, 35],
                        req_str: 20
                    }, {
                        id: "sharkskingloves",
                        name: "Sharkskin Gloves",
                        lvl: 44,
                        type: 5,
                        def: [33, 39],
                        req_str: 20
                    }, {
                        id: "heavybracers",
                        name: "Heavy Bracers",
                        lvl: 48,
                        type: 5,
                        def: [37, 44],
                        req_str: 58
                    }, {
                        id: "battlegauntlets",
                        name: "Battle Gauntlets",
                        lvl: 54,
                        type: 5,
                        def: [39, 47],
                        req_str: 88
                    }, {
                        id: "wargauntlets",
                        name: "War Gauntlers",
                        lvl: 59,
                        type: 5,
                        def: [43, 53],
                        req_str: 110
                    }, {
                        id: "sash",
                        name: "Sash",
                        lvl: 3,
                        type: 6,
                        def: [2, 2],
                        slots: 1
                    }, {
                        id: "lightbelt",
                        name: "Light Belt",
                        lvl: 7,
                        type: 6,
                        def: [3, 3],
                        slots: 1
                    }, {
                        id: "belt",
                        name: "Belt",
                        lvl: 12,
                        type: 6,
                        def: [5, 5],
                        req_str: 25,
                        slots: 2
                    }, {
                        id: "heavybelt",
                        name: "Heavy Belt",
                        lvl: 20,
                        type: 6,
                        def: [6, 6],
                        req_str: 45,
                        slots: 2
                    }, {
                        id: "platedbelt",
                        name: "Plated Belt",
                        lvl: 27,
                        type: 6,
                        def: [8, 11],
                        req_str: 60,
                        slots: 3
                    }, {
                        id: "demonhidesash",
                        name: "Demonhide Sash",
                        lvl: 41,
                        type: 6,
                        def: [29, 34],
                        req_str: 20,
                        slots: 3
                    }, {
                        id: "sharkskinbelt",
                        name: "Sharkskin Belt",
                        lvl: 44,
                        type: 6,
                        def: [31, 36],
                        req_str: 20,
                        slots: 3
                    }, {
                        id: "meshbelt",
                        name: "Mesh Belt",
                        lvl: 48,
                        type: 6,
                        def: [35, 40],
                        req_str: 58,
                        slots: 3
                    }, {
                        id: "battlebelt",
                        name: "Battle Belt",
                        lvl: 54,
                        type: 6,
                        def: [37, 42],
                        req_str: 88,
                        slots: 3
                    }, {
                        id: "warbelt",
                        name: "War Belt",
                        lvl: 59,
                        type: 6,
                        def: [41, 52],
                        req_str: 110,
                        slots: 3
                    }, {
                        id: "leatherboots",
                        name: "Leather Boots",
                        lvl: 3,
                        type: 7,
                        def: [2, 3]
                    }, {
                        id: "heavyboots",
                        name: "Heavy Boots",
                        lvl: 7,
                        type: 7,
                        def: [5, 6],
                        req_str: 18
                    }, {
                        id: "chainboots",
                        name: "Chain Boots",
                        lvl: 12,
                        type: 7,
                        def: [8, 9],
                        req_str: 30
                    }, {
                        id: "lightplatedboots",
                        name: "Light Plated Boots",
                        lvl: 20,
                        type: 7,
                        def: [9, 11],
                        req_str: 50
                    }, {
                        id: "greaves",
                        name: "Greaves",
                        lvl: 27,
                        type: 7,
                        def: [12, 15],
                        req_str: 70
                    }, {
                        id: "demonhideboots",
                        name: "Demonhide Boots",
                        lvl: 41,
                        type: 7,
                        def: [28, 35],
                        req_str: 20
                    }, {
                        id: "sharkskinboots",
                        name: "Sharkskin Boots",
                        lvl: 44,
                        type: 7,
                        def: [33, 39],
                        req_str: 47
                    }, {
                        id: "meshboots",
                        name: "Mesh Boots",
                        lvl: 48,
                        type: 7,
                        def: [37, 44],
                        req_str: 65
                    }, {
                        id: "battleboots",
                        name: "Battle Boots",
                        lvl: 54,
                        type: 7,
                        def: [39, 47],
                        req_str: 95
                    }, {
                        id: "warboots",
                        name: "War Boots",
                        lvl: 59,
                        type: 7,
                        def: [45, 53],
                        req_str: 125
                    }, {
                        id: "ring",
                        name: "Ring",
                        lvl: 2,
                        anylvlover: !0,
                        type: 8
                    }],
                    F4 = [{
                        id: "minor_healing",
                        name: "Minor healing potion",
                        desc: "Restore life: 30",
                        lvl: 1,
                        type: -1,
                        price: 1,
                        use: t => {
                            t.restoreLife(30)
                        }
                    }, {
                        id: "light_healing",
                        name: "Light healing potion",
                        desc: "Restore life: 60",
                        lvl: 8,
                        type: -1,
                        price: 10,
                        use: t => {
                            t.restoreLife(60)
                        }
                    }, {
                        id: "healing",
                        name: "Healing potion",
                        desc: "Restore life: 100",
                        lvl: 16,
                        type: -1,
                        price: 100,
                        use: t => {
                            t.restoreLife(100)
                        }
                    }, {
                        id: "greater_healing",
                        name: "Greater Healing potion",
                        desc: "Restore life: 180",
                        lvl: 24,
                        type: -1,
                        price: 1e3,
                        use: t => {
                            t.restoreLife(180)
                        }
                    }, {
                        id: "super_healing",
                        name: "Super Healing potion",
                        desc: "Restore life: 320",
                        lvl: 32,
                        anylvlover: !0,
                        type: -1,
                        price: 1e4,
                        use: t => {
                            t.restoreLife(320)
                        }
                    }, {
                        id: "minor_mana",
                        name: "Minor mana potion",
                        desc: "Restore mana: 30",
                        lvl: 1,
                        type: -1,
                        price: 1,
                        use: t => {
                            t.restoreMana(30)
                        }
                    }, {
                        id: "light_mana",
                        name: "Light mana potion",
                        desc: "Restore mana: 60",
                        lvl: 8,
                        type: -1,
                        price: 10,
                        use: t => {
                            t.restoreMana(60)
                        }
                    }, {
                        id: "mana",
                        name: "Mana potion",
                        desc: "Restore mana: 100",
                        lvl: 16,
                        type: -1,
                        price: 100,
                        use: t => {
                            t.restoreMana(100)
                        }
                    }, {
                        id: "greater_mana",
                        name: "Greater Mana potion",
                        desc: "Restore mana: 180",
                        lvl: 24,
                        type: -1,
                        price: 1e3,
                        use: t => {
                            t.restoreMana(180)
                        }
                    }, {
                        id: "super_mana",
                        name: "Super Mana potion",
                        desc: "Restore mana: 320",
                        lvl: 32,
                        anylvlover: !0,
                        type: -1,
                        price: 1e4,
                        use: t => {
                            t.restoreMana(320)
                        }
                    }, {
                        id: "antidote",
                        name: "Antidote",
                        desc: "Cure from poison",
                        lvl: 6,
                        anylvlover: !0,
                        type: -1,
                        price: 10,
                        use: t => {
                            t.getData().poisoned = void 0
                        }
                    }, {
                        id: "thawing",
                        name: "Thawing Potion",
                        desc: "Unfreeze",
                        lvl: 6,
                        anylvlover: !0,
                        type: -1,
                        price: 10,
                        use: t => {
                            t.getData().frozen = 0
                        }
                    }, {
                        id: "strength",
                        name: "Strength Potion",
                        desc: "+10 strength (permanently)",
                        lvl: 1e3,
                        type: -1,
                        price: 10,
                        use: t => {
                            t.getData().str += 10
                        }
                    }, {
                        id: "dexterity",
                        name: "Dexterity Potion",
                        desc: "+10 dexterity (permanently)",
                        lvl: 1e3,
                        type: -1,
                        price: 10,
                        use: t => {
                            t.getData().dex += 10
                        }
                    }, {
                        id: "vitality",
                        name: "Vitality Potion",
                        desc: "+10 vitality (permanently)",
                        lvl: 1e3,
                        type: -1,
                        price: 10,
                        use: t => {
                            t.getData().vit += 10
                        }
                    }, {
                        id: "energy",
                        name: "Energy Potion",
                        desc: "+10 energy (permanently)",
                        lvl: 1e3,
                        type: -1,
                        price: 10,
                        use: t => {
                            t.getData().ene += 10
                        }
                    }],
                    B4 = [{
                        suffix: "Regeneration",
                        effect: "lifereg_3_5",
                        types: [0, 1, 5, 6, 8],
                        lvl: 1
                    }, {
                        suffix: "Regrowth",
                        effect: "lifereg_6_10",
                        types: [0, 1, 5, 6, 8],
                        lvl: 16
                    }, {
                        suffix: "Revivification",
                        effect: "lifereg_11_15",
                        types: [0, 1, 5, 6, 8],
                        lvl: 32
                    }, {
                        suffix: "Renewal",
                        effect: "manareg_3_5",
                        types: [0, 1, 5, 6, 8],
                        lvl: 1
                    }, {
                        suffix: "Resumption",
                        effect: "manareg_6_10",
                        types: [0, 1, 5, 6, 8],
                        lvl: 16
                    }, {
                        suffix: "Restoration",
                        effect: "manareg_11_15",
                        types: [0, 1, 5, 6, 8],
                        lvl: 32
                    }, {
                        prefix: "Jagged",
                        effect: "dmgpct_10_20",
                        types: [3],
                        lvl: 1
                    }, {
                        prefix: "Deadly",
                        effect: "dmgpct_21_40",
                        types: [3],
                        lvl: 3
                    }, {
                        prefix: "Brutal",
                        effect: "dmgpct_41_80",
                        types: [3],
                        lvl: 10
                    }, {
                        prefix: "Savage",
                        effect: "dmgpct_81_100",
                        types: [3],
                        lvl: 19
                    }, {
                        prefix: "Ferocious",
                        effect: "dmgpct_100_200",
                        types: [3],
                        lvl: 33
                    }, {
                        prefix: "Cruel",
                        effect: "dmgpct_200_300",
                        types: [3],
                        lvl: 43
                    }, {
                        suffix: "Craftsmanship",
                        effect: "maxdmg_1_5",
                        types: [1, 3, 8],
                        lvl: 1
                    }, {
                        suffix: "Quality",
                        effect: "maxdmg_2_8",
                        types: [1, 3, 8],
                        lvl: 3
                    }, {
                        suffix: "Slaying",
                        effect: "maxdmg_8_10",
                        types: [1, 3, 8],
                        lvl: 6
                    }, {
                        suffix: "Gore",
                        effect: "maxdmg_11_14",
                        types: [1, 3, 8],
                        lvl: 10
                    }, {
                        suffix: "Carnage",
                        effect: "maxdmg_15_20",
                        types: [1, 3, 8],
                        lvl: 14
                    }, {
                        suffix: "Worth",
                        effect: "mindmg_1_5",
                        types: [1, 3, 8],
                        lvl: 1
                    }, {
                        suffix: "Measure",
                        effect: "mindmg_5_9",
                        types: [1, 3, 8],
                        lvl: 9
                    }, {
                        suffix: "Excellence",
                        effect: "mindmg_9_14",
                        types: [1, 3, 8],
                        lvl: 18
                    }, {
                        suffix: "Performance",
                        effect: "mindmg_15_20",
                        types: [1, 3, 8],
                        lvl: 40
                    }, {
                        prefix: "Sturdy",
                        effect: "defpct_10_30",
                        types: [0, 2, 4, 5, 6, 7],
                        lvl: 1
                    }, {
                        prefix: "Strong",
                        effect: "defpct_31_40",
                        types: [0, 2, 4, 5, 6, 7],
                        lvl: 6
                    }, {
                        prefix: "Glorious",
                        effect: "defpct_41_65",
                        types: [0, 2, 4, 5, 6, 7],
                        lvl: 14
                    }, {
                        prefix: "Saintly",
                        effect: "defpct_66_80",
                        types: [0, 2, 4, 5, 6, 7],
                        lvl: 20
                    }, {
                        prefix: "Holy",
                        effect: "defpct_81_100",
                        types: [0, 2, 4, 5, 6, 7],
                        lvl: 27
                    }, {
                        suffix: "Jackal",
                        effect: "life_1_5",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 1
                    }, {
                        suffix: "Fox",
                        effect: "life_6_10",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 5
                    }, {
                        suffix: "Wolf",
                        effect: "life_11_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 11
                    }, {
                        suffix: "Tiger",
                        effect: "life_21_30",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 15
                    }, {
                        suffix: "Colossus",
                        effect: "life_31_50",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 22
                    }, {
                        prefix: "Crimson",
                        effect: "resf_5_10",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 3
                    }, {
                        prefix: "Russet",
                        effect: "resf_11_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 9
                    }, {
                        prefix: "Garnet",
                        effect: "resf_21_30",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 13
                    }, {
                        prefix: "Ruby",
                        effect: "resf_31_40",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 18
                    }, {
                        prefix: "Azure",
                        effect: "resc_5_10",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 3
                    }, {
                        prefix: "Lapis",
                        effect: "resc_11_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 9
                    }, {
                        prefix: "Cobalt",
                        effect: "resc_21_30",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 13
                    }, {
                        prefix: "Sapphire",
                        effect: "resc_31_40",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 18
                    }, {
                        prefix: "Tangerine",
                        effect: "resl_5_10",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 3
                    }, {
                        prefix: "Ocher",
                        effect: "resl_11_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 9
                    }, {
                        prefix: "Coral",
                        effect: "resl_21_30",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 13
                    }, {
                        prefix: "Amber",
                        effect: "resl_31_40",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 18
                    }, {
                        prefix: "Beryl",
                        effect: "resp_5_10",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 3
                    }, {
                        prefix: "Viridian",
                        effect: "resp_11_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 9
                    }, {
                        prefix: "Jade",
                        effect: "resp_21_30",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 13
                    }, {
                        prefix: "Emerald",
                        effect: "resp_31_40",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 18
                    }, {
                        prefix: "Shimmering",
                        effect: "resa_3_7",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 6
                    }, {
                        prefix: "Rainbow",
                        effect: "resa_8_11",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 15
                    }, {
                        prefix: "Scintillating",
                        effect: "resa_12_15",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 25
                    }, {
                        prefix: "Prismatic",
                        effect: "resa_16_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 31
                    }, {
                        prefix: "Chromatic",
                        effect: "resa_21_30",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 41
                    }, {
                        prefix: "Bronze",
                        effect: "ar_10_20",
                        types: [3, 8],
                        lvl: 1
                    }, {
                        prefix: "Iron",
                        effect: "ar_21_40",
                        types: [3, 8],
                        lvl: 3
                    }, {
                        prefix: "Steel",
                        effect: "ar_41_60",
                        types: [3, 8],
                        lvl: 6
                    }, {
                        prefix: "Silver",
                        effect: "ar_61_80",
                        types: [3, 8],
                        lvl: 9
                    }, {
                        prefix: "Gold",
                        effect: "ar_81_100",
                        types: [3, 8],
                        lvl: 12
                    }, {
                        prefix: "Lizard's",
                        effect: "mana_1_5",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 2
                    }, {
                        prefix: "Snake's",
                        effect: "mana_5_10",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 4
                    }, {
                        prefix: "Serpent's",
                        effect: "mana_11_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 10
                    }, {
                        prefix: "Drake's",
                        effect: "mana_21_30",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 15
                    }, {
                        prefix: "Dragon's",
                        effect: "mana_31_40",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 18
                    }, {
                        suffix: "Strength",
                        effect: "str_1_5",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 1
                    }, {
                        suffix: "Might",
                        effect: "str_6_10",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 8
                    }, {
                        suffix: "Ox",
                        effect: "str_11_15",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 18
                    }, {
                        suffix: "Giant",
                        effect: "str_16_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 34
                    }, {
                        suffix: "Dexterity",
                        effect: "dex_1_5",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 1
                    }, {
                        suffix: "Skill",
                        effect: "dex_6_10",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 8
                    }, {
                        suffix: "Accuracy",
                        effect: "dex_11_15",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 19
                    }, {
                        suffix: "Precision",
                        effect: "dex_16_20",
                        types: [0, 1, 2, 4, 5, 6, 7, 8],
                        lvl: 34
                    }, {
                        suffix: "Chance",
                        effect: "drop_5_15",
                        types: [1, 5, 7, 8],
                        lvl: 5
                    }, {
                        suffix: "Fortune",
                        effect: "drop_16_25",
                        types: [1, 5, 7, 8],
                        lvl: 10
                    }, {
                        suffix: "Luck",
                        effect: "drop_26_35",
                        types: [1, 5, 7, 8],
                        lvl: 15
                    }, {
                        suffix: "Destiny",
                        effect: "drop_36_45",
                        types: [1, 5, 7, 8],
                        lvl: 20
                    }, {
                        suffix: "Greed",
                        effect: "gold_25_40",
                        types: [1, 8],
                        lvl: 1
                    }, {
                        suffix: "Wealth",
                        effect: "gold_41_80",
                        types: [1, 8],
                        lvl: 5
                    }, {
                        suffix: "Prosperity",
                        effect: "gold_81_120",
                        types: [1, 8],
                        lvl: 10
                    }, {
                        suffix: "Opulence",
                        effect: "gold_121_160",
                        types: [1, 8],
                        lvl: 15
                    }, {
                        suffix: "Readiness",
                        effect: "spd_10_10",
                        types: [3, 5],
                        lvl: 3
                    }, {
                        suffix: "Alacrity",
                        effect: "spd_20_20",
                        types: [3, 5],
                        lvl: 15
                    }, {
                        suffix: "Swiftness",
                        effect: "spd_30_30",
                        types: [3, 5],
                        lvl: 22
                    }, {
                        suffix: "Quickness",
                        effect: "spd_30_30",
                        types: [3, 5],
                        lvl: 35
                    }, {
                        suffix: "Blocking",
                        effect: "bl_5_10",
                        types: [4],
                        lvl: 1
                    }, {
                        suffix: "Blocking",
                        effect: "bl_11_16",
                        types: [4],
                        lvl: 4
                    }, {
                        suffix: "Deflecting",
                        effect: "bl_17_22",
                        types: [4],
                        lvl: 8
                    }, {
                        suffix: "Deflecting",
                        effect: "bl_23_30",
                        types: [4],
                        lvl: 12
                    }, {
                        suffix: "Blocking",
                        effect: "fbl_5_10",
                        types: [4],
                        lvl: 1
                    }, {
                        suffix: "Blocking",
                        effect: "fbl_11_16",
                        types: [4],
                        lvl: 4
                    }, {
                        suffix: "Deflecting",
                        effect: "fbl_17_22",
                        types: [4],
                        lvl: 8
                    }, {
                        suffix: "Deflecting",
                        effect: "fbl_23_30",
                        types: [4],
                        lvl: 12
                    }, {
                        suffix: "Leech",
                        effect: "lsto_2_3",
                        types: [1, 3, 5, 8],
                        lvl: 4
                    }, {
                        suffix: "Leech",
                        effect: "lsto_4_5",
                        types: [1, 3, 5, 8],
                        lvl: 12
                    }, {
                        suffix: "Locust",
                        effect: "lsto_6_7",
                        types: [1, 3, 5, 8],
                        lvl: 21
                    }, {
                        suffix: "Lamprey",
                        effect: "lsto_8_10",
                        types: [1, 3, 5, 8],
                        lvl: 43
                    }, {
                        suffix: "Bat",
                        effect: "msto_2_3",
                        types: [1, 3, 5, 8],
                        lvl: 4
                    }, {
                        suffix: "Bat",
                        effect: "msto_4_5",
                        types: [1, 3, 5, 8],
                        lvl: 12
                    }, {
                        suffix: "Wraith",
                        effect: "msto_6_7",
                        types: [1, 3, 5, 8],
                        lvl: 21
                    }, {
                        suffix: "Vampire",
                        effect: "msto_8_10",
                        types: [1, 3, 5, 8],
                        lvl: 43
                    }, {
                        suffix: "Experience",
                        effect: "xp_1_5",
                        types: [1, 8],
                        lvl: 8
                    }, {
                        suffix: "Experience",
                        effect: "xp_6_10",
                        types: [1, 8],
                        lvl: 16
                    }, {
                        suffix: "Knowledge",
                        effect: "xp_11_15",
                        types: [1, 8],
                        lvl: 24
                    }, {
                        suffix: "Wisdom",
                        effect: "xp_16_20",
                        types: [1, 8],
                        lvl: 32
                    }, {
                        suffix: "ease",
                        effect: "req_10_10",
                        types: [0, 2, 3, 4, 5, 6, 7],
                        lvl: 11
                    }, {
                        suffix: "ease",
                        effect: "req_20_20",
                        types: [0, 2, 3, 4, 5, 6, 7],
                        lvl: 15
                    }, {
                        suffix: "simplicity",
                        effect: "req_30_30",
                        types: [0, 2, 3, 4, 5, 6, 7],
                        lvl: 19
                    }, {
                        suffix: "simplicity",
                        effect: "req_40_40",
                        types: [0, 2, 3, 4, 5, 6, 7],
                        lvl: 23
                    }, {
                        prefix: "Snowy",
                        effect: "cdmg_1_1_2_4",
                        types: [3],
                        lvl: 3
                    }, {
                        prefix: "Shivering",
                        effect: "cdmg_1_2_3_6",
                        types: [3],
                        lvl: 9
                    }, {
                        prefix: "Boreal",
                        effect: "cdmg_2_4_4_15",
                        types: [3],
                        lvl: 20
                    }, {
                        prefix: "Hibernal",
                        effect: "cdmg_5_9_16_50",
                        types: [3],
                        lvl: 37
                    }, {
                        prefix: "Fiery",
                        effect: "fdmg_1_1_2_6",
                        types: [3],
                        lvl: 3
                    }, {
                        prefix: "Smoldering",
                        effect: "fdmg_1_4_6_11",
                        types: [3],
                        lvl: 9
                    }, {
                        prefix: "Smoking",
                        effect: "fdmg_5_9_10_20",
                        types: [3],
                        lvl: 20
                    }, {
                        prefix: "Flaming",
                        effect: "fdmg_10_20_21_75",
                        types: [3],
                        lvl: 37
                    }, {
                        prefix: "Static",
                        effect: "ldmg_1_1_6_16",
                        types: [3],
                        lvl: 3
                    }, {
                        prefix: "Glowing",
                        effect: "ldmg_1_1_9_23",
                        types: [3],
                        lvl: 9
                    }, {
                        prefix: "Buzzing",
                        effect: "ldmg_1_1_17_40",
                        types: [3],
                        lvl: 20
                    }, {
                        prefix: "Arcing",
                        effect: "ldmg_1_6_41_120",
                        types: [3],
                        lvl: 37
                    }, {
                        prefix: "Septic",
                        effect: "pdmg_1_2_2_2",
                        types: [3],
                        lvl: 3
                    }, {
                        prefix: "Foul",
                        effect: "pdmg_3_6_3_3",
                        types: [3],
                        lvl: 9
                    }, {
                        prefix: "Corrosive",
                        effect: "pdmg_10_25_4_4",
                        types: [3],
                        lvl: 20
                    }, {
                        prefix: "Toxic",
                        effect: "pdmg_25_35_5_5",
                        types: [3],
                        lvl: 37
                    }, {
                        suffix: "Remedy",
                        effect: "plen_25",
                        types: [0, 1, 2, 8],
                        lvl: 5
                    }, {
                        suffix: "Amelioration",
                        effect: "plen_50",
                        types: [0, 1, 2, 8],
                        lvl: 20
                    }, {
                        suffix: "Defiance",
                        effect: "plen_75",
                        types: [0, 1, 2, 8],
                        lvl: 40
                    }, {
                        suffix: "Thawing",
                        effect: "redfrz_2",
                        types: [0, 1, 4, 5, 7, 8],
                        lvl: 7
                    }, {
                        suffix: "Steadiness",
                        effect: "stun_2",
                        types: [0, 1, 4, 5, 7, 8],
                        lvl: 7
                    }, {
                        suffix: "Apprentice",
                        effect: "cast_5_15",
                        types: [1, 3, 8],
                        wtypes: ["st"],
                        lvl: 6
                    }, {
                        suffix: "Magus",
                        effect: "cast_15_22",
                        types: [1, 3, 8],
                        wtypes: ["st"],
                        lvl: 25
                    }, {
                        prefix: "Pupil",
                        effect: "skcl0_1",
                        types: [0, 1, 8],
                        lvl: 6,
                        class: 0
                    }, {
                        prefix: "Student",
                        effect: "skcl0_2",
                        types: [0, 1, 8],
                        lvl: 12,
                        class: 0
                    }, {
                        prefix: "Mentee's",
                        effect: "skcat00_1",
                        types: [0, 1, 8],
                        lvl: 5,
                        class: 0
                    }, {
                        prefix: "Recruit's",
                        effect: "skcat00_2",
                        types: [0, 1, 8],
                        lvl: 10,
                        class: 0
                    }, {
                        prefix: "Learner's",
                        effect: "skcat01_1",
                        types: [0, 1, 8],
                        lvl: 5,
                        class: 0
                    }, {
                        prefix: "Novice's",
                        effect: "skcat01_2",
                        types: [0, 1, 8],
                        lvl: 10,
                        class: 0
                    }, {
                        prefix: "Slayer",
                        effect: "skcl1_1",
                        types: [0, 1, 3],
                        wtypes: ["a", "s", "m"],
                        lvl: 12,
                        class: 1
                    }, {
                        prefix: "Berserker",
                        effect: "skcl1_2",
                        types: [0, 1, 3],
                        wtypes: ["a", "s", "m"],
                        lvl: 30,
                        class: 1
                    }, {
                        prefix: "Expert's",
                        effect: "skcat10_1",
                        types: [0, 1, 3],
                        wtypes: ["a", "s", "m"],
                        lvl: 5,
                        class: 1
                    }, {
                        prefix: "Veteran's",
                        effect: "skcat10_2",
                        types: [0, 1, 3],
                        wtypes: ["a", "s", "m"],
                        lvl: 18,
                        class: 1
                    }, {
                        prefix: "Master's",
                        effect: "skcat10_3",
                        types: [0, 1, 3],
                        wtypes: ["a", "s", "m"],
                        lvl: 30,
                        class: 1
                    }, {
                        prefix: "Fanatic",
                        effect: "skcat11_1",
                        types: [0, 1, 3],
                        wtypes: ["a", "s", "m"],
                        lvl: 5,
                        class: 1
                    }, {
                        prefix: "Raging",
                        effect: "skcat11_2",
                        types: [0, 1, 3],
                        wtypes: ["a", "s", "m"],
                        lvl: 18,
                        class: 1
                    }, {
                        prefix: "Furious",
                        effect: "skcat11_3",
                        types: [0, 1, 3],
                        wtypes: ["a", "s", "m"],
                        lvl: 30,
                        class: 1
                    }, {
                        prefix: "Angel's",
                        effect: "skcl2_1",
                        types: [0, 1, 3],
                        wtypes: ["st"],
                        lvl: 12,
                        class: 2
                    }, {
                        prefix: "Arch-Angel's",
                        effect: "skcl2_2",
                        types: [0, 1, 3],
                        wtypes: ["st"],
                        lvl: 30,
                        class: 2
                    }, {
                        prefix: "Burning",
                        effect: "skcat20_1",
                        types: [0, 1, 3],
                        wtypes: ["st"],
                        lvl: 5,
                        class: 2
                    }, {
                        prefix: "Blazing",
                        effect: "skcat20_2",
                        types: [0, 1, 3],
                        wtypes: ["st"],
                        lvl: 18,
                        class: 2
                    }, {
                        prefix: "Volcanic",
                        effect: "skcat20_3",
                        types: [0, 1, 3],
                        wtypes: ["st"],
                        lvl: 30,
                        class: 2
                    }, {
                        prefix: "Chilling",
                        effect: "skcat21_1",
                        types: [0, 1, 3],
                        wtypes: ["st"],
                        lvl: 5,
                        class: 2
                    }, {
                        prefix: "Freezing",
                        effect: "skcat21_2",
                        types: [0, 1, 3],
                        wtypes: ["st"],
                        lvl: 18,
                        class: 2
                    }, {
                        prefix: "Glacial",
                        effect: "skcat21_3",
                        types: [0, 1, 3],
                        wtypes: ["st"],
                        lvl: 30,
                        class: 2
                    }, {
                        prefix: "Shaman's",
                        effect: "skcl3_1",
                        types: [0, 1, 3],
                        wtypes: ["m"],
                        lvl: 12,
                        class: 3
                    }, {
                        prefix: "Hierophant's",
                        effect: "skcl3_2",
                        types: [0, 1, 3],
                        wtypes: ["m"],
                        lvl: 30,
                        class: 3
                    }, {
                        prefix: "Trainer's",
                        effect: "skcat30_1",
                        types: [0, 1, 3],
                        wtypes: ["m"],
                        lvl: 5,
                        class: 3
                    }, {
                        prefix: "Caretaker's",
                        effect: "skcat30_2",
                        types: [0, 1, 3],
                        wtypes: ["m"],
                        lvl: 18,
                        class: 3
                    }, {
                        prefix: "Keeper's",
                        effect: "skcat30_3",
                        types: [0, 1, 3],
                        wtypes: ["m"],
                        lvl: 30,
                        class: 3
                    }, {
                        prefix: "Spiritual",
                        effect: "skcat31_1",
                        types: [0, 1, 3],
                        wtypes: ["m"],
                        lvl: 5,
                        class: 3
                    }, {
                        prefix: "Feral",
                        effect: "skcat31_2",
                        types: [0, 1, 3],
                        wtypes: ["m"],
                        lvl: 18,
                        class: 3
                    }, {
                        prefix: "Communal",
                        effect: "skcat31_3",
                        types: [0, 1, 3],
                        wtypes: ["m"],
                        lvl: 30,
                        class: 3
                    }, {
                        suffix: "Gifted",
                        effect: "lvlreq_1",
                        types: [1, 5, 7, 8],
                        lvl: 5
                    }, {
                        suffix: "Genius",
                        effect: "lvlreq_2",
                        types: [1, 8],
                        lvl: 10
                    }, {
                        suffix: "Health",
                        effect: "dmgred_1",
                        types: [1, 2, 4, 8],
                        lvl: 10
                    }, {
                        suffix: "Protection",
                        effect: "dmgred_2",
                        types: [1, 2, 4, 8],
                        lvl: 15
                    }, {
                        suffix: "Absorption",
                        effect: "dmgred_3",
                        types: [1, 2, 4, 8],
                        lvl: 20
                    }, {
                        suffix: "Life",
                        effect: "dmgred_4_7",
                        types: [1, 2, 4, 8],
                        lvl: 30
                    }, {
                        suffix: "Amicae",
                        effect: "dmgred_8_15",
                        types: [1, 2, 4, 8],
                        lvl: 40
                    }, {
                        suffix: "Life Everlasting",
                        effect: "dmgred_10_25",
                        types: [1, 2, 4, 8],
                        lvl: 50
                    }, {
                        suffix: "Warding",
                        effect: "mdmgred_1",
                        types: [1, 2, 3, 4, 8],
                        wtypes: ["st"],
                        lvl: 10
                    }, {
                        suffix: "Sentinel",
                        effect: "mdmgred_2",
                        types: [1, 2, 3, 4, 8],
                        wtypes: ["st"],
                        lvl: 15
                    }, {
                        suffix: "Guarding",
                        effect: "mdmgred_3",
                        types: [1, 2, 3, 4, 8],
                        wtypes: ["st"],
                        lvl: 20
                    }, {
                        suffix: "Negation",
                        effect: "mdmgred_4_6",
                        types: [1, 2, 3, 4, 8],
                        wtypes: ["st"],
                        lvl: 30
                    }, {
                        suffix: "Continuance",
                        effect: "shrine_5_15",
                        types: [0, 1, 6, 8],
                        lvl: 10
                    }, {
                        suffix: "Memorizing",
                        effect: "shrine_15_30",
                        types: [0, 1, 6, 8],
                        lvl: 20
                    }, {
                        suffix: "Memorizing",
                        effect: "shrine_30_60",
                        types: [0, 1, 6, 8],
                        lvl: 30
                    }],
                    Ac = {
                        dmgred: t => "Damage Reduced by " + t,
                        mdmgred: t => "Magical damage Reduced by " + t,
                        mindmg: t => "Min damage +" + t + " (base)",
                        maxdmg: t => "Max damage +" + t + " (base)",
                        dmgpct: t => "Damage +" + t + "%",
                        lsto: t => t + "% life stolen per hit",
                        msto: t => t + "% mana stolen per hit",
                        defpct: t => "Defense +" + t + "%",
                        spd: t => "Attack Rate +" + t + "%",
                        bl: t => "Chances to block +" + t + "%",
                        fbl: t => t + "% Faster block rate",
                        life: t => "Life +" + t,
                        lifepct: t => "Life +" + t + "%",
                        mana: t => "Mana +" + t,
                        lifereg: t => "Resplenish life +" + t + "%",
                        manareg: t => "Resplenish mana +" + t + "%",
                        ar: t => "Attack Rating +" + t,
                        arpct: t => "Attack Rating +" + t + "%",
                        resf: t => "Fire Resist +" + t,
                        resc: t => "Cold Resist +" + t,
                        resl: t => "Lightning Resist +" + t,
                        resp: t => "Poison Resist +" + t,
                        resa: t => "Resist all +" + t,
                        str: t => "Strength +" + t,
                        dex: t => "Dexterity +" + t,
                        drop: t => t + "% better chance of getting magic items",
                        shard: t => t + "% better chance of getting shards",
                        gold: t => t + "% more gold from monsters",
                        xp: t => t + "% more experience from monsters",
                        req: t => "Requirements -" + t + "%",
                        cdmg: (t, n) => "Add " + t + "-" + n + " cold damage",
                        frz: t => "Freeze enemy for " + t + " seconds",
                        fdmg: (t, n) => "Add " + t + "-" + n + " fire damage",
                        ldmg: (t, n) => "Add " + t + "-" + n + " lightning damage",
                        pdmg: (t, n) => "Add " + t * n + " poison damage over " + n + " seconds",
                        redfrz: () => "Half freeze duration",
                        stun: () => "Half stun duration",
                        plen: t => "Poison length -" + t + "%",
                        cast: t => "Cast rate +" + t + "%",
                        sk: (t, n, e) => "+" + t + " to " + n + " (" + e + " only)",
                        skcl0: t => "+" + t + " to apprentice skills level",
                        skcat00: t => "+" + t + " to Combat skills (apprentice only)",
                        skcat01: t => "+" + t + " to Magic skills (apprentice only)",
                        skcl1: t => "+" + t + " to barbarian skills level",
                        skcat10: t => "+" + t + " to Masteries (barbarian only)",
                        skcat11: t => "+" + t + " to Combat skills (barbarian only)",
                        skcl2: t => "+" + t + " to sorceress skills level",
                        skcat20: t => "+" + t + " to Fire skills (sorceress only)",
                        skcat21: t => "+" + t + " to Cold skills (sorceress only)",
                        skcl3: t => "+" + t + " to druid skills level",
                        skcat30: t => "+" + t + " to Summoning skills (druid only)",
                        skcat31: t => "+" + t + " to Shape Shifting skills (druid only)",
                        skall: t => "+" + t + " to all skills",
                        autocast: t => "+" + t + " auto-cast",
                        lvlreq: t => "Reduce class & skills level requirements by " + t,
                        shrine: t => "Increase shrine duration by " + t + "%"
                    },
                    L4 = {
                        horadricamulet: {
                            name: "Horadric Amulet",
                            id: "amulet",
                            effects: ["skall_1", "resp_25", "life_10", "mana_10"],
                            lvlreq: 12,
                            price: 1e4,
                            unique: !0
                        },
                        durielsring: {
                            name: "Duriel's Ring",
                            id: "ring",
                            effects: ["resa_10", "redfrz_2", "stun_2", "plen_50"],
                            lvlreq: 16,
                            price: 15e3,
                            unique: !0
                        },
                        skullcrusher: {
                            name: "Skullcrusher",
                            id: "warhammer",
                            effects: ["skcl1_1", "maxdmg_20", "dmgpct_200", "spd_10"],
                            lvlreq: 26,
                            price: 15e3,
                            unique: !0
                        },
                        icewraith: {
                            name: "Ice Wraith",
                            id: "warstaff",
                            effects: ["skcl2_1", "skcat21_3", "sk_frozenorb_2", "sk_coldmastery_1", "resc_50", "redfrz_2", "cast_20"],
                            lvlreq: 30,
                            price: 25e3,
                            unique: !0
                        },
                        avengerguard: {
                            name: "Avenger Guard",
                            id: "greathelm",
                            effects: ["skcl1_2", "skcat11_2", "dmgpct_20", "resa_15", "life_20"],
                            def: 35,
                            lvlreq: 30,
                            price: 25e3,
                            unique: !0
                        },
                        lightninghands: {
                            name: "Lightning Hands",
                            id: "leathergloves",
                            effects: ["dex_20", "ldmg_1_60", "cast_20", "spd_20"],
                            lvlreq: 12,
                            def: 3,
                            price: 15e3,
                            unique: !0
                        },
                        trollskin: {
                            name: "Trollskin",
                            id: "belt",
                            effects: ["life_50", "lifereg_200", "manareg_20", "resp_30", "pdmg_5_10"],
                            lvlreq: 18,
                            def: 5,
                            price: 2e4,
                            unique: !0
                        },
                        firefeet: {
                            name: "Firefeet",
                            id: "leatherboots",
                            effects: ["skcl0_2", "xp_50", "mana_40", "life_40"],
                            lvlreq: 1,
                            def: 3,
                            price: 15e3,
                            unique: !0
                        },
                        mindseye: {
                            name: "Mind's Eye",
                            id: "skullcap",
                            effects: ["skcl2_1", "resa_12", "cast_10", "autocast_1", "defpct_200"],
                            lvlreq: 18,
                            def: 11,
                            price: 25e3,
                            unique: !0
                        },
                        icering: {
                            name: "Ice ring",
                            id: "ring",
                            effects: ["mana_25", "manareg_50", "resc_30", "redfrz_2", "sk_heat_3"],
                            lvlreq: 12,
                            price: 2e4,
                            unique: !0
                        },
                        nagelring: {
                            name: "Nagelring",
                            id: "ring",
                            effects: ["shard_25", "drop_40", "gold_200"],
                            lvlreq: 12,
                            price: 15e3,
                            unique: !0
                        },
                        guardianofearth: {
                            name: "Guardian of Earth",
                            id: "cudgel",
                            effects: ["skcl3_2", "skcat30_3", "skcat31_1", "maxdmg_10", "dmgpct_150", "resf_25", "str_10"],
                            lvlreq: 36,
                            price: 35e3,
                            unique: !0
                        },
                        eaglemask: {
                            name: "Eagle Mask",
                            id: "falconmask",
                            effects: ["skcl3_1", "skcat31_1", "defpct_65", "resl_50"],
                            def: 28,
                            lvlreq: 10,
                            price: 1e4,
                            unique: !0
                        },
                        spiritkeeper: {
                            name: "Spirit Keeper",
                            id: "alphahelm",
                            effects: ["skcl3_2", "skcat31_2", "sk_summonpixie_3", "resa_25", "plen_50", "stun_2"],
                            def: 62,
                            lvlreq: 32,
                            price: 35e3,
                            unique: !0
                        },
                        travelersprotector: {
                            name: "Traveler's protector",
                            id: "amulet",
                            effects: ["lvlreq_3"],
                            lvlreq: 1,
                            price: 5e3,
                            unique: !0
                        },
                        deathguard: {
                            name: "Death Guard",
                            id: "grimshield",
                            effects: ["defpct_50", "bl_20", "fbl_20", "dmgred_20", "mdmgred_10"],
                            def: 150,
                            lvlreq: 24,
                            price: 35e3,
                            unique: !0
                        },
                        elminstersplate: {
                            name: "Elminster's plate",
                            id: "mageplate",
                            effects: ["defpct_120", "resa_30", "skall_3", "cast_15"],
                            def: 260,
                            lvlreq: 40,
                            price: 5e4,
                            unique: !0
                        },
                        babrebayan: {
                            name: "Babr-e Bayan",
                            id: "ornateplate",
                            effects: ["defpct_150", "resf_50", "resc_50", "skall_2", "life_30"],
                            def: 450,
                            lvlreq: 40,
                            price: 5e4,
                            unique: !0
                        },
                        jokulsnautr: {
                            name: "J\xf6kulsnautr",
                            id: "gothicsword",
                            effects: ["skall_1", "skcl1_1", "mindmg_11", "dmgpct_150", "spd_10", "lsto_10"],
                            lvlreq: 36,
                            price: 4e4,
                            unique: !0
                        },
                        parashu: {
                            name: "Parashu",
                            id: "giantaxe",
                            effects: ["mindmg_8", "maxdmg_12", "dmgpct_180", "cdmg_15_20", "shard_25", "ar_80"],
                            lvlreq: 42,
                            price: 5e4,
                            unique: !0
                        },
                        studentsrobe: {
                            name: "Student's robe",
                            id: "robe",
                            effects: ["defpct_800", "xp_100", "lvlreq_1", "resa_10"],
                            def: 17,
                            lvlreq: 1,
                            price: 3e4,
                            unique: !0
                        },
                        goldencoat: {
                            name: "Gloden Coat",
                            id: "ringmail",
                            effects: ["defpct_100", "resf_15", "resp_25", "plen_50", "dmgred_5"],
                            def: 48,
                            lvlreq: 11,
                            price: 1e4,
                            unique: !0
                        },
                        oldboots: {
                            name: "Old Boots",
                            id: "leatherboots",
                            effects: ["resc_1", "resf_1", "drop_100"],
                            def: 2,
                            lvlreq: 1,
                            price: 5e3,
                            unique: !0
                        }
                    },
                    V4 = [{
                        id: "fallen",
                        name: "Fallen",
                        lvl: 1,
                        hp: [8, 12],
                        spd: 1.4,
                        def: 1,
                        atk: 1,
                        min: 1,
                        max: 2
                    }, {
                        id: "fallenshaman",
                        name: "Fallen Shaman",
                        lvl: 2,
                        hp: [12, 16],
                        spd: 1.2,
                        def: 2,
                        atk: 2,
                        min: 1,
                        max: 2,
                        type: "f",
                        summon: "fallen",
                        ranged: !0
                    }, {
                        id: "zombie",
                        name: "Zombie",
                        lvl: 1,
                        hp: [12, 28],
                        spd: 2.2,
                        def: 2,
                        atk: 2,
                        min: 2,
                        max: 3,
                        undead: !0
                    }, {
                        id: "quillrat",
                        name: "Quill Rat",
                        lvl: 1,
                        hp: [14, 16],
                        spd: 1.2,
                        def: 1,
                        atk: 2,
                        min: 1,
                        max: 4,
                        ranged: !0
                    }, {
                        id: "beast",
                        name: "Gargantuan Beast",
                        lvl: 2,
                        hp: [20, 30],
                        spd: 1.4,
                        def: 4,
                        atk: 2,
                        min: 3,
                        max: 5
                    }, {
                        id: "skeleton",
                        name: "Skeleton",
                        lvl: 2,
                        hp: [18, 22],
                        spd: 1.2,
                        def: 5,
                        atk: 3,
                        min: 2,
                        max: 6,
                        undead: !0
                    }, {
                        id: "darkhunter",
                        name: "Dark Hunter",
                        lvl: 2,
                        hp: [22, 29],
                        spd: 1,
                        def: 8,
                        atk: 4,
                        min: 5,
                        max: 7
                    }, {
                        id: "hungrydead",
                        name: "Hungry Dead",
                        lvl: 2,
                        hp: [30, 40],
                        spd: 2.2,
                        def: 3,
                        atk: 3,
                        min: 7,
                        max: 8,
                        undead: !0
                    }, {
                        id: "vilehunter",
                        name: "Vile Hunter",
                        lvl: 5,
                        hp: [35, 45],
                        spd: 1,
                        def: 10,
                        atk: 6,
                        min: 7,
                        max: 9
                    }, {
                        id: "moonclan",
                        name: "Moon Clan",
                        lvl: 4,
                        hp: [40, 50],
                        spd: 1.4,
                        def: 12,
                        atk: 6,
                        min: 8,
                        max: 12
                    }, {
                        id: "skeletonarcher",
                        name: "Skeleton Archer",
                        hp: [40, 50],
                        lvl: 3,
                        spd: 1,
                        def: 8,
                        atk: 6,
                        min: 6,
                        max: 10,
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "carver",
                        name: "Carver",
                        lvl: 5,
                        hp: [25, 35],
                        spd: 1.2,
                        def: 6,
                        atk: 6,
                        min: 4,
                        max: 6
                    }, {
                        id: "carvershaman",
                        name: "Carver Shaman",
                        lvl: 6,
                        hp: [40, 55],
                        spd: 1.2,
                        def: 6,
                        atk: 6,
                        min: 2,
                        max: 4,
                        type: "f",
                        summon: "carver",
                        ranged: !0
                    }, {
                        id: "spikefiend",
                        name: "Spike Fiend",
                        lvl: 5,
                        hp: [35, 45],
                        spd: 1,
                        def: 6,
                        atk: 6,
                        min: 4,
                        max: 6,
                        ranged: !0
                    }, {
                        id: "nightclan",
                        name: "Night Clan",
                        lvl: 6,
                        hp: [50, 60],
                        spd: 1.4,
                        def: 14,
                        atk: 8,
                        min: 10,
                        max: 14
                    }, {
                        id: "returned",
                        name: "Returned",
                        lvl: 6,
                        hp: [50, 60],
                        spd: 2,
                        def: 15,
                        atk: 9,
                        min: 12,
                        max: 16,
                        undead: !0
                    }, {
                        id: "bloodclan",
                        name: "Blood Clan",
                        lvl: 7,
                        hp: [60, 70],
                        spd: 1.4,
                        def: 16,
                        atk: 10,
                        min: 12,
                        max: 14
                    }, {
                        id: "darkranger",
                        name: "Dark Ranger",
                        lvl: 4,
                        hp: [50, 60],
                        spd: 1,
                        def: 10,
                        atk: 12,
                        min: 8,
                        max: 14
                    }, {
                        id: "ghost",
                        name: "Ghost",
                        lvl: 7,
                        hp: [50, 60],
                        spd: 1,
                        def: 18,
                        atk: 14,
                        min: 8,
                        max: 12,
                        burn: !0,
                        undead: !0
                    }, {
                        id: "devilkin",
                        name: "Devilkin",
                        lvl: 7,
                        hp: [35, 45],
                        spd: 1,
                        def: 12,
                        atk: 14,
                        min: 8,
                        max: 10
                    }, {
                        id: "misshapen",
                        name: "Misshapen",
                        lvl: 5,
                        hp: [50, 65],
                        spd: 1,
                        def: 8,
                        atk: 12,
                        min: 6,
                        max: 10,
                        type: "l",
                        ranged: !0
                    }, {
                        id: "vilearcher",
                        name: "Vile Archer",
                        lvl: 5,
                        hp: [60, 70],
                        spd: 1,
                        def: 12,
                        atk: 14,
                        min: 10,
                        max: 14,
                        ranged: !0
                    }, {
                        id: "brute",
                        name: "Brute",
                        lvl: 5,
                        hp: [70, 100],
                        spd: 1.5,
                        def: 14,
                        atk: 12,
                        min: 10,
                        max: 20
                    }, {
                        id: "returnedarcher",
                        name: "Returned Archer",
                        lvl: 8,
                        hp: [70, 80],
                        spd: 1,
                        def: 16,
                        atk: 16,
                        min: 8,
                        max: 14,
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "returnedmage",
                        name: "Returned Mage",
                        lvl: 8,
                        hp: [60, 70],
                        spd: 1,
                        def: 16,
                        atk: 16,
                        min: 6,
                        max: 10,
                        type: "r",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "thornbeast",
                        name: "Thorn Beast",
                        lvl: 8,
                        hp: [60, 80],
                        spd: .9,
                        def: 16,
                        atk: 16,
                        min: 8,
                        max: 16,
                        ranged: !0
                    }, {
                        id: "darkstalker",
                        name: "Dark Stalker",
                        lvl: 8,
                        hp: [80, 90],
                        spd: 1,
                        def: 16,
                        atk: 14,
                        min: 12,
                        max: 16
                    }, {
                        id: "bonewarrior",
                        name: "Bone Warrior",
                        lvl: 7,
                        hp: [60, 70],
                        spd: 1,
                        def: 12,
                        atk: 14,
                        min: 10,
                        max: 10,
                        undead: !0
                    }, {
                        id: "darkarcher",
                        name: "Dark Archer",
                        lvl: 7,
                        hp: [60, 70],
                        spd: 1,
                        def: 16,
                        atk: 12,
                        min: 8,
                        max: 12,
                        ranged: !0
                    }, {
                        id: "disfigured",
                        name: "Disfigured",
                        lvl: 8,
                        hp: [60, 70],
                        spd: 1,
                        def: 14,
                        atk: 12,
                        min: 6,
                        max: 10,
                        type: "l",
                        ranged: !0
                    }, {
                        id: "blackrogue",
                        name: "Black Rogue",
                        lvl: 9,
                        hp: [90, 100],
                        spd: 1,
                        def: 18,
                        atk: 16,
                        min: 14,
                        max: 18
                    }, {
                        id: "yeti",
                        name: "Yeti",
                        lvl: 9,
                        hp: [90, 120],
                        spd: 1.5,
                        def: 18,
                        atk: 14,
                        min: 12,
                        max: 26
                    }, {
                        id: "razorspine",
                        name: "Razor Spine",
                        lvl: 9,
                        hp: [80, 100],
                        spd: .9,
                        def: 18,
                        atk: 18,
                        min: 12,
                        max: 18,
                        ranged: !0
                    }, {
                        id: "deathclan",
                        name: "Death Clan",
                        lvl: 10,
                        hp: [100, 120],
                        spd: 1,
                        def: 20,
                        atk: 20,
                        min: 18,
                        max: 22
                    }, {
                        id: "bonemage",
                        name: "Bone Mage",
                        lvl: 10,
                        hp: [90, 100],
                        spd: 1,
                        def: 20,
                        atk: 20,
                        min: 10,
                        max: 14,
                        type: "r",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "bonearcher",
                        name: "Bone Archer",
                        lvl: 9,
                        hp: [90, 100],
                        spd: 1,
                        def: 20,
                        atk: 20,
                        min: 16,
                        max: 18,
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "wraith",
                        name: "Wraith",
                        lvl: 10,
                        hp: [90, 100],
                        spd: 1,
                        def: 22,
                        atk: 20,
                        min: 10,
                        max: 14,
                        burn: !0,
                        undead: !0
                    }, {
                        id: "darkone",
                        name: "Dark One",
                        lvl: 10,
                        hp: [90, 100],
                        spd: 1,
                        def: 20,
                        atk: 20,
                        min: 12,
                        max: 16
                    }, {
                        id: "darkshaman",
                        name: "Dark Shaman",
                        lvl: 11,
                        hp: [100, 120],
                        spd: 1,
                        def: 22,
                        atk: 20,
                        min: 12,
                        max: 16,
                        type: "f",
                        summon: "darkone",
                        ranged: !0
                    }, {
                        id: "tainted",
                        name: "Tainted",
                        lvl: 11,
                        hp: [100, 120],
                        spd: 1,
                        def: 22,
                        atk: 20,
                        min: 10,
                        max: 16,
                        type: "l",
                        ranged: !0
                    }, {
                        id: "ghoul",
                        name: "Ghoul",
                        lvl: 12,
                        hp: [120, 140],
                        spd: 1.5,
                        def: 26,
                        atk: 24,
                        min: 20,
                        max: 24,
                        undead: !0
                    }, {
                        id: "banished",
                        name: "Banished",
                        lvl: 12,
                        hp: [90, 120],
                        spd: 1,
                        def: 22,
                        atk: 22,
                        min: 18,
                        max: 24,
                        type: "f",
                        undead: !0,
                        ranged: !0,
                        hitall: !0
                    }, {
                        id: "sandraider",
                        name: "Sandraider",
                        lvl: 13,
                        hp: [200, 240],
                        spd: .9,
                        def: 32,
                        atk: 34,
                        min: 20,
                        max: 32
                    }, {
                        id: "burningdead",
                        name: "Burning Dead",
                        lvl: 13,
                        hp: [180, 220],
                        spd: 1,
                        def: 34,
                        atk: 32,
                        min: 24,
                        max: 28,
                        undead: !0
                    }, {
                        id: "burningdeadarcher",
                        name: "Burning Dead Archer",
                        lvl: 13,
                        hp: [160, 200],
                        spd: 1,
                        def: 34,
                        atk: 32,
                        min: 20,
                        max: 26,
                        type: "f",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "burningdeadmage",
                        name: "Burning Dead Mage",
                        lvl: 14,
                        hp: [160, 200],
                        spd: 1,
                        def: 34,
                        atk: 34,
                        min: 20,
                        max: 26,
                        type: "r",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "driedcorpse",
                        name: "Dried Corpse",
                        lvl: 13,
                        hp: [180, 200],
                        spd: 1.2,
                        def: 36,
                        atk: 30,
                        min: 20,
                        max: 26,
                        type: "p",
                        undead: !0
                    }, {
                        id: "huntress",
                        name: "Huntress",
                        lvl: 14,
                        hp: [220, 260],
                        spd: .9,
                        def: 38,
                        atk: 38,
                        min: 26,
                        max: 30
                    }, {
                        id: "hollowone",
                        name: "Hollow One",
                        lvl: 15,
                        hp: [240, 280],
                        spd: 1,
                        def: 38,
                        atk: 36,
                        min: 24,
                        max: 30,
                        type: "p",
                        summon: "burningdead",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "carrionbird",
                        name: "Carrion Bird",
                        lvl: 14,
                        hp: [240, 280],
                        spd: 1,
                        def: 38,
                        atk: 34,
                        min: 24,
                        max: 30
                    }, {
                        id: "dungsoldier",
                        name: "Dung Soldier",
                        lvl: 14,
                        hp: [200, 220],
                        spd: 1,
                        def: 34,
                        atk: 38,
                        min: 20,
                        max: 30,
                        type: "l"
                    }, {
                        id: "slinger",
                        name: "Slinger",
                        lvl: 14,
                        hp: [200, 260],
                        spd: 1,
                        def: 40,
                        atk: 40,
                        min: 24,
                        max: 28,
                        ranged: !0
                    }, {
                        id: "horror",
                        name: "Horror",
                        lvl: 14,
                        hp: [200, 260],
                        spd: 1,
                        def: 38,
                        atk: 34,
                        min: 26,
                        max: 30,
                        undead: !0
                    }, {
                        id: "horrorarcher",
                        name: "Horror Archer",
                        lvl: 15,
                        hp: [260, 300],
                        spd: 1,
                        def: 38,
                        atk: 40,
                        min: 26,
                        max: 30,
                        type: "f",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "horrormage",
                        name: "Horror Mage",
                        lvl: 17,
                        hp: [300, 340],
                        spd: 1,
                        def: 42,
                        atk: 46,
                        min: 24,
                        max: 34,
                        type: "r",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "sabercat",
                        name: "Saber Cat",
                        lvl: 15,
                        hp: [300, 320],
                        spd: .9,
                        def: 40,
                        atk: 42,
                        min: 30,
                        max: 32
                    }, {
                        id: "spearcat",
                        name: "Spear Cat",
                        lvl: 15,
                        hp: [280, 340],
                        spd: 1,
                        def: 44,
                        atk: 44,
                        min: 28,
                        max: 32
                    }, {
                        id: "undeadscavenger",
                        name: "Undead Scavenger",
                        lvl: 15,
                        hp: [280, 320],
                        spd: 1,
                        def: 40,
                        atk: 40,
                        min: 26,
                        max: 34,
                        undead: !0
                    }, {
                        id: "decayed",
                        name: "Decayed",
                        lvl: 15,
                        hp: [300, 380],
                        spd: 1.2,
                        def: 44,
                        atk: 44,
                        min: 24,
                        max: 34,
                        type: "p",
                        undead: !0
                    }, {
                        id: "desertwing",
                        name: "Desert Wing",
                        lvl: 15,
                        hp: [280, 360],
                        spd: 1,
                        def: 44,
                        atk: 44,
                        min: 20,
                        max: 34,
                        type: "l"
                    }, {
                        id: "deathbeetle",
                        name: "Death Beetle",
                        lvl: 16,
                        hp: [220, 360],
                        spd: 1,
                        def: 40,
                        atk: 46,
                        min: 26,
                        max: 36,
                        type: "l"
                    }, {
                        id: "sandmaggot",
                        name: "Sand Maggot",
                        lvl: 16,
                        hp: [300, 400],
                        spd: 1,
                        def: 46,
                        atk: 46,
                        min: 24,
                        max: 36,
                        summon: "sandmaggotyoung",
                        type: "p",
                        ranged: !0
                    }, {
                        id: "sandmaggotyoung",
                        name: "Sand Maggot Young",
                        lvl: 16,
                        hp: [280, 300],
                        spd: 1,
                        def: 46,
                        atk: 46,
                        min: 24,
                        max: 28
                    }, {
                        id: "rockworm",
                        name: "Rock Worm",
                        lvl: 17,
                        hp: [360, 440],
                        spd: 1,
                        def: 50,
                        atk: 50,
                        min: 28,
                        max: 38,
                        summon: "rockwormyoung",
                        type: "p",
                        ranged: !0
                    }, {
                        id: "rockwormyoung",
                        name: "Rock Worm Young",
                        lvl: 17,
                        hp: [300, 320],
                        spd: 1,
                        def: 50,
                        atk: 50,
                        min: 26,
                        max: 30
                    }, {
                        id: "scarab",
                        name: "Scarab",
                        lvl: 17,
                        hp: [260, 360],
                        spd: 1,
                        def: 46,
                        atk: 46,
                        min: 28,
                        max: 36,
                        type: "l"
                    }, {
                        id: "plaguebearer",
                        name: "Plague Bearer",
                        lvl: 17,
                        hp: [360, 460],
                        spd: 1.2,
                        def: 50,
                        atk: 50,
                        min: 28,
                        max: 36,
                        type: "p",
                        undead: !0
                    }, {
                        id: "nighttiger",
                        name: "Night Tiger",
                        lvl: 17,
                        hp: [340, 460],
                        spd: .9,
                        def: 50,
                        atk: 50,
                        min: 38,
                        max: 46
                    }, {
                        id: "nightslinger",
                        name: "Night Slinger",
                        lvl: 17,
                        hp: [340, 440],
                        spd: 1,
                        def: 50,
                        atk: 50,
                        min: 36,
                        max: 48,
                        ranged: !0
                    }, {
                        id: "marauder",
                        name: "Marauder",
                        lvl: 17,
                        hp: [440, 500],
                        spd: .9,
                        def: 48,
                        atk: 48,
                        min: 30,
                        max: 52
                    }, {
                        id: "embalmed",
                        name: "Embalmed",
                        lvl: 18,
                        hp: [480, 550],
                        spd: 1.2,
                        def: 54,
                        atk: 54,
                        min: 32,
                        max: 40,
                        type: "p",
                        undead: !0
                    }, {
                        id: "invader",
                        name: "Invader",
                        lvl: 18,
                        hp: [550, 600],
                        spd: .9,
                        def: 52,
                        atk: 52,
                        min: 38,
                        max: 54
                    }, {
                        id: "guardian",
                        name: "Guardian",
                        lvl: 16,
                        hp: [460, 520],
                        spd: 1,
                        def: 46,
                        atk: 42,
                        min: 36,
                        max: 48,
                        type: "p",
                        summon: "horror",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "clawviper",
                        name: "Claw Viper",
                        lvl: 15,
                        hp: [520, 540],
                        spd: .9,
                        def: 48,
                        atk: 48,
                        min: 36,
                        max: 40
                    }, {
                        id: "salamander",
                        name: "Salamander",
                        lvl: 18,
                        hp: [640, 700],
                        spd: .9,
                        def: 58,
                        atk: 58,
                        min: 50,
                        max: 54
                    }, {
                        id: "blunderbore",
                        name: "Blunderbore",
                        lvl: 18,
                        hp: [700, 800],
                        spd: 1.1,
                        def: 62,
                        atk: 54,
                        min: 50,
                        max: 60,
                        stun: [.1, 1]
                    }, {
                        id: "dunebeast",
                        name: "Dune Beast",
                        lvl: 18,
                        hp: [680, 720],
                        spd: 1,
                        def: 62,
                        atk: 60,
                        min: 50,
                        max: 54
                    }, {
                        id: "hellclan",
                        name: "Hell Clan",
                        lvl: 19,
                        hp: [740, 800],
                        spd: 1,
                        def: 62,
                        atk: 62,
                        min: 54,
                        max: 60
                    }, {
                        id: "ghoullord",
                        name: "Ghoul Lord",
                        lvl: 19,
                        hp: [680, 780],
                        spd: 1,
                        def: 54,
                        atk: 56,
                        min: 60,
                        max: 80,
                        type: "f",
                        undead: !0,
                        ranged: !0,
                        hitall: !0
                    }, {
                        id: "specter",
                        name: "Specter",
                        lvl: 19,
                        hp: [680, 740],
                        spd: 1,
                        def: 58,
                        atk: 58,
                        min: 48,
                        max: 52,
                        undead: !0,
                        burn: !0
                    }, {
                        id: "hellcat",
                        name: "Hell Cat",
                        lvl: 19,
                        hp: [680, 740],
                        spd: .9,
                        def: 58,
                        atk: 54,
                        min: 48,
                        max: 50
                    }, {
                        id: "hellslinger",
                        name: "Hell Slinger",
                        lvl: 19,
                        hp: [700, 720],
                        spd: 1,
                        def: 54,
                        atk: 58,
                        min: 44,
                        max: 54,
                        ranged: !0
                    }, {
                        id: "devourer",
                        name: "Devourer",
                        lvl: 19,
                        hp: [700, 800],
                        spd: 1,
                        def: 56,
                        atk: 56,
                        min: 32,
                        max: 48,
                        summon: "rockwormyoung",
                        type: "p",
                        ranged: !0
                    }, {
                        id: "devoureryoung",
                        name: "Devourer Young",
                        lvl: 19,
                        hp: [500, 600],
                        spd: 1,
                        def: 50,
                        atk: 50,
                        min: 32,
                        max: 36
                    }, {
                        id: "steelscarab",
                        name: "Steel Scarab",
                        lvl: 19,
                        hp: [680, 740],
                        spd: 1,
                        def: 54,
                        atk: 56,
                        min: 42,
                        max: 58,
                        type: "l"
                    }, {
                        id: "crusher",
                        name: "Crusher",
                        lvl: 19,
                        hp: [800, 860],
                        spd: 1,
                        def: 62,
                        atk: 58,
                        min: 50,
                        max: 60
                    }, {
                        id: "gorebelly",
                        name: "Gorebelly",
                        lvl: 20,
                        hp: [840, 900],
                        spd: 1.1,
                        def: 66,
                        atk: 58,
                        min: 54,
                        max: 66,
                        stun: [.15, 1.5],
                        hitall: !0
                    }, {
                        id: "unraveler",
                        name: "Unraveler",
                        lvl: 20,
                        hp: [800, 820],
                        spd: 1,
                        def: 60,
                        atk: 50,
                        min: 46,
                        max: 54,
                        type: "p",
                        summon: "horror",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "apparition",
                        name: "Apparition",
                        lvl: 20,
                        hp: [780, 820],
                        spd: 1,
                        def: 66,
                        atk: 62,
                        min: 50,
                        max: 56,
                        undead: !0,
                        burn: !0
                    }, {
                        id: "preserveddead",
                        name: "Preserved Dead",
                        lvl: 23,
                        hp: [900, 940],
                        spd: 1.2,
                        def: 70,
                        atk: 70,
                        min: 60,
                        max: 66,
                        type: "p",
                        undead: !0
                    }, {
                        id: "fetish",
                        name: "Fetish",
                        lvl: 23,
                        hp: [1800, 2e3],
                        spd: 1,
                        def: 120,
                        atk: 80,
                        min: 60,
                        max: 66
                    }, {
                        id: "fetishshaman",
                        name: "Fetish Shaman",
                        lvl: 24,
                        hp: [2200, 2400],
                        spd: 1.2,
                        def: 200,
                        atk: 90,
                        min: 70,
                        max: 75,
                        type: "f",
                        hitall: !0,
                        summon: "fetish",
                        ranged: !0
                    }, {
                        id: "cloudstalker",
                        name: "Cloud Stalker",
                        lvl: 24,
                        hp: [2200, 2500],
                        spd: 1,
                        def: 240,
                        atk: 120,
                        min: 70,
                        max: 76
                    }, {
                        id: "thornedhulk",
                        name: "Thorned Hulk",
                        lvl: 23,
                        hp: [2400, 2600],
                        spd: 1.1,
                        def: 300,
                        atk: 120,
                        min: 70,
                        max: 86,
                        stun: [.15, 2]
                    }, {
                        id: "junglehunter",
                        name: "Jungle Hunter",
                        lvl: 23,
                        hp: [2300, 2500],
                        spd: 1,
                        def: 280,
                        atk: 140,
                        min: 70,
                        max: 80
                    }, {
                        id: "flamespider",
                        name: "Flame Spider",
                        lvl: 24,
                        hp: [2300, 2500],
                        spd: 1,
                        def: 300,
                        atk: 150,
                        min: 74,
                        max: 82,
                        type: "f"
                    }, {
                        id: "poisonspinner",
                        name: "Poison Spinner",
                        lvl: 23,
                        hp: [2300, 2500],
                        spd: 1,
                        def: 300,
                        atk: 180,
                        min: 68,
                        max: 82,
                        type: "p"
                    }, {
                        id: "fiend",
                        name: "Fiend",
                        lvl: 21,
                        hp: [2e3, 2400],
                        spd: 1,
                        def: 180,
                        atk: 90,
                        min: 64,
                        max: 74,
                        type: "l"
                    }, {
                        id: "giantlamprey",
                        name: "Giant lamprey",
                        lvl: 22,
                        hp: [2e3, 2200],
                        spd: 1.2,
                        def: 160,
                        atk: 70,
                        min: 32,
                        max: 48,
                        summon: "giantlampreyyoung",
                        ranged: !0
                    }, {
                        id: "giantlampreyyoung",
                        name: "Giant lamprey Young",
                        lvl: 22,
                        hp: [1600, 1800],
                        spd: 1,
                        def: 150,
                        atk: 65,
                        min: 30,
                        max: 36
                    }, {
                        id: "gloam",
                        name: "Gloam",
                        lvl: 23,
                        hp: [2e3, 2200],
                        spd: 1.1,
                        def: 360,
                        atk: 150,
                        min: 68,
                        max: 76,
                        type: "l",
                        ranged: !0,
                        undead: !0
                    }, {
                        id: "drownedcarcass",
                        name: "Drowned Carcass",
                        lvl: 23,
                        hp: [2400, 2600],
                        spd: 1.4,
                        def: 360,
                        atk: 180,
                        min: 70,
                        max: 90,
                        type: "p",
                        undead: !0
                    }, {
                        id: "riverstalker",
                        name: "River Stalker",
                        lvl: 23,
                        hp: [2e3, 2200],
                        spd: 1,
                        def: 320,
                        atk: 160,
                        min: 60,
                        max: 80,
                        type: "p",
                        ranged: !0
                    }, {
                        id: "bramblehulk",
                        name: "Bramble Hulk",
                        lvl: 24,
                        hp: [2600, 2800],
                        spd: 1.1,
                        def: 400,
                        atk: 160,
                        min: 74,
                        max: 90,
                        stun: [.2, 2]
                    }, {
                        id: "flayer",
                        name: "Flayer",
                        lvl: 24,
                        hp: [2e3, 2200],
                        spd: .8,
                        def: 280,
                        atk: 140,
                        min: 62,
                        max: 70
                    }, {
                        id: "flayershaman",
                        name: "Flayer Shaman",
                        lvl: 25,
                        hp: [2400, 2600],
                        spd: 1.2,
                        def: 320,
                        atk: 160,
                        min: 72,
                        max: 78,
                        type: "f",
                        hitall: !0,
                        summon: "flayer",
                        ranged: !0
                    }, {
                        id: "soulkiller",
                        name: "Soul Killer",
                        lvl: 25,
                        hp: [2200, 2400],
                        spd: 1,
                        def: 360,
                        atk: 180,
                        min: 62,
                        max: 70,
                        ranged: !0
                    }, {
                        id: "soulkillershaman",
                        name: "Soul Killer Shaman",
                        lvl: 26,
                        hp: [2600, 2800],
                        spd: 1.2,
                        def: 400,
                        atk: 200,
                        min: 74,
                        max: 80,
                        type: "f",
                        hitall: !0,
                        summon: "soulkiller",
                        ranged: !0
                    }, {
                        id: "wingednightmare",
                        name: "Winged Nightmare",
                        lvl: 26,
                        hp: [2800, 3200],
                        spd: 1.1,
                        def: 480,
                        atk: 240,
                        min: 80,
                        max: 90,
                        type: "l",
                        ranged: !0,
                        undead: !0
                    }, {
                        id: "waterwatcher",
                        name: "Water Watcher",
                        lvl: 21,
                        hp: [2e3, 2200],
                        spd: 1.4,
                        def: 280,
                        atk: 140,
                        min: 54,
                        max: 70,
                        type: "p",
                        ranged: !0
                    }, {
                        id: "undeadflayer",
                        name: "Undead Flayer",
                        lvl: 25,
                        hp: [2e3, 2200],
                        spd: .9,
                        def: 400,
                        atk: 200,
                        min: 60,
                        max: 80,
                        exploding: !0,
                        undead: !0
                    }, {
                        id: "undeadsoulkiller",
                        name: "Undead Soul Killer",
                        lvl: 26,
                        hp: [2200, 2400],
                        spd: .9,
                        def: 480,
                        atk: 240,
                        min: 64,
                        max: 84,
                        exploding: !0,
                        undead: !0
                    }, {
                        id: "undeadstygiandoll",
                        name: "Undead Stygian Doll",
                        lvl: 27,
                        hp: [2400, 2600],
                        spd: .9,
                        def: 400,
                        atk: 200,
                        min: 70,
                        max: 90,
                        exploding: !0,
                        undead: !0
                    }, {
                        id: "darkshape",
                        name: "Dark Shape",
                        lvl: 25,
                        hp: [2400, 2600],
                        spd: 1,
                        def: 600,
                        atk: 300,
                        min: 70,
                        max: 90,
                        undead: !0,
                        burn: !0
                    }, {
                        id: "gloombat",
                        name: "Gloom Bat",
                        lvl: 25,
                        hp: [2600, 2800],
                        spd: 1,
                        def: 600,
                        atk: 300,
                        min: 70,
                        max: 100,
                        type: "l"
                    }, {
                        id: "hellbuzzard",
                        name: "Hell Buzzard",
                        lvl: 25,
                        hp: [2800, 3e3],
                        spd: 1,
                        def: 600,
                        atk: 280,
                        min: 90,
                        max: 100,
                        undead: !0
                    }, {
                        id: "zakarumite",
                        name: "Zakarumite",
                        lvl: 24,
                        hp: [2600, 2800],
                        spd: 1,
                        def: 560,
                        atk: 260,
                        min: 80,
                        max: 92
                    }, {
                        id: "treelurker",
                        name: "Tree Lurker",
                        lvl: 25,
                        hp: [2600, 2800],
                        spd: .8,
                        def: 600,
                        atk: 280,
                        min: 80,
                        max: 92
                    }, {
                        id: "doomape",
                        name: "Doom Ape",
                        lvl: 25,
                        hp: [2800, 3e3],
                        spd: 1,
                        def: 500,
                        atk: 300,
                        min: 88,
                        max: 92
                    }, {
                        id: "thrasher",
                        name: "Thrasher",
                        lvl: 27,
                        hp: [3600, 4e3],
                        spd: 1.1,
                        def: 840,
                        atk: 300,
                        min: 95,
                        max: 110,
                        stun: [.2, 3]
                    }, {
                        id: "faithful",
                        name: "Faithful",
                        lvl: 26,
                        hp: [3200, 3600],
                        spd: 1,
                        def: 760,
                        atk: 380,
                        min: 90,
                        max: 100
                    }, {
                        id: "sexton",
                        name: "Sexton",
                        lvl: 26,
                        hp: [3200, 3600],
                        spd: 1,
                        def: 700,
                        atk: 380,
                        min: 80,
                        max: 90,
                        type: "c",
                        summon: "faithful",
                        hitall: !0,
                        ranged: !0
                    }, {
                        id: "hellswarm",
                        name: "Hell Swarm",
                        lvl: 26,
                        hp: [4e3, 4400],
                        spd: 1,
                        def: 800,
                        atk: 300,
                        min: 70,
                        max: 100
                    }, {
                        id: "fleshhunter",
                        name: "Flesh Hunter",
                        lvl: 27,
                        hp: [3600, 3800],
                        spd: .9,
                        def: 760,
                        atk: 380,
                        min: 90,
                        max: 100
                    }, {
                        id: "wailingbeast",
                        name: "Wailing Beast",
                        lvl: 27,
                        hp: [3600, 3800],
                        spd: 1,
                        def: 800,
                        atk: 400,
                        min: 90,
                        max: 100,
                        stun: [.4, .5]
                    }, {
                        id: "spidermagus",
                        name: "Spider Magus",
                        lvl: 27,
                        hp: [3600, 3800],
                        spd: 1,
                        def: 800,
                        atk: 420,
                        min: 80,
                        max: 100,
                        type: "p"
                    }, {
                        id: "nightlord",
                        name: "Night Lord",
                        lvl: 27,
                        hp: [3400, 3800],
                        spd: 1.1,
                        def: 800,
                        atk: 420,
                        min: 90,
                        max: 140,
                        type: "f",
                        hitall: !0,
                        ranged: !0,
                        undead: !0
                    }, {
                        id: "preserveddead",
                        name: "Preserved Dead",
                        lvl: 27,
                        hp: [4e3, 4400],
                        spd: 1.4,
                        def: 1e3,
                        atk: 460,
                        min: 80,
                        max: 100,
                        type: "p"
                    }, {
                        id: "horadrimancient",
                        name: "Horadrim Ancient",
                        lvl: 27,
                        hp: [4e3, 4200],
                        spd: 1,
                        def: 1e3,
                        atk: 400,
                        min: 90,
                        max: 100,
                        type: "p",
                        summon: "horror",
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "stygianwatcher",
                        name: "Stygian Watcher",
                        lvl: 26,
                        hp: [2800, 3600],
                        spd: 1.4,
                        def: 700,
                        atk: 340,
                        min: 70,
                        max: 90,
                        type: "p",
                        ranged: !0
                    }, {
                        id: "zealot",
                        name: "Zealot",
                        lvl: 28,
                        hp: [4e3, 4400],
                        spd: 1,
                        def: 800,
                        atk: 420,
                        min: 100,
                        max: 110
                    }, {
                        id: "cantor",
                        name: "Cantor",
                        lvl: 27,
                        hp: [3600, 4e3],
                        spd: 1,
                        def: 800,
                        atk: 450,
                        min: 90,
                        max: 100,
                        type: "c",
                        summon: "zealot",
                        hitall: !0,
                        ranged: !0
                    }, {
                        id: "serpentmagus",
                        name: "Serpent Magus",
                        lvl: 28,
                        hp: [4e3, 4800],
                        spd: .9,
                        def: 1e3,
                        atk: 550,
                        min: 100,
                        max: 130,
                        type: "c"
                    }, {
                        id: "bonescarab",
                        name: "Bone Scarab",
                        lvl: 28,
                        hp: [3600, 4400],
                        spd: 1,
                        def: 1e3,
                        atk: 530,
                        min: 90,
                        max: 130,
                        type: "l"
                    }, {
                        id: "blooddiver",
                        name: "Blood Diver",
                        lvl: 28,
                        hp: [3600, 4400],
                        spd: 1,
                        def: 1e3,
                        atk: 480,
                        min: 70,
                        max: 120,
                        type: "l"
                    }, {
                        id: "flesharcher",
                        name: "Flesh Archer",
                        lvl: 28,
                        hp: [3600, 4400],
                        spd: 1,
                        def: 1e3,
                        atk: 500,
                        min: 100,
                        max: 120,
                        undead: !0,
                        ranged: !0
                    }, {
                        id: "templeguard",
                        name: "Temple Guard",
                        lvl: 29,
                        hp: [4400, 5200],
                        spd: 1,
                        def: 1200,
                        atk: 600,
                        min: 100,
                        max: 140
                    }, {
                        id: "infidel",
                        name: "Infidel",
                        lvl: 29,
                        hp: [4800, 5200],
                        spd: 1,
                        def: 1200,
                        atk: 620,
                        min: 110,
                        max: 120
                    }, {
                        id: "heirophant",
                        name: "Heirophant",
                        lvl: 29,
                        hp: [4400, 4800],
                        spd: 1,
                        def: 1100,
                        atk: 650,
                        min: 100,
                        max: 120,
                        type: "c",
                        summon: "infidel",
                        hitall: !0,
                        ranged: !0
                    }, {
                        id: "cadaver",
                        name: "Cadaver",
                        lvl: 30,
                        hp: [5600, 6e3],
                        spd: 1.8,
                        def: 1400,
                        atk: 700,
                        min: 100,
                        max: 140,
                        type: "p",
                        undead: !0
                    }, {
                        id: "darklord",
                        name: "Dark Lord",
                        lvl: 29,
                        hp: [5e3, 5600],
                        spd: 1.1,
                        def: 1200,
                        atk: 700,
                        min: 120,
                        max: 180,
                        type: "f",
                        hitall: !0,
                        ranged: !0,
                        undead: !0
                    }, {
                        id: "bloodlord",
                        name: "Blood Lord",
                        lvl: 30,
                        hp: [6e3, 6400],
                        spd: 1.1,
                        def: 1600,
                        atk: 700,
                        min: 140,
                        max: 200,
                        type: "f",
                        hitall: !0,
                        ranged: !0,
                        undead: !0
                    }, {
                        id: "mauler",
                        name: "Mauler",
                        lvl: 30,
                        hp: [7e3, 8e3],
                        spd: 1.1,
                        def: 1800,
                        atk: 800,
                        min: 140,
                        max: 160,
                        stun: [.2, 3]
                    }, {
                        id: "councilmember",
                        name: "Council Member",
                        lvl: 31,
                        hp: [8e3, 9e3],
                        spd: 1,
                        def: 2e3,
                        atk: 1e3,
                        min: 140,
                        max: 160
                    }],
                    H4 = [
                        [{
                            id: "encampment",
                            name: "Rogue Encampment",
                            m: [],
                            home: !0
                        }, {
                            id: "bloodmore",
                            name: "Blood Moor",
                            m: ["fallen", "zombie", "quillrat"]
                        }, {
                            id: "denofevil",
                            name: "Den of Evil",
                            m: ["fallen", "fallenshaman", "zombie", "beast"],
                            special: {
                                name: "Corpsefire",
                                type: "zombie",
                                modif: ["hp_4", "t_f"],
                                lvl: 1
                            }
                        }, {
                            id: "coldplains",
                            name: "Cold Plains",
                            m: ["fallen", "fallenshaman", "beast", "darkhunter"],
                            special: {
                                name: "Bishibosh",
                                type: "fallenshaman",
                                modif: ["hp_2", "dmg_2"],
                                lvl: 1
                            }
                        }, {
                            id: "cave",
                            name: "Cave",
                            m: ["fallen", "fallenshaman", "skeleton", "zombie", "darkhunter"],
                            special: {
                                name: "Coldcrow",
                                type: "darkhunter",
                                modif: ["hp_2", "t_c"],
                                lvl: 1
                            }
                        }, {
                            id: "burialgrounds",
                            name: "Burial Grounds",
                            m: ["skeleton", "hungrydead"],
                            special: {
                                name: "Blood Raven",
                                type: "darkhunter",
                                modif: ["hp_4", "t_f", "sum_hungrydead"],
                                lvl: 1
                            }
                        }, {
                            id: "crypt",
                            name: "Crypt",
                            m: ["skeleton", "hungrydead"],
                            special: {
                                name: "Bone Breaker",
                                type: "skeleton",
                                modif: ["hp_4", "dmg_4"],
                                lvl: 1
                            }
                        }, {
                            id: "mausoleum",
                            name: "Mausoleum",
                            m: ["skeleton", "hungrydead"]
                        }, {
                            id: "stonyfield",
                            name: "Stony Field",
                            m: ["fallen", "fallenshaman", "skeleton", "hungrydead", "darkhunter", "moonclan"],
                            special: {
                                id: "rakanishu",
                                name: "Rakanishu",
                                type: "carver",
                                modif: ["hp_4", "t_l", "dmg_2"],
                                lvl: 2
                            }
                        }, {
                            id: "undergroundpassage",
                            name: "Underground Passage",
                            m: ["fallenshaman", "skeletonarcher", "vilehunter", "moonclan", "misshapen"]
                        }, {
                            id: "darkwood",
                            name: "Dark Wood",
                            m: ["carver", "carvershaman", "skeletonarcher", "vilehunter", "spikefiend", "brute"],
                            special: {
                                name: "Treehead Woodfist",
                                type: "brute",
                                modif: ["hp_2", "dmg_2"],
                                lvl: 1
                            }
                        }, {
                            id: "tristram",
                            name: "Tristram",
                            m: ["carver", "carvershaman", "skeletonarcher", "nightclan", "returned"],
                            special: {
                                name: "Griswold",
                                type: "returned",
                                modif: ["hp_8", "t_f", "dmg_2"],
                                lvl: 2
                            }
                        }, {
                            id: "blackmarsh",
                            name: "Black Marsh",
                            m: ["carver", "carvershaman", "skeletonarcher", "nightclan", "returned", "brute"]
                        }, {
                            id: "forgottentower",
                            name: "Forgotten Tower",
                            m: ["bloodclan", "darkranger", "ghost", "devilkin"],
                            special: {
                                name: "The Countess",
                                type: "darkranger",
                                modif: ["hp_4", "t_f", "dmg_2"],
                                lvl: 2
                            }
                        }, {
                            id: "hole",
                            name: "The Hole",
                            m: ["misshapen", "vilearcher", "carver", "carvershaman", "brute"]
                        }, {
                            id: "tamoe",
                            name: "Tamoe Highland",
                            m: ["returnedarcher", "returnedmage", "thornbeast", "darkstalker", "devilkin", "carver", "carvershaman"]
                        }, {
                            id: "pit",
                            name: "The Pit",
                            m: ["devilkin", "devilkinshaman", "darkstalker", "darkarcher", "bonewarrior"]
                        }, {
                            id: "monastery",
                            name: "Monastery Gate",
                            m: ["returnedarcher", "returnedmage", "darkstalker", "disfigured"]
                        }, {
                            id: "outercloister",
                            name: "Outer Cloister",
                            m: ["blackrogue", "yeti", "razorspine", "devilkin", "devilkinshaman"]
                        }, {
                            id: "barracks",
                            name: "Barracks",
                            m: ["deathclan", "bonemage", "bonearcher", "blackrogue", "devilkin", "devilkinshaman"],
                            special: {
                                name: "The Smith",
                                type: "deathclan",
                                modif: ["hp_4", "t_f", "dmg_1", "sp_2"],
                                lvl: 2
                            }
                        }, {
                            id: "jail",
                            name: "Jail",
                            m: ["deathclan", "bonemage", "bonearcher", "wraith", "darkone", "tainted"],
                            special: {
                                name: "Pitspawn Fouldog",
                                type: "tainted",
                                modif: ["hp_4", "t_c", "dmg_2"],
                                lvl: 1
                            }
                        }, {
                            id: "innercloister",
                            name: "Inner Cloister",
                            m: ["darkone", "blackarcher", "bonemage"]
                        }, {
                            id: "cathedral",
                            name: "Cathedral",
                            m: ["wraith", "darkone", "darkshaman", "tainted"],
                            special: {
                                name: "Bone Ash",
                                type: "bonemage",
                                modif: ["hp_4", "t_c", "dmg_2"],
                                lvl: 1
                            }
                        }, {
                            id: "catacombs",
                            name: "Catacombs",
                            m: ["tainted", "darkone", "darkshaman", "ghoul", "banished"],
                            special: {
                                id: "andariel",
                                name: "Andariel",
                                type: "darkarcher",
                                modif: ["hp_8", "t_p", "dmg_2", "hitall"],
                                lvl: 3
                            }
                        }],
                        [{
                            id: "lutgolhein",
                            name: "Lut Gholein",
                            m: [],
                            home: !0
                        }, {
                            id: "sewers",
                            name: "Sewers",
                            m: ["sandraider", "burningdead", "burningdeadarcher", "driedcorpse", "burningdeadmage", "huntress"],
                            special: {
                                name: "Radament",
                                type: "hollowone",
                                modif: ["hp_8", "t_p", "sum_burningdead", "hitall"],
                                lvl: 2
                            }
                        }, {
                            id: "rockywaste",
                            name: "Rocky Waste",
                            m: ["carrionbird", "dungsoldier", "huntress", "slinger"]
                        }, {
                            id: "stonytomb",
                            name: "Stony Tomb",
                            m: ["burningdeadmage", "horror", "dungsoldier"],
                            special: {
                                name: "Creeping Feature",
                                type: "horror",
                                modif: ["hp_4", "t_c", "dmg_4"],
                                lvl: 1
                            }
                        }, {
                            id: "dryhills",
                            name: "Dry Hills",
                            m: ["sabercat", "spearcat", "undeadscavenger"]
                        }, {
                            id: "hallsofthedead",
                            name: "Halls of the Dead",
                            m: ["horror", "hollowone", "decayed", "desertwing", "spearcat", "driedcorpse"],
                            special: {
                                name: "Blood Witch the Wild",
                                type: "huntress",
                                modif: ["hp_4", "sp_1.5", "t_c", "dmg_2"],
                                lvl: 1
                            }
                        }, {
                            id: "faroasis",
                            name: "Far Oasis",
                            m: ["deathbeetle", "undeadscavenger", "sandmaggot"],
                            special: {
                                name: "Bettleburst",
                                type: "deathbeetle",
                                modif: ["hp_4", "dmg_2", "res_0.5"],
                                lvl: 1
                            }
                        }, {
                            id: "maggotlair",
                            name: "Maggot Lair",
                            m: ["sandmaggot", "rockworm", "scarab", "deathbeetle"],
                            special: {
                                name: "Coldworm the Burrower",
                                type: "sandmaggot",
                                modif: ["hp_8", "dmg_2", "t_c", "res_0.5", "sum_sandmaggot", "hitall"],
                                lvl: 2
                            }
                        }, {
                            id: "lostcity",
                            name: "Lost City",
                            m: ["plaguebearer", "nightslinger", "nighttiger", "marauder"],
                            special: {
                                name: "Dark Elder",
                                type: "plaguebearer",
                                modif: ["hp_4", "dmg_2", "sp_2", "res_0.5"],
                                lvl: 1
                            }
                        }, {
                            id: "ancienttunnels",
                            name: "Ancient Tunnels",
                            m: ["plaguebearer", "embalmed", "horrormage", "invader"]
                        }, {
                            id: "clawvipertemple",
                            name: "Claw Viper Temple",
                            m: ["guardian", "clawviper", "salamander", "embalmed"],
                            special: {
                                name: "Fangskin",
                                type: "salamander",
                                modif: ["hp_4", "dmg_2", "sp_1.5", "t_l"],
                                lvl: 2
                            }
                        }, {
                            id: "harem",
                            name: "Harem",
                            m: ["blunderbore", "invader", "dunebeast", "horrorarcher", "horrormage"]
                        }, {
                            id: "palacecellar",
                            name: "Palace Cellar",
                            m: ["blunderbore", "invader", "dunebeast", "horrorarcher", "horrormage"],
                            special: {
                                name: "Fire Eye",
                                type: "invader",
                                modif: ["hp_4", "dmg_2", "sp_1.5", "t_f"],
                                lvl: 1
                            }
                        }, {
                            id: "arcanesanctuary",
                            name: "Arcane Sanctuary",
                            m: ["hellclan", "ghoullord", "specter"],
                            special: {
                                name: "The Summoner",
                                type: "ghoullord",
                                modif: ["hp_2", "dmg_4", "t_f", "res_0.5", "hitall"],
                                lvl: 2
                            }
                        }, {
                            id: "canyonofthemagi",
                            name: "Canyon of the Magi",
                            m: ["hellcat", "hellslinger", "devourer", "steelscarab", "crusher"]
                        }, {
                            id: "talrashastomb",
                            name: "Tal Rashas Tomb",
                            m: ["gorebelly", "steelscarab", "unraveler", "ghoullord", "apparition", "preserveddead"],
                            special: {
                                id: "duriel",
                                name: "Duriel",
                                type: "gorebelly",
                                modif: ["hp_12", "dmg_4", "stun_0.2_1", "t_f", "hitall"],
                                lvl: 3
                            }
                        }],
                        [{
                            id: "kurastdocks",
                            name: "Kurast Docks",
                            m: [],
                            home: !0
                        }, {
                            id: "spiderforest",
                            name: "Spider Forest",
                            m: ["fetish", "fetishshaman", "cloudstalker", "thornedhulk", "junglehunter"],
                            special: {
                                id: "flamespike",
                                name: "Flamespike",
                                type: "fetish",
                                modif: ["hp_16", "dmg_4", "t_f", "hitall"],
                                lvl: 1
                            }
                        }, {
                            id: "arachnidlair",
                            name: "Arachnid Lair",
                            m: ["flamespider", "poisonspinner", "fiend", "giantlamprey", "giantlampreyyoung"]
                        }, {
                            id: "spidercavern",
                            name: "Spider Cavern",
                            m: ["flamespider", "poisonspinner", "fiend", "giantlamprey", "giantlampreyyoung"],
                            special: {
                                id: "sszarktheburning",
                                name: "Sszark The Burning",
                                type: "flamespider",
                                modif: ["hp_8", "dmg_4", "stun_0.2_1"],
                                lvl: 2
                            }
                        }, {
                            id: "greatmarsh",
                            name: "Great Marsh",
                            m: ["fetish", "fetishshaman", "gloam", "drownedcarcass", "riverstalker", "bramblehulk"]
                        }, {
                            id: "flayerjungle",
                            name: "Flayer Jungle",
                            m: ["flayer", "flayershaman", "soulkiller", "soulkillershaman", "wingednightmare"],
                            special: {
                                id: "stormtree",
                                name: "Storm Tree",
                                type: "thrasher",
                                modif: ["hp_8", "dmg_2", "sp_2", "t_l"],
                                lvl: 1
                            }
                        }, {
                            id: "swampypit",
                            name: "Swampy Pit",
                            m: ["gloam", "fiend", "waterwatcher", "undeadsoulkiller", "undeadstygiandoll", "preserveddead"]
                        }, {
                            id: "flayerdungeon",
                            name: "Flayer Dungeon",
                            m: ["flayer", "flayershaman", "soulkiller", "soulkillershaman", "undeadflayer", "darkshape", "gloombat", "waterwatcher"],
                            special: {
                                id: "endugu",
                                name: "Witch Doctor Endugu",
                                type: "flayershaman",
                                modif: ["hp_8", "dmg_2", "res_0.5", "hitall"],
                                lvl: 2
                            }
                        }, {
                            id: "lowerkurast",
                            name: "Lower Kurast",
                            m: ["hellbuzzard", "zakarumite", "treelurker", "doomape"]
                        }, {
                            id: "kurastbazaar",
                            name: "Kurast Bazaar",
                            m: ["thrasher", "faithful", "zakarumite", "sexton", "hellswarm"]
                        }, {
                            id: "disusedfane",
                            name: "Disused Fane",
                            m: ["fleshhunter", "wailingbeast", "spidermagus", "nightlord"]
                        }, {
                            id: "ruinedtemple",
                            name: "Ruined Temple",
                            m: ["fleshhunter", "spidermagus", "nightlord", "wailingbeast"],
                            special: {
                                id: "sarina",
                                name: "Battlemaid Sarina",
                                type: "fleshhunter",
                                modif: ["hp_8", "dmg_2", "sp_2", "res_0.5"],
                                lvl: 2
                            }
                        }, {
                            id: "sewers2",
                            name: "Sewers",
                            m: ["preserveddead", "horror", "horadrimancient", "gloombat", "undeadsoulkiller", "stygianwatcher"],
                            special: {
                                id: "icehawk",
                                name: "Icehawk Riftwing",
                                type: "gloombat",
                                modif: ["hp_8", "dmg_2", "t_c"],
                                lvl: 1
                            }
                        }, {
                            id: "upperkurast",
                            name: "Upper Kurast",
                            m: ["zealot", "faithful", "cantor", "wingednightmare", "thrasher"]
                        }, {
                            id: "forgottentemple",
                            name: "Forgotten Temple",
                            m: ["serpentmagus", "bonescarab", "blooddiver", "flesharcher"]
                        }, {
                            id: "forgottenreliquary",
                            name: "Forgotten Reliquary",
                            m: ["wailingbeast", "fleshhunter", "spidermagus", "nightlord"]
                        }, {
                            id: "kurastcauseway",
                            name: "Kurast Causeway",
                            m: ["zealot", "heirophant", "templeguard", "infidel"]
                        }, {
                            id: "disusedreliquary",
                            name: "Disused Reliquary",
                            m: ["flesharcher", "serpentmagus", "bonescarab", "blooddiver"],
                            special: {
                                id: "ismail",
                                name: "Ismail Vilehand",
                                type: "councilmember",
                                modif: ["hp_2", "dmg_2", "sp_1.5"],
                                lvl: 2
                            }
                        }, {
                            id: "ruinedfane",
                            name: "Ruined Fane",
                            m: ["flesharcher", "serpentmagus", "bonescarab", "blooddiver"],
                            special: {
                                id: "geleb",
                                name: "Geleb Flamefinger",
                                type: "councilmember",
                                modif: ["hp_2", "dmg_2", "t_f", "hitall"],
                                lvl: 2
                            }
                        }, {
                            id: "travincal",
                            name: "Travincal",
                            m: ["nightlord", "heirophant", "zealot", "councilmember", "waterwatcher"],
                            special: {
                                id: "toorc",
                                name: "Toorc Icefirst",
                                type: "councilmember",
                                modif: ["hp_4", "dmg_2", "t_c", "res_0.5"],
                                lvl: 2
                            }
                        }, {
                            id: "duranceofhate",
                            name: "Durance of Hate",
                            m: ["undeadstygiandoll", "cadaver", "darklord", "mauler", "bloodlord", "councilmember"],
                            special: {
                                id: "mephisto",
                                name: "Mephisto",
                                type: "councilmember",
                                modif: ["hp_8", "dmg_2", "t_c", "res_0.5", "hitall"],
                                lvl: 3
                            }
                        }]
                    ],
                    j4 = {
                        t: t => "f" == t ? '<span class="text-danger">Fire enchanted</span>' : "l" == t ? '<span class="text-warning">Lightning enchanted</span>' : "c" == t ? '<span class="text-primary">Cold enchanted</span>' : "p" == t ? '<span class="text-success">Poison enchanted</span>' : "",
                        dmg: t => "Extra strong",
                        sp: t => "Extra fast",
                        res: t => "Magic resistant"
                    },
                    G4 = [{
                        id: 0,
                        name: "Adventurer",
                        desc: "Starting class.",
                        reqlvl: 0,
                        reqclass: 0,
                        req: [{
                            desc: () => "No requirements",
                            check: () => !0
                        }],
                        skillsCat: [{
                            id: "apprcombat",
                            name: "Combat",
                            skills: [{
                                id: "discipline",
                                name: "Discipline",
                                lvl: 1,
                                desc: t => "[passive] Increase damages.<hr/>Current level:<br/>Bonus: " + Math.floor(100 * t.disciplineBonus()) + "%.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.disciplineBonus(1)) + "%."
                            }, {
                                id: "parry",
                                name: "Parry",
                                lvl: 6,
                                desc: t => "Increase block rate.<br/>Current level:<br/>Bonus: " + Math.floor(100 * t.parryBonus()) + "%.<br/>Duration: " + t.parryDuration() + "s.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.parryBonus(1)) + "%.<br/>Duration: " + t.parryDuration(1) + "s.",
                                cost: () => 5,
                                duration: t => t.parryDuration(),
                                cooldown: 1
                            }]
                        }, {
                            id: "apprmagic",
                            name: "Magic",
                            skills: [{
                                id: "heal",
                                name: "Restore life",
                                lvl: 1,
                                desc: t => "Heal.<br/>Current level:<br/>Heal: " + t.healBonus() + "<hr/>Next level:<br/>Heal: " + t.healBonus(1) + ".",
                                cost: () => 5,
                                cooldown: 5,
                                effect: t => {
                                    t.getData().life += t.healBonus(), t.getData().life > t.maxLife() && (t.getData().life = t.maxLife())
                                }
                            }, {
                                id: "magicmissile",
                                name: "Magic Missile",
                                lvl: 6,
                                desc: t => "Launch a magic missile, dealing magical damage to 1 monster.<br/>Current level:<br/>Damage inflicted: " + t.magicMissileDmg() + "<hr/>Next level:<br/>Damage inflicted: " + t.magicMissileDmg(1) + ".",
                                cost: () => 2,
                                cooldown: 2,
                                effect: t => {
                                    t.hitM(t.magicMissileDmg(), "m", !0)
                                }
                            }, {
                                id: "shock",
                                name: "Shock",
                                lvl: 6,
                                desc: t => "Create a wave of electrical energy that deals damage and has 25% chances to stun all monsters around.<br/>Current level:<br/>Damage inflicted: " + t.shockDmg() + "<br/>Stun duration: " + Math.floor(10 * t.shockStunDuration()) / 10 + "s.<hr/>Next level:<br/>Damage inflicted: " + t.shockDmg(1) + "<br/>Stun duration: " + Math.floor(10 * t.shockStunDuration(1)) / 10 + "s.<hr/>",
                                cost: () => 8,
                                cooldown: 2,
                                effect: t => {
                                    t.hitM(t.shockDmg(), "l", !0, !0);
                                    for (let n of t.getData().m) he.roll(.25) && (n.stunned = t.shockStunDuration())
                                }
                            }, {
                                id: "summoncrow",
                                name: "Summon Crow",
                                lvl: 12,
                                campAllowed: !0,
                                desc: t => "Summon a crow to fight for you.<br/>Current level:<br/>Damage: " + t.crowMinDmg() + "-" + t.crowMaxDmg() + "<br/>Attack rating: " + t.crowAtkRating() + "<br/>Speed: " + t.crowSpeed() + " (" + t.strSpeed(t.crowSpeed()) + ")<br/>Defense: " + t.crowDef() + "<br/>Life: " + t.crowMaxLife() + "<hr/>Next level:<br/>Damage: " + t.crowMinDmg(1) + "-" + t.crowMaxDmg(1) + "<br/>Attack rating: " + t.crowAtkRating(1) + "<br/>Speed: " + t.crowSpeed(1) + " (" + t.strSpeed(t.crowSpeed(1)) + ")<br/>Defense: " + t.crowDef(1) + "<br/>Life: " + t.crowMaxLife(1) + ".",
                                cost: t => 10,
                                cooldown: 2,
                                effect: t => {
                                    t.summon("crow")
                                }
                            }]
                        }]
                    }, {
                        id: 1,
                        name: "Barbarian",
                        desc: "Specialize in combat.<br/>Gain +15 to vitality.",
                        reqlvl: 6,
                        reqclass: 0,
                        onSelect: t => t.up("vit", 15),
                        req: [{
                            desc: t => "Max damage: 25 (" + t.maxDamage().ph + ")",
                            check: t => t.maxDamage().ph >= 25
                        }, {
                            desc: t => "Monsters killed: 400 (" + t.getData().stats.run.killed + ")",
                            check: t => t.getData().stats.run.killed >= 400
                        }],
                        skillsCat: [{
                            id: "masteries",
                            name: "Masteries",
                            skills: [{
                                id: "amas",
                                name: "Axe mastery",
                                lvl: 1,
                                desc: t => "[passive] Increase damages and attack rating when using Axes.<hr/>Current level:<br/>Bonus: " + Math.floor(100 * t.amasBonus()) + "%.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.amasBonus(1)) + "%."
                            }, {
                                id: "smas",
                                name: "Sword mastery",
                                lvl: 1,
                                desc: t => "[passive] Increase damages and attack rating when using Swords.<hr/>Current level:<br/>Bonus: " + Math.floor(100 * t.smasBonus()) + "%.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.smasBonus(1)) + "%."
                            }, {
                                id: "mmas",
                                name: "Mace mastery",
                                lvl: 1,
                                desc: t => "[passive] Increase damages and attack rating when using Maces.<hr/>Current level:<br/>Bonus: " + Math.floor(100 * t.mmasBonus()) + "%.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.mmasBonus(1)) + "%."
                            }, {
                                id: "ironskin",
                                name: "Iron Skin",
                                lvl: 6,
                                desc: t => "[passive] Increase defense.<hr/>Current level:<br/>Bonus: " + Math.floor(100 * t.ironSkinBonus()) + "%.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.ironSkinBonus(1)) + "%."
                            }, {
                                id: "resistance",
                                name: "Natural Resistance",
                                lvl: 12,
                                desc: t => "[passive] Increase resistances to all elements.<hr/>Current level:<br/>Bonus: " + t.resistanceBonus() + "%.<hr/>Next level:<br/>Bonus: " + t.resistanceBonus(1) + "%."
                            }]
                        }, {
                            id: "combat",
                            name: "Combat",
                            skills: [{
                                id: "bash",
                                name: "Bash",
                                lvl: 6,
                                desc: t => "Increase damages and 25% chances to stun monster for a short period.<br/>Current level:<br/>Bonus: " + Math.floor(100 * t.bashBonus()) + "%.<br/>Stun duration: " + Math.floor(10 * t.bashStunDuration()) / 10 + "s.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.bashBonus(1)) + "%.<br/>Stun duration: " + Math.floor(10 * t.bashStunDuration(1)) / 10 + "s.",
                                cost: () => 2,
                                effect: t => {
                                    t.hitM(t.bashBonus(), "ph", !1), he.roll(.25) && (t.getData().m[0].stunned = t.bashStunDuration())
                                },
                                duration: t => t.bashStunDuration() + 1,
                                cooldown: 1
                            }, {
                                id: "concentrate",
                                name: "Concentrate",
                                lvl: 12,
                                desc: t => "Increase damages and attack rating.<br/>Current level:<br/>Bonus: " + Math.floor(100 * t.concentrateBonus()) + "%.<br/>Duration: " + t.concentrateDuration() + "s.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.concentrateBonus(1)) + "%.<br/>Duration: " + t.concentrateDuration(1) + "s.",
                                cost: () => 5,
                                duration: t => t.concentrateDuration(),
                                cooldown: 1
                            }, {
                                id: "frenzy",
                                name: "Frenzy",
                                lvl: 18,
                                desc: t => "Increase damages, attack rating and attack speed.<br/>Current level:<br/>Bonus: " + Math.floor(100 * t.frenzyBonus()) + "%.<br/>Duration: " + t.frenzyDuration() + "s.<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.frenzyBonus(1)) + "%.<br/>Duration: " + t.frenzyDuration(1) + "s.",
                                cost: () => 5,
                                duration: t => t.frenzyDuration(),
                                cooldown: 1
                            }]
                        }]
                    }, {
                        id: 2,
                        name: "Sorceress",
                        desc: "Specialize in Magic.<br/>Gain +15 to energy.<br/>Can auto-cast 1 spell.",
                        reqlvl: 12,
                        reqclass: 0,
                        autocast: 1,
                        onSelect: t => t.up("ene", 15),
                        req: [{
                            desc: t => "Max mana: 50 (" + t.maxMana() + ")",
                            check: t => t.maxMana() >= 50
                        }, {
                            desc: t => {
                                var n;
                                return "Magic missile cast: 50 (" + ((null === (n = t.getData().stats.run) || void 0 === n ? void 0 : n.skills.magicmissile) || 0) + ")"
                            },
                            check: t => {
                                var n;
                                return ((null === (n = t.getData().stats.run) || void 0 === n ? void 0 : n.skills.magicmissile) || 0) >= 50
                            }
                        }],
                        skillsCat: [{
                            id: "fire",
                            name: "Fire",
                            skills: [{
                                id: "heat",
                                name: "Heat",
                                lvl: 1,
                                desc: t => "[passive] Increase mana regeneration.<br/>Current level:<br/>Bonus: " + Math.floor(100 * t.heatBonus()) + "%<hr/>Next level:<br/>Bonus: " + Math.floor(100 * t.heatBonus(1)) + "%."
                            }, {
                                id: "fireball",
                                name: "Fireball",
                                lvl: 12,
                                desc: t => "Launch a fire ball, dealing fire damage to all monsters around.<br/>Current level:<br/>Damage inflicted: " + t.fireballDmg() + "<hr/>Next level:<br/>Damage inflicted: " + t.fireballDmg(1) + ".",
                                cost: t => t.fireballCost(),
                                cooldown: 2,
                                effect: t => {
                                    t.hitM(t.fireballDmg(), "f", !0, !0)
                                }
                            }, {
                                id: "firemastery",
                                name: "Fire Mastery",
                                lvl: 18,
                                campAllowed: !0,
                                desc: t => "Increase efficiency of active fire spells for every cast (permanent).<br/>Current level:<br/>Bonus: +" + Math.floor(100 * t.fireMasteryBonus()) / 100 + "%<br/>Total Bonus: +" + Math.floor(100 * t.fireMasteryTotalBonus()) / 100 + "% (" + (t.getData().stats.total.skills.firemastery || 0) + ")<hr/>Next level:<br/>Bonus: +" + Math.floor(100 * t.fireMasteryBonus(1)) / 100 + "%.",
                                cost: () => 10,
                                cooldown: 2
                            }, {
                                id: "meteor",
                                name: "Meteor",
                                lvl: 24,
                                desc: t => "Launch meteors at your enemies, dealing fire damage to all monsters around during a period.<br/>Current level:<br/>Damage inflicted: " + t.meteorDmg() + " + " + t.meteorLengthDmg() + "/s during 5s<hr/>Next level:<br/>Damage inflicted: " + t.meteorDmg(1) + " + " + t.meteorLengthDmg(1) + "/s during 5s.",
                                cost: t => t.meteorCost(),
                                duration: () => 5,
                                cooldown: 2,
                                effect: t => {
                                    t.hitM(t.meteorDmg(), "f", !0, !0)
                                }
                            }]
                        }, {
                            id: "cold",
                            name: "Cold",
                            skills: [{
                                id: "frozenarmor",
                                name: "Frozen Armor",
                                lvl: 1,
                                campAllowed: !0,
                                desc: t => "Create an armor that absorbs damage.<br/>Current level:<br/>Absorbs: " + t.frozenArmorDmg() + "<hr/>Next level:<br/>Absorbs: " + t.frozenArmorDmg(1) + ".",
                                cost: t => t.frozenArmorCost(),
                                duration: () => 9e9,
                                cooldown: 2,
                                effect: t => {
                                    t.getData().frozenarmor = t.frozenArmorDmg()
                                }
                            }, {
                                id: "manafreeze",
                                name: "Mana freeze",
                                lvl: 6,
                                desc: t => "[passive] Reduce mana cost of all spells.<br/>Current level:<br/>Spell cost: -" + Math.floor(100 * t.manafreezeBonus()) + "%<hr/>Next level:<br/>Spell cost: -" + Math.floor(100 * t.manafreezeBonus(1)) + "%."
                            }, {
                                id: "coldmastery",
                                name: "Cold Mastery",
                                lvl: 18,
                                campAllowed: !0,
                                desc: t => "Increase efficiency of active cold spells for every cast (permanent).<br/>Current level:<br/>Bonus: +" + Math.floor(100 * t.coldMasteryBonus()) / 100 + "%<br/>Total Bonus: +" + Math.floor(100 * t.coldMasteryTotalBonus()) / 100 + "% (" + (t.getData().stats.total.skills.coldmastery || 0) + ")<hr/>Next level:<br/>Bonus: +" + Math.floor(100 * t.coldMasteryBonus(1)) / 100 + "%.",
                                cost: () => 10,
                                cooldown: 2
                            }, {
                                id: "frozenorb",
                                name: "Frozen Orb",
                                lvl: 24,
                                desc: t => "A pulsating orb that deals cold damage to all monsters around.<br/>Current level:<br/>Damage inflicted: " + t.frozenOrbDmg() + "<hr/>Next level:<br/>Damage inflicted: " + t.frozenOrbDmg(1) + ".",
                                cost: t => t.frozenOrbCost(),
                                cooldown: 2,
                                effect: t => {
                                    t.hitM(t.frozenOrbDmg(), "c", !0, !0)
                                }
                            }]
                        }]
                    }, {
                        id: 3,
                        name: "Druid",
                        desc: "Specialize in Summons & transformation.<br/>Poison & Cold resist +15.",
                        reqlvl: 18,
                        reqclass: 0,
                        onSelect: t => {},
                        req: [{
                            desc: t => "Summon crow level: 20 (" + t.skillLevel("summoncrow") + ")",
                            check: t => t.skillLevel("summoncrow") >= 20
                        }, {
                            desc: t => "Kill Rakanishu:  20 (" + (t.getData().stats.total.bosses.rakanishu || 0) + ")",
                            check: t => (t.getData().stats.total.bosses.rakanishu || 0) >= 20
                        }],
                        skillsCat: [{
                            id: "summons",
                            name: "Summons",
                            skills: [{
                                id: "summonwolf",
                                name: "Summon Wolf",
                                lvl: 12,
                                campAllowed: !0,
                                desc: t => "Summon a wolf to fight for you.<br/>Current level:<br/>Damage: " + t.wolfMinDmg() + "-" + t.wolfMaxDmg() + "<br/>Attack rating: " + t.wolfAtkRating() + "<br/>Speed: " + t.wolfSpeed() + " (" + t.strSpeed(t.wolfSpeed()) + ")<br/>Defense: " + t.wolfDef() + "<br/>Life: " + t.wolfMaxLife() + "<hr/>Next level:<br/>Damage: " + t.wolfMinDmg(1) + "-" + t.wolfMaxDmg(1) + "<br/>Attack rating: " + t.wolfAtkRating(1) + "<br/>Speed: " + t.wolfSpeed(1) + " (" + t.strSpeed(t.wolfSpeed(1)) + ")<br/>Defense: " + t.wolfDef(1) + "<br/>Life: " + t.wolfMaxLife(1) + ".",
                                cost: t => 15,
                                cooldown: 2,
                                effect: t => {
                                    t.summon("wolf")
                                }
                            }, {
                                id: "summonpixie",
                                name: "Summon Pixie",
                                lvl: 18,
                                campAllowed: !0,
                                desc: t => {
                                    let n = t.skillLevel("summonpixie");
                                    return 'Summon a pixie that gives powers to you and all your summons depending on levels.<br/><div class="' + (n < 1 ? "text-secondary" : "") + '">Level  1 - Damage reduced by ' + t.pixieReducBonus() + '</div><div class="' + (n < 5 ? "text-secondary" : "") + '">Level  5 - Life and mana regneration +' + Math.floor(100 * t.pixieRegenBonus()) + '%</div><div class="' + (n < 10 ? "text-secondary" : "") + '">Level 10 - Chances to freeze on hit: ' + Math.floor(100 * t.pixieFreezeBonus()) + '%</div><div class="' + (n < 25 ? "text-secondary" : "") + '">Level 15 - All resistances +' + t.pixieResBonus() + '</div><div class="' + (n < 20 ? "text-secondary" : "") + '">Level 20 - Damage +' + Math.floor(100 * t.pixieDmgBonus()) + '%</div><div class="' + (n < 25 ? "text-secondary" : "") + '">Level 25 - Attack rating +' + Math.floor(100 * t.pixieRatingBonus()) + '%</div><div class="' + (n < 30 ? "text-secondary" : "") + '">Level 30 - Attack speed +' + Math.floor(100 * t.pixieSpeedBonus()) + "%.</div><hr/>Current level:<br/>Defense: " + t.pixieDef() + "<br/>Life: " + t.pixieMaxLife() + "<hr/>Next level:<br/>Defense: " + t.pixieDef(1) + "<br/>Life: " + t.pixieMaxLife(1) + "."
                                },
                                cost: t => 25,
                                cooldown: 2,
                                effect: t => {
                                    t.summon("pixie")
                                }
                            }, {
                                id: "summonresist",
                                name: "Summon Resist",
                                lvl: 18,
                                desc: t => "[passive] Increase summons resistances to all elements.<hr/>Current level:<br/>Bonus: " + t.summonResistBonus() + "%.<hr/>Next level:<br/>Bonus: " + t.summonResistBonus(1) + "%."
                            }, {
                                id: "carrionvine",
                                name: "Carrion Vine",
                                lvl: 24,
                                campAllowed: !0,
                                desc: t => "Summon a eat corpses to heal you and your party.<br/>Current level:<br/>Life gainded after kill: 1-" + t.vineLifeGained() + "<br/>Defense: " + t.vineDef() + "<br/>Life: " + t.vineMaxLife() + "<hr/>Next level:<br/>Life gainded after kill: 1-" + t.vineLifeGained(1) + "<br/>Defense: " + t.vineDef(1) + "<br/>Life: " + t.vineMaxLife(1) + ".",
                                cost: t => 25,
                                cooldown: 2,
                                effect: t => {
                                    t.summon("carrionvine")
                                }
                            }, {
                                id: "summonmastery",
                                name: "Summon Mastery",
                                lvl: 30,
                                desc: t => "[passive] Increase summons life and defense.<hr/>Current level:<br/>Life: +" + Math.floor(100 * t.summonMasteryLifeBonus()) + "%.<br/>Defense: +" + Math.floor(100 * t.summonMasteryDefenseBonus()) + "%.<hr/>Next level:<br/>Life: +" + Math.floor(100 * t.summonMasteryLifeBonus(1)) + "%.<br/>Defense: +" + Math.floor(100 * t.summonMasteryDefenseBonus(1)) + "%."
                            }]
                        }, {
                            id: "shapeshifting",
                            name: "Shape Shifting",
                            skills: [{
                                id: "werewolf",
                                name: "Werewolf",
                                lvl: 18,
                                desc: t => "Transform into a wolf.<hr/>Duration: " + t.lycanthropyDurationBonus() + "s<br/>Life +" + Math.floor(100 * t.lycanthropyLifeBonus()) + "%<hr/>Current level:<br/>Attack speed: +" + Math.floor(100 * t.werewolfSpeedBonus()) + "%.<br/>Attack rating: +" + Math.floor(100 * t.werewolfRatingBonus()) + "%.<hr/>Next level:<br/>Attack speed: +" + Math.floor(100 * t.werewolfSpeedBonus(1)) + "%.<br/>Attack rating: +" + Math.floor(100 * t.werewolfRatingBonus(1)) + "%.",
                                cooldown: 2,
                                campAllowed: !0,
                                cost: () => 25,
                                duration: t => t.lycanthropyDurationBonus(),
                                effect: t => t.shapeShiftingEffect(),
                                preeffect: t => t.shapeShiftingPreEffect()
                            }, {
                                id: "lycanthropy",
                                name: "Lycanthropy",
                                lvl: 18,
                                desc: t => "[passive] Increases the Life of the Druid while Shapeshifted, as well as the duration of the transformation.<hr/>Current level:<br/>Duration: " + t.lycanthropyDurationBonus() + "s<br/>Life +" + Math.floor(100 * t.lycanthropyLifeBonus()) + "%<hr/>Next level:<br/>Duration: " + t.lycanthropyDurationBonus(1) + "s<br/>Life +" + Math.floor(100 * t.lycanthropyLifeBonus(1)) + "%."
                            }, {
                                id: "werebear",
                                name: "Werebear",
                                lvl: 30,
                                desc: t => "Transform into a bear.<hr/>Duration: " + t.lycanthropyDurationBonus() + "s<br/>Life +" + Math.floor(100 * t.lycanthropyLifeBonus()) + "%<hr/>Current level:<br/>Damage: +" + Math.floor(100 * t.werebearDmgBonus()) + "%.<br/>Defense: +" + Math.floor(100 * t.werebearDefenseBonus()) + "%.<hr/>Next level:<br/>Damage: +" + Math.floor(100 * t.werebearDmgBonus(1)) + "%.<br/>Defense: +" + Math.floor(100 * t.werebearDefenseBonus(1)) + "%.",
                                cooldown: 2,
                                campAllowed: !0,
                                cost: () => 35,
                                duration: t => t.lycanthropyDurationBonus(),
                                effect: t => t.shapeShiftingEffect(),
                                preeffect: t => t.shapeShiftingPreEffect()
                            }]
                        }]
                    }],
                    $4 = [{
                        id: "crow",
                        name: "Crow",
                        maxlife: t => t.crowMaxLife(),
                        def: t => t.crowDef(),
                        speed: t => t.crowSpeed(),
                        act: t => {
                            if (!t.getData().m.length) return;
                            let n = he.fromArray(t.getData().m),
                                e = t.crowAtkRating();
                            if (he.roll(t.chances(n, e))) {
                                let i = he.get(t.crowMinDmg(), t.crowMaxDmg());
                                t.hitMc(n, i, "ph", !0, "Crow")
                            } else t.log("Crow: Miss", "h")
                        }
                    }, {
                        id: "wolf",
                        name: "Wolf",
                        maxlife: t => t.wolfMaxLife(),
                        def: t => t.wolfDef(),
                        speed: t => t.wolfSpeed(),
                        act: t => {
                            if (!t.getData().m.length) return;
                            let n = he.fromArray(t.getData().m),
                                e = t.wolfAtkRating();
                            if (he.roll(t.chances(n, e))) {
                                let i = he.get(t.wolfMinDmg(), t.wolfMaxDmg());
                                t.hitMc(n, i, "ph", !0, "Wolf")
                            } else t.log("Wolf: Miss", "h")
                        }
                    }, {
                        id: "pixie",
                        name: "Pixie",
                        maxlife: t => t.pixieMaxLife(),
                        def: t => t.pixieDef(),
                        act: t => {}
                    }, {
                        id: "carrionvine",
                        name: "Carrion Vine",
                        maxlife: t => t.vineMaxLife(),
                        def: t => t.vineDef(),
                        act: t => {}
                    }],
                    q4 = [{
                        title: "Den of Evil",
                        description: "Clear the Den of Evil<br/>Reward: 1 Skill point",
                        reward: t => {
                            t.getData().srem++, t.getData().skillreset++
                        },
                        check: t => {
                            var n;
                            return (null === (n = t.level("denofevil")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Sisters' Burial Grounds",
                        description: "Kill Blood Raven in the Burial's Grounds<br/>Reward: 1 Hireling slot",
                        reward: t => t.getData().maxmercs++,
                        check: t => {
                            var n;
                            return (null === (n = t.level("burialgrounds")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Search for Cain",
                        description: "Clear Tristram<br/>Reward: 5 attribute points",
                        reward: t => t.getData().rem += 5,
                        check: t => {
                            var n;
                            return (null === (n = t.level("tristram")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "The Forgotten Tower",
                        description: "Kill the Countess<br/>Reward: xp bonus",
                        reward: t => t.getData().xp += Math.max(5e4, t.xpReq() / 2),
                        check: t => {
                            var n;
                            return (null === (n = t.level("forgottentower")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Tools of the Trade",
                        description: "Clear the Barracks<br/>Reward: Ability to imbue an item",
                        reward: t => t.getData().imbue++,
                        check: t => {
                            var n;
                            return (null === (n = t.level("barracks")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Sisters to the Slaughter",
                        description: "Kill Andariel<br/>Reward: 1 attribute potion. Opens Act II",
                        reward: t => {
                            t.dropPotion(1e3, 1, he.fromArray(["strength", "dexterity", "vitality", "energy"])), t.openAct(2)
                        },
                        check: t => {
                            var n;
                            return (null === (n = t.level("catacombs")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Radament's Lair",
                        description: "Kill Radament<br/>Reward: 1 Skill point",
                        reward: t => t.getData().srem++,
                        check: t => {
                            var n;
                            return (null === (n = t.level("sewers")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Halls of the Dead",
                        description: "Clear the Halls of the Dead<br/>Reward: 1 Epic item",
                        reward: t => t.dropItem(t.getData().lvl, -1, 100, 100, 100, 100, .02),
                        check: t => {
                            var n;
                            return (null === (n = t.level("hallsofthedead")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "The Horadric Staff",
                        description: "Clear the Maggot Lair<br/>Reward: 1 Hireling slot",
                        reward: t => t.getData().maxmercs++,
                        check: t => {
                            var n;
                            return (null === (n = t.level("maggotlair")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "The Tainted Sun",
                        description: 'Destroy the Claw Viper Altar to end the curse<br/>Reward: <span class="text-unique">Horadric Amulet</span>',
                        reward: t => t.dropUnique("horadricamulet"),
                        check: t => {
                            var n;
                            return (null === (n = t.level("clawvipertemple")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "The Arcane Sanctuary",
                        description: "Kill The Summoner<br/>Reward: +1 skill slot",
                        reward: t => t.getData().quickslots.skills.push(""),
                        check: t => {
                            var n;
                            return (null === (n = t.level("arcanesanctuary")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "The Seven Tombs",
                        description: 'Kill Duriel<br/>Reward: <span class="text-unique">Duriel\'s ring</span>. Opens Act III',
                        reward: t => {
                            t.dropUnique("durielsring"), t.openAct(3)
                        },
                        check: t => {
                            var n;
                            return (null === (n = t.level("talrashastomb")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "The Golden Bird",
                        description: "Clear the Spider Forest<br/>Reward: 1 Hireling slot",
                        reward: t => t.getData().maxmercs++,
                        check: t => {
                            var n;
                            return (null === (n = t.level("spiderforest")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Blade of the Old Religion",
                        description: "Clear the Flayer Jungle<br/>Reward: 1 legendary item",
                        reward: t => t.dropItem(t.getData().lvl, -1, 100, 100, 100, 100, 100),
                        check: t => {
                            var n;
                            return (null === (n = t.level("flayerjungle")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Lam Esen's Tome",
                        description: "Clear the Ruined Temple<br/>Reward: +1 max auto-cast",
                        reward: t => {},
                        check: t => {
                            var n;
                            return (null === (n = t.level("ruinedtemple")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "Khalim's Will",
                        description: "Clear the Sewers<br/>Reward: 10 shards",
                        reward: t => t.getData().shards += 10,
                        check: t => {
                            var n;
                            return (null === (n = t.level("sewers2")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "The Blackened Temple",
                        description: "Clear Travincal<br/>Reward: 5 attribute points",
                        reward: t => t.getData().rem += 5,
                        check: t => {
                            var n;
                            return (null === (n = t.level("travincal")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }, {
                        title: "The Guardian",
                        description: 'Kill Mephisto<br/>Reward: <span class="text-unique">Traveler\'s protector</span>',
                        reward: t => {
                            t.dropUnique("travelersprotector")
                        },
                        check: t => {
                            var n;
                            return (null === (n = t.level("duranceofhate")) || void 0 === n ? void 0 : n.done) || !1
                        }
                    }],
                    U4 = [{
                        id: "health",
                        name: "Health Shrine",
                        icon: "fas fa-heart",
                        desc: "Fully refills Health",
                        effect: t => t.getData().life = t.maxLife()
                    }, {
                        id: "mana",
                        name: "Mana Shrine",
                        icon: "fas fa-hand-sparkles",
                        desc: "Fully refills Mana",
                        effect: t => t.getData().mana = t.maxMana()
                    }, {
                        id: "xp",
                        name: "Shrine of Experience",
                        icon: "fas fa-hourglass-half",
                        desc: "+100% xp for 60s",
                        duration: 60
                    }, {
                        id: "luck",
                        name: "Shrine of Luck",
                        icon: "fas fa-medal",
                        desc: "+50% better chance of getting magic items for 60s",
                        duration: 60
                    }, {
                        id: "armor",
                        name: "Shrine of Armor",
                        icon: "fas fa-shield-alt",
                        desc: "+100% defense for 120s",
                        duration: 120
                    }, {
                        id: "combat",
                        name: "Shrine of Combat",
                        icon: "fas fa-fist-raised",
                        desc: "+100% attack rating & damage for 120s",
                        duration: 120
                    }, {
                        id: "skill",
                        name: "Shrine of Skill",
                        icon: "fas fa-book-dead",
                        desc: "+2 to all skills for 120s",
                        duration: 120
                    }, {
                        id: "resf",
                        name: "Shrine of Resist Fire",
                        icon: "fas fa-fire",
                        desc: "+75% to resist fire for 120s",
                        duration: 120
                    }, {
                        id: "resc",
                        name: "Shrine of Resist Cold",
                        icon: "fas fa-snowflake",
                        desc: "+75% to resist cold for 120s",
                        duration: 120
                    }, {
                        id: "resl",
                        name: "Shrine of Resist Lightning",
                        icon: "fas fa-bolt",
                        desc: "+75% to resist lightning for 120s",
                        duration: 120
                    }, {
                        id: "resp",
                        name: "Shrine of Resist Poison",
                        icon: "fas fa-skull",
                        desc: "+75% to resist poison for 120s",
                        duration: 120
                    }],
                    z4 = [{
                        id: "tuto0",
                        check: () => !0,
                        effect: t => t.getData().tutos.push({
                            selector: "#levels div:nth-of-type(2)",
                            html: "Explore the Blood Moor to begin your adventure."
                        })
                    }, {
                        id: "tuto1",
                        check: t => t.getData().life < 10,
                        effect: t => t.getData().tutos.push({
                            selector: "#levels div:nth-of-type(1)",
                            html: "Get back to the camp when your life is too low."
                        })
                    }, {
                        id: "tuto2",
                        check: t => !!t.getData().m.find(n => n.type),
                        effect: t => t.getData().tutos.push({
                            selector: "#monsters h3:nth-child(1)",
                            html: "This monster is special. It deals elemental damages. Try to increase your resistances to avoid being crushed.<br/>Lightning enchanted monsters will deal lightning damage every time they get hit!",
                            position: "bottom"
                        })
                    }, {
                        id: "tuto3",
                        check: t => t.getData().maxmercs > 0,
                        effect: t => t.getData().tutos.push({
                            selector: "#mercBtn",
                            html: "You can now get hirelings to help you fight or to assist you in menial tasks.",
                            position: "bottom"
                        })
                    }, {
                        id: "potions",
                        desc: "Potion quickslots",
                        check: t => !!t.getData().inv.find(n => n.item.potion)
                    }, {
                        id: "skills",
                        desc: "+1 Skill quickslot",
                        check: t => t.getData().skills.length > 0,
                        effect: t => t.getData().quickslots.skills.push("")
                    }, {
                        id: "skills2",
                        desc: "+1 Skill quickslot",
                        check: t => t.getData().lvl >= 6,
                        effect: t => t.getData().quickslots.skills.push("")
                    }, {
                        id: "exile",
                        desc: "Exile & Stash",
                        check: t => t.getData().lvl >= 10,
                        effect: t => t.getData().tutos.push({
                            selector: "#exile-btn",
                            html: "You can now exile to get relics which makes you gather xp faster.",
                            position: "bottom"
                        })
                    }, {
                        id: "classes",
                        desc: "Classes",
                        check: t => t.getData().lvl >= 6,
                        effect: t => t.getData().tutos.push({
                            selector: "#class-btn",
                            html: "Look! You can now select a new class.",
                            position: "left"
                        })
                    }, {
                        id: "gambling",
                        desc: "Gambling",
                        check: t => !!t.getData().inv.find(n => n.item.effects.length > 1)
                    }, {
                        id: "achiev",
                        desc: "Achievements",
                        check: t => t.getData().act > 0 || t.getData().achievements.length > 0
                    }, {
                        id: "shards",
                        desc: "Shards",
                        check: t => t.getData().shards > 0
                    }, {
                        id: "act2",
                        desc: "Act II",
                        check: t => t.getData().act > 0
                    }],
                    W4 = [{
                        id: "assistant",
                        name: "Assistant",
                        desc: "Gives you potions when you need them",
                        config: {
                            rep: 0,
                            actions: [{
                                type: "",
                                treshold: 1
                            }]
                        },
                        act: (t, n, e, i) => {
                            if (n.rep -= e, n.rep <= 0) {
                                n.rep = t.assistantDelay(i.lvl);
                                for (let r of n.actions) {
                                    if (!r.type) return;
                                    let s = t.getData().inv.findIndex(o => o.item.potion && o.item.id.includes(r.type));
                                    if (-1 == s) return;
                                    if ("healing" == r.type && t.getData().life <= r.treshold || "mana" == r.type && t.getData().mana <= r.treshold) {
                                        console.log("giving " + r.type + " potion"), t.drink(s);
                                        break
                                    }
                                    if ("antidote" == r.type && t.getData().poisoned) {
                                        console.log("giving " + r.type + " potion"), t.drink(s);
                                        break
                                    }
                                    if ("thawing" == r.type && t.getData().frozen) {
                                        console.log("giving " + r.type + " potion"), t.drink(s);
                                        break
                                    }
                                }
                            }
                        }
                    }, {
                        id: "seller",
                        name: "Seller",
                        desc: "Sells your junk items for you",
                        config: {
                            rep: 0,
                            rarity: 0,
                            cost: 1
                        },
                        act: (t, n, e, i) => {
                            if (n.rep -= e, n.rep <= 0) {
                                n.rep = t.sellerDelay(i.lvl);
                                for (let r = 0; r < t.getData().inv.length; r++) {
                                    let s = t.getData().inv[r].item,
                                        a = n.rarity,
                                        l = !0;
                                    if (s.potion && (l = !1), s.price > n.cost && (l = !1), s.unique ? a < 5 && (l = !1) : s.effects.length > a && (l = !1), l) {
                                        console.log("selling " + s.name), t.sell(r);
                                        break
                                    }
                                }
                            }
                        }
                    }, {
                        id: "fighter",
                        name: "Fighter",
                        desc: "Fights beside you",
                        config: {},
                        act: (t, n) => {}
                    }],
                    Y4 = ["Aliza", "Amplisa", "Annor", "Abhaya", "Elly", "Paige", "Basanti", "Blaise", "Kyoko", "Klaudia", "Kundri", "Kyle", "Visala", "Elexa", "Floria", "Fiona", "Gwinni", "Gaile", "Hannah", "Heather", "Iantha", "Diane", "Isolde", "Divo", "Ithera", "Itonya", "Liene", "Maeko", "Mahala", "Liaza", "Meghan", "Olena", "Oriana", "Ryann", "Rozene", "Raissa", "Sharyn", "Shikha", "Debi", "Tylena", "Wendy", "Hazade", "Alhizeer", "Azrael", "Ahsab", "Chalan", "Vikhyat", "Haseen", "Razan", "Emilio", "Pratham", "Fazel", "Jemali", "Kasim", "Gulzar", "Mizan", "Leharas", "Durga", "Neeraj", "Ilzan", "Zanarhi", "Waheed"],
                    K4 = [{
                        id: "dmgpct",
                        name: "Strong",
                        values: [25, 50, 100, 200, 400],
                        lvl: [1, 10, 20, 30, 50]
                    }, {
                        id: "defpct",
                        name: "Agile",
                        values: [50, 100, 200, 400, 600],
                        lvl: [1, 10, 20, 30, 50]
                    }, {
                        id: "resa",
                        name: "Resistant",
                        values: [20, 40, 60, 80, 100],
                        lvl: [10, 20, 30, 40, 50]
                    }, {
                        id: "arpct",
                        name: "Accurate",
                        values: [25, 50, 100, 200, 400],
                        lvl: [1, 10, 20, 30, 50]
                    }, {
                        id: "lifepct",
                        name: "Tough",
                        values: [50, 100, 200, 400, 800],
                        lvl: [1, 10, 20, 30, 50]
                    }, {
                        id: "spd",
                        name: "Fast",
                        values: [10, 20, 40, 60],
                        lvl: [1, 10, 20, 30]
                    }, {
                        id: "mindmg",
                        name: "Precise",
                        values: [1, 2, 3],
                        lvl: [1, 10, 20]
                    }, {
                        id: "maxdmg",
                        name: "Brutal",
                        values: [1, 2, 4, 6],
                        lvl: [1, 10, 20, 30]
                    }, {
                        id: "lsto",
                        name: "Self-healing",
                        values: [5, 10, 15, 20, 25],
                        lvl: [5, 10, 20, 30, 50]
                    }, {
                        id: "frz",
                        name: "Freezing",
                        values: [1, 2, 5],
                        lvl: [10, 20, 30]
                    }],
                    Z4 = [{
                        id: "andariel",
                        desc: "Kill Andariel",
                        val: t => t.getData().stats.total.bosses.andariel || 0,
                        req: 10,
                        reward: t => t.getData().stashlimit++,
                        rewardDesc: "Stash size +1"
                    }, {
                        id: "duriel",
                        desc: "Kill Duriel",
                        val: t => t.getData().stats.total.bosses.duriel || 0,
                        req: 20,
                        reward: t => t.getData().stashlimit++,
                        rewardDesc: "Stash size +1"
                    }, {
                        id: "mephisto",
                        desc: "Kill Mephisto",
                        val: t => t.getData().stats.total.bosses.mephisto || 0,
                        req: 25,
                        reward: t => t.getData().stashlimit += 2,
                        rewardDesc: "Stash size +2"
                    }, {
                        id: "shrines100",
                        desc: "Activate 100 shrines",
                        val: t => t.getData().stats.total.shrines || 0,
                        req: 100,
                        reward: t => t.getData().stashlimit++,
                        rewardDesc: "Stash size +1"
                    }, {
                        id: "shrines500",
                        desc: "Activate 500 shrines",
                        val: t => t.getData().stats.total.shrines || 0,
                        req: 500,
                        reward: t => t.getData().stashlimit++,
                        rewardDesc: "Stash size +1"
                    }, {
                        id: "skills1",
                        desc: "Use 10,000 skills in one run",
                        val: t => t.getData().stats.run.skillnb || 0,
                        req: 1e4,
                        reward: t => null,
                        rewardDesc: "Relic effect +25%"
                    }, {
                        id: "level30",
                        desc: "Reach level 30",
                        val: t => t.getData().lvl || 0,
                        req: 30,
                        reward: t => null,
                        rewardDesc: "Relic effect +25%"
                    }, {
                        id: "level50",
                        desc: "Reach level 50",
                        val: t => t.getData().lvl || 0,
                        req: 50,
                        reward: t => null,
                        rewardDesc: "Relic effect +25%"
                    }, {
                        id: "unlock1",
                        desc: "Unlock 1 class",
                        val: t => t.getData().unlockedClass.length || 0,
                        req: 1,
                        reward: t => null,
                        rewardDesc: "-1 monster / level in Act I"
                    }, {
                        id: "unlock2",
                        desc: "Unlock 2 classes",
                        val: t => t.getData().unlockedClass.length || 0,
                        req: 2,
                        reward: t => null,
                        rewardDesc: "-1 monster / level in Act I & II"
                    }, {
                        id: "unlock3",
                        desc: "Unlock 3 classes",
                        val: t => t.getData().unlockedClass.length || 0,
                        req: 3,
                        reward: t => null,
                        rewardDesc: "-1 monster / level in Act I, II & III"
                    }, {
                        id: "kills1e3",
                        desc: "Kill 1,000 monsters",
                        val: t => t.getData().stats.total.killed || 0,
                        req: 1e3,
                        reward: t => null,
                        rewardDesc: "+15% relics gain"
                    }, {
                        id: "kills1e4",
                        desc: "Kill 10,000 monsters",
                        val: t => t.getData().stats.total.killed || 0,
                        req: 1e4,
                        reward: t => null,
                        rewardDesc: "+20% relics gain"
                    }, {
                        id: "kills1e5",
                        desc: "Kill 100,000 monsters",
                        val: t => t.getData().stats.total.killed || 0,
                        req: 1e5,
                        reward: t => null,
                        rewardDesc: "+25% relics gain"
                    }, {
                        id: "die10",
                        desc: "Die 10 times",
                        val: t => t.getData().stats.total.death || 0,
                        req: 10,
                        reward: t => null,
                        rewardDesc: "-10% xp penalty on death"
                    }, {
                        id: "die1e2",
                        desc: "Die 100 times",
                        val: t => t.getData().stats.total.death || 0,
                        req: 100,
                        reward: t => null,
                        rewardDesc: "-15% xp penalty on death"
                    }, {
                        id: "die1e3",
                        desc: "Die 1,000 times",
                        val: t => t.getData().stats.total.death || 0,
                        req: 1e3,
                        reward: t => null,
                        rewardDesc: "-20% xp penalty on death"
                    }, {
                        id: "soldit1e2",
                        desc: "Sell 100 items",
                        val: t => t.getData().stats.total.sold.item || 0,
                        req: 100,
                        reward: t => null,
                        rewardDesc: "Start with a dagger"
                    }, {
                        id: "soldit1e3",
                        desc: "Sell 1,000 items",
                        val: t => t.getData().stats.total.sold.item || 0,
                        req: 1e3,
                        reward: t => null,
                        rewardDesc: "Start with a poignard"
                    }, {
                        id: "soldm50",
                        desc: "Sell 50 rare items",
                        val: t => t.getData().stats.total.sold.magic[1] || 0,
                        req: 50,
                        reward: t => null,
                        rewardDesc: "Start with a quilted armor"
                    }, {
                        id: "craft10",
                        desc: "Craft 10 unique items",
                        val: t => t.getData().stats.total.craft || 0,
                        req: 10,
                        reward: t => null,
                        rewardDesc: "Auto-skip to next level (act I)"
                    }, {
                        id: "craft100",
                        desc: "Craft 100 unique items",
                        val: t => t.getData().stats.total.craft || 0,
                        req: 100,
                        reward: t => null,
                        rewardDesc: "Auto-skip to next level (act II)"
                    }];
                let eo = (() => {
                        class t {
                            constructor() {
                                this.version = 11, this.versions = ["dev.0.1 (early prototype)", "beta.0.1", "beta.0.1.1", "beta.0.2.0 - Rise of Sorcery", "beta.0.2.1 - Rise of Sorcery", "beta.0.2.2 - Rise of Sorcery", "beta.0.2.3 - Rise of Sorcery", "beta.0.2.4 - Rise of Sorcery", "beta.0.3.0 - Power of Nature", "beta.0.3.1 - Power of Nature", "beta.0.3.2 - Power of Nature", "beta.0.3.3 - Power of Nature"], this.aes_key = "wA7Xb*6JZ7$R2p9bP_Nq", this.autosave_delay = 9500, this.basereqm = 25, this.maxlogs = 500, this.basemanaregen = .0025, this.baseliferegen = .0025, this.drop = {
                                    gold: .1,
                                    item: .3,
                                    magic: [.42, .03, .04],
                                    potion: .1
                                }, this.istr = 10, this.idex = 10, this.ivit = 10, this.iene = 5, this.resredbyact = 8, this.shrinechance = 2e-4, this.shrinetimeout = 20, this.magiclvlgap = [1, 2, 3, 4], this.potionlvllimit = 30, this.itemlvllimit = 32, this.skilllimit = 20, this.merchants = 3, this.mercsToHire = 4, this.mercsLvllimit = 8, this.merchantsName = ["Akara", "Charsi", "Gheed", "Kashya", "Warriv", "Atma", "Drognan", "Elzix", "Fara", "Greiz", "Jerhyn", "Lysander", "Meshif"], this.logs = [{
                                    type: "h",
                                    cls: ""
                                }, {
                                    type: "e",
                                    cls: "text-danger"
                                }, {
                                    type: "s",
                                    cls: "text-success"
                                }, {
                                    type: "d",
                                    cls: "text-primary"
                                }, {
                                    type: "n",
                                    cls: "text-warning"
                                }], this.shrines = U4, this.quests = q4, this.cl = G4, this.summons = $4, this.l = H4, this.specialDesc = j4, this.m = V4, this.summonroll = .3, this.locks = z4, this.mercs = W4, this.mercNames = Y4, this.mercSkills = K4, this.achievements = Z4, this.items = P4, this.uniques = L4, this.potions = F4, this.magic = B4, this.magicDesc = Ac, this.equipNames = ["Head", "Neck", "Body", "Weapon", "Shield", "Hands", "Waist", "Feet", "Finger", "Finger"]
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })(),
                    Da = (() => {
                        class t {
                            constructor(e) {
                                this.conf = e, this.version = this.conf.version, this.savetime = Date.now(), this.dark = !0, this.pause = !1, this.autopause = !1, this.showHitLogs = !1, this.showKillLogs = !0, this.showNonMagicalItemsLogs = !0, this.showGoldLogs = !0, this.options = {
                                    invpause: !1
                                }, this.tutos = [], this.init(!1)
                            }
                            init(e = !0) {
                                this.lvl = 1, this.xp = 0, this.str = this.conf.istr, this.dex = this.conf.idex, this.vit = this.conf.ivit, this.ene = this.conf.iene, this.rem = 0, this.srem = 0, this.life = 20, this.mana = 5, this.skillreset = 0, this.frozen = 0, this.stun = 0, this.poisoned = void 0, this.frozenarmor = 0, this.imbue = 0, this.shrine = void 0, this.activeshrine = void 0, this.quest = 0, this.cl = 0, this.skills = [], this.actives = [], this.cooldowns = [], this.m = [], this.act = 0, this.currentl = this.conf.l[0][0].id, this.l = [{
                                    id: this.conf.l[0][0].id,
                                    progress: 0,
                                    done: !0
                                }, {
                                    id: this.conf.l[0][1].id,
                                    progress: 0,
                                    done: !1
                                }], this.rep = 0, this.logs = [], this.gold = 0, this.inv = [], this.equip = [void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0], this.merchants = [], this.merc = [], this.mercToHire = [], this.mercToHireTimeleft = 0, this.maxmercs = 0, this.summons = [], this.autocast = [], this.quickslots = {
                                    potions: [""],
                                    skills: []
                                }, e ? this.stats.run = {
                                    killed: 0,
                                    start: Date.now(),
                                    classselected: Date.now(),
                                    death: 0,
                                    skills: {},
                                    skillnb: 0
                                } : (this.relics = 0, this.unlockedClass = [], this.stash = [], this.stashlimit = 3, this.achievements = [], this.locks = [], this.shards = 0, this.stats = {
                                    total: {
                                        exiles: 0,
                                        killed: 0,
                                        death: 0,
                                        skills: {},
                                        bosses: {},
                                        shrines: 0,
                                        skillnb: 0,
                                        sold: {
                                            item: 0,
                                            magic: [0, 0, 0, 0, 0]
                                        },
                                        craft: 0
                                    },
                                    run: {
                                        killed: 0,
                                        start: Date.now(),
                                        classselected: Date.now(),
                                        death: 0,
                                        skills: {},
                                        skillnb: 0
                                    }
                                }), this.locks.includes("skills") && this.quickslots.skills.push(""), this.locks.includes("skills2") && this.quickslots.skills.push("")
                            }
                            load(e) {
                                for (var i in e) this[i] = e[i];
                                this.actives = [], this.cooldowns = [], this.autopause = !1
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(eo))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })();
                class Cb {}
                class Mb {
                    static copy(n) {
                        return JSON.parse(JSON.stringify(n))
                    }
                }
                let Ic = (() => {
                    class t {
                        constructor(e, i, r) {
                            this.conf = e, this.data = i, this.float = r
                        }
                        getData() {
                            return this.data
                        }
                        getConf() {
                            return this.conf
                        }
                        init() {
                            this.data.currentl = this.conf.l[this.data.act][0].id, this.data.life = this.maxLife(), this.data.mana = this.maxMana(), this.initM()
                        }
                        itemCls(e) {
                            return e.unique ? "text-unique" : 1 == e.effects.length ? "text-primary" : 2 == e.effects.length ? "text-warning" : 3 == e.effects.length ? "text-success" : e.effects.length > 3 ? "text-danger" : ""
                        }
                        itemRarity(e) {
                            return e.unique ? "unique" : 1 == e.effects.length ? "magical" : 2 == e.effects.length ? "rare" : 3 == e.effects.length ? "epic" : e.effects.length > 3 ? "legendary" : "normal"
                        }
                        maxLife() {
                            let e = 2 * this.data.vit;
                            return e += this.totalEffect("life"), (this.isActive("werewolf") || this.isActive("werebear")) && (e *= 1 + this.lycanthropyLifeBonus()), Math.floor(e)
                        }
                        maxMana() {
                            let e = this.data.ene;
                            return e += this.totalEffect("mana"), Math.floor(e)
                        }
                        skillLevel(e) {
                            var i;
                            let r = (null === (i = this.data.skills.find(s => s.id == e)) || void 0 === i ? void 0 : i.level) || 0;
                            if (r += this.totalEffect("sk_" + e, 2), 0 != r) {
                                r += this.totalEffect("skall"), r += this.totalEffect("skcl" + this.data.cl);
                                let s = this.class().skillsCat.findIndex(o => o.skills.find(a => a.id == e)); - 1 != s && (r += this.totalEffect("skcat" + this.data.cl + s)), this.data.activeshrine && "skill" == this.data.activeshrine.id && (r += 2)
                            }
                            return r
                        }
                        class() {
                            return this.conf.cl[this.data.cl]
                        }
                        isSkillAllowed(e) {
                            var i;
                            return !(!e.cost || (null === (i = this.curLevel()) || void 0 === i ? void 0 : i.home) && !e.campAllowed) && this.data.mana >= this.spellCost(e.id)
                        }
                        isSkillActive(e) {
                            return this.isActive(e.id)
                        }
                        isActive(e) {
                            return !!this.data.actives.find(i => i.id == e)
                        }
                        isSkillCooldown(e) {
                            return !!this.data.cooldowns.find(i => i.id == e)
                        }
                        cooldown(e) {
                            if (!e.cooldown) return 0;
                            let i = e.cooldown;
                            return i *= 1 / (1 + this.totalEffect("cast") / 100), i
                        }
                        useSkill(e) {
                            if (this.data.stun || !e.cost || !this.isSkillAllowed(e) || this.data.mana < this.spellCost(e.id) || this.data.cooldowns.find(r => r.id == e.id)) return;
                            this.data.mana -= this.spellCost(e.id);
                            let i = this.data.actives.findIndex(r => r.id == e.id);
                            i > -1 && this.data.actives.splice(i, 1), e.preeffect && e.preeffect(this), e.duration && this.data.actives.push({
                                id: e.id,
                                time: e.duration(this)
                            }), e.cooldown && this.data.cooldowns.push({
                                id: e.id,
                                time: this.cooldown(e)
                            }), e.effect && e.effect(this), this.data.stats.total.skillnb++, this.data.stats.run.skillnb++, this.data.stats.total.skills[e.id] ? this.data.stats.total.skills[e.id]++ : this.data.stats.total.skills[e.id] = 1, this.data.stats.run.skills[e.id] ? this.data.stats.run.skills[e.id]++ : this.data.stats.run.skills[e.id] = 1
                        }
                        isPixie() {
                            return -1 != this.data.summons.findIndex(e => "pixie" == e.type)
                        }
                        isVine() {
                            return -1 != this.data.summons.findIndex(e => "carrionvine" == e.type)
                        }
                        minDamage() {
                            let e = this.wMinDamage(),
                                i = this.totalEffect("mindmg", 1, [3]),
                                r = e;
                            i && (r += i), r *= this.damageMult(), r = Math.floor(r);
                            let s = this.totalEffect("fdmg", 1),
                                o = this.totalEffect("cdmg", 1),
                                a = this.totalEffect("ldmg", 1),
                                l = this.totalEffect("pdmg", 1),
                                c = this.maxDamage();
                            return r > c.ph && (r = c.ph), {
                                ph: r,
                                f: s,
                                c: o,
                                l: a,
                                p: l
                            }
                        }
                        minDamageTotal() {
                            let e = this.minDamage(),
                                i = this.maxDamage();
                            return e.ph + e.f + e.c + e.l + e.p * i.p
                        }
                        maxDamage() {
                            let e = this.wMaxDamage(),
                                i = this.totalEffect("maxdmg", 1, [3]),
                                r = e;
                            return i && (r += i), r *= this.damageMult(), r = Math.floor(r), {
                                ph: r,
                                f: this.totalEffect("fdmg", 2),
                                c: this.totalEffect("cdmg", 2),
                                l: this.totalEffect("ldmg", 2),
                                p: this.totalEffect("pdmg", 2)
                            }
                        }
                        maxDamageTotal() {
                            let e = this.maxDamage();
                            return e.ph + e.f + e.c + e.p + e.l
                        }
                        damageMultForAll() {
                            let e = 0;
                            return this.isPixie() && (e += this.pixieDmgBonus()), e
                        }
                        damageMult() {
                            let e = 1;
                            e *= 1 + this.damageMultForAll(), this.isActive("frenzy") ? e *= 1 + this.frenzyBonus() : this.isActive("concentrate") && (e *= 1 + this.concentrateBonus()), this.isActive("werebear") && (e *= 1 + this.werebearDmgBonus());
                            let i = this.totalEffect("dmgpct", 1, [3]);
                            return i && (e *= 1 + i / 100), this.data.activeshrine && "combat" == this.data.activeshrine.id && (e *= 2), e
                        }
                        wDamageMult(e) {
                            let i = 1 + this.strength() / 25;
                            if (e) {
                                let r = e.wtype || "";
                                "s" == r && (i *= 1 + this.smasBonus()), "a" == r && (i *= 1 + this.amasBonus()), "m" == r && (i *= 1 + this.mmasBonus()), i *= 1 + this.disciplineBonus()
                            }
                            return i
                        }
                        wMinDamage(e) {
                            let i = this.weapon(e);
                            if (i) {
                                let r = i.base.minDmg || 1;
                                r += this.effect(i.item, "mindmg");
                                let o = this.effect(i.item, "dmgpct");
                                o && (r *= 1 + o / 100), r = Math.floor(r * this.wDamageMult(i.base));
                                let a = this.wMaxDamage(e);
                                return r > a && (r = a), Math.floor(r)
                            }
                            return 1
                        }
                        wMaxDamage(e) {
                            let i = this.weapon(e);
                            if (i) {
                                let r = i.base.maxDmg || 1;
                                r += this.effect(i.item, "maxdmg");
                                let o = this.effect(i.item, "dmgpct");
                                return o && (r *= 1 + o / 100), Math.floor(r * this.wDamageMult(i.base))
                            }
                            return 2
                        }
                        totalEffect(e, i = 1, r = [], s = !1) {
                            let o = s ? 1 : 0;
                            for (let a = 0; a < this.data.equip.length; a++) {
                                if (r.includes(a)) continue;
                                let l = this.data.equip[a];
                                l && (s ? o *= 1 - this.effect(l, e, i) / 100 : o += this.effect(l, e, i))
                            }
                            return o
                        }
                        effect(e, i, r = 1) {
                            let s = e.effects.find(o => o.startsWith(i));
                            if (s) {
                                let o = s.split("_");
                                return parseInt(o[r])
                            }
                            return 0
                        }
                        mercEffect(e, i) {
                            let r = this.mercSkill(i);
                            if (r) {
                                let s = e.config.skills.find(o => o.startsWith(i));
                                if (s) {
                                    let o = parseInt(s.split("_")[1]);
                                    return r.values[o - 1]
                                }
                            }
                            return 0
                        }
                        speedMultForAll() {
                            let e = 0;
                            return this.isPixie() && (e += this.pixieSpeedBonus()), e
                        }
                        speed(e) {
                            let i = this.weapon(e),
                                r = 1;
                            i && (r = 1 + (i.base.spd || 0) / 50);
                            let s = this.totalEffect("spd", 1, [3]);
                            return i && (s += this.effect(null == i ? void 0 : i.item, "spd")), s && (r /= 1 + s / 100), this.data.frozen && (r *= 2), r /= 1 + this.speedMultForAll(), this.isActive("werewolf") && (r /= 1 + this.werewolfSpeedBonus()), this.isActive("frenzy") && (r /= 1 + this.frenzyBonus()), r
                        }
                        mSpeed(e) {
                            let i = e.spd;
                            return e.frozen && (i *= 2), i
                        }
                        weapon(e) {
                            if (e || (e = this.data.equip[3]), e) return {
                                item: e,
                                base: this.baseItem(e.id)
                            }
                        }
                        isClassUnlocked(e) {
                            return this.data.unlockedClass.includes(e)
                        }
                        xpReq(e = 0) {
                            return this.xpReqAbs(this.data.lvl + e)
                        }
                        xpReqAbs(e) {
                            return 0 == e ? 0 : Math.floor(427 + 40 * Math.pow(e, 4) * Math.pow(1.05, e))
                        }
                        relicGain() {
                            let e = Math.floor(1.5 * Math.pow(this.data.xp / 407556, .5)),
                                i = 1;
                            return this.isAchievementDone("kills1e3") && (i += .15), this.isAchievementDone("kills1e4") && (i += .2), this.isAchievementDone("kills1e5") && (i += .25), Math.floor(e * i)
                        }
                        xpBonusFromRelics() {
                            return this.data.relics * this.relicMult()
                        }
                        relicMult() {
                            let e = .5;
                            return this.isAchievementDone("skills1") && (e += .25), this.isAchievementDone("level30") && (e += .25), this.isAchievementDone("level50") && (e += .25), e
                        }
                        curLevel() {
                            return this.conf.l.flat().find(e => e.id == this.data.currentl)
                        }
                        level(e) {
                            return this.data.l.find(i => i.id == e)
                        }
                        curDataLevel() {
                            return this.data.l.find(e => e.id == this.data.currentl)
                        }
                        m(e) {
                            return this.conf.m.find(i => i.id == e)
                        }
                        skill(e) {
                            return this.conf.cl.flatMap(i => i.skillsCat).flatMap(i => i.skills).find(i => i.id == e)
                        }
                        baseItem(e, i = !1) {
                            return i ? this.conf.potions.find(r => r.id == e) || new Cb : this.conf.items.find(r => r.id == e) || new Cb
                        }
                        strReq(e) {
                            let i = this.baseItem(e.id);
                            if (!i.req_str) return 0;
                            let r = i.req_str,
                                s = this.effect(e, "req");
                            return s && (r = Math.floor(r * (1 - s / 100))), r
                        }
                        dexReq(e) {
                            let i = this.baseItem(e.id);
                            if (!i.req_dex) return 0;
                            let r = i.req_dex,
                                s = this.effect(e, "req");
                            return s && (r = Math.floor(r * (1 - s / 100))), r
                        }
                        l(e) {
                            return this.conf.l.flat().find(i => i.id == e)
                        }
                        isUnlocked(e) {
                            return -1 != this.data.locks.findIndex(i => i == e)
                        }
                        isAchievementDone(e) {
                            return this.data.achievements.includes(e)
                        }
                        checkForSpecial() {
                            let e = this.curLevel();
                            if (!e) return !1;
                            let i = this.data.l.find(r => r.id == this.data.currentl);
                            return !(!(null == i ? void 0 : i.progress) || i.progress % (this.reqm() - 1) != 0 || !e.special || this.data.m.find(r => r.special))
                        }
                        up(e, i) {
                            "str" == e && (this.data.str += i), "dex" == e && (this.data.dex += i), "vit" == e && (this.data.vit += i, this.data.life += 2 * i), "ene" == e && (this.data.ene += i, this.data.mana += i)
                        }
                        initM(e = "") {
                            var i, r;
                            let o, s = this.curLevel();
                            if (!s) return;
                            if (e || (this.data.l.find(h => h.id == this.data.currentl), this.checkForSpecial() ? (o = s.special, o && (e = o.type)) : e = he.fromArray(null == s ? void 0 : s.m)), !e) return void(this.data.m = []);
                            let a = this.m(e);
                            if (!a) return;
                            let l = he.get(a.hp[0], a.hp[1]),
                                c = {
                                    id: a.id,
                                    name: o ? o.name : a.name,
                                    lvl: o ? a.lvl + 3 : a.lvl,
                                    ihp: l,
                                    hp: l,
                                    spd: a.spd,
                                    def: a.def,
                                    atk: a.atk,
                                    xp: this.mXp(a),
                                    min: a.min,
                                    max: a.max,
                                    rep: 0,
                                    desc: ""
                                };
                            a.type && ("r" == a.type ? (c.type = he.fromArray(["f", "c", "l", "p"]), "p" == c.type && (c.min = Math.floor(c.min / 3), c.max = 3)) : c.type = a.type), a.burn && (c.burn = a.burn), a.summon && (c.summon = a.summon), a.undead && (c.undead = a.undead), a.stun && (c.stun = a.stun), a.ranged && (c.ranged = a.ranged), a.hitall && (c.hitall = a.hitall), a.exploding && (c.exploding = a.exploding);
                            let u = "";
                            if (o) {
                                c.xp *= 10, c.hp *= 2;
                                for (let p of o.modif) {
                                    let h = p.split("_"),
                                        m = h[0],
                                        M = 1 == h.length ? "" : p.split("_")[1];
                                    if (this.conf.specialDesc[m] && (u += this.conf.specialDesc[m](M) + " - "), "hp" == m) c.hp *= parseInt(M), c.ihp = c.hp;
                                    else if ("dmg" == m) c.min *= parseInt(M), c.max *= parseInt(M);
                                    else if ("t" == m) c.type = M;
                                    else if ("sp" == m) c.spd *= 1 / parseInt(M);
                                    else if ("sum" == m) c.summon = M;
                                    else if ("res" == m) c.res = parseInt(M);
                                    else if ("stun" == m) {
                                        let I = p.split("_")[2];
                                        c.stun = [parseFloat(M), parseFloat(I)]
                                    } else "hitall" == m && (c.hitall = !0)
                                }
                                c.special = {
                                    id: (null === (i = s.special) || void 0 === i ? void 0 : i.id) || "",
                                    lvl: (null === (r = s.special) || void 0 === r ? void 0 : r.lvl) || 1
                                }, this.data.m = []
                            }
                            if (a.undead && (u += "Undead - "), a.stun && (u += "Stun Attack - "), a.hitall && (u += "Area attack - "), a.exploding && (u += "Exploding - "), a.summon) {
                                let p = this.m(a.summon);
                                p && (u += "Summon " + p.name + " - ")
                            }
                            a.burn && (u += "Mana burn - "), u && (u = u.slice(0, -3)), c.desc = u, this.data.m.push(c)
                        }
                        hitM(e, i, r, s = !1) {
                            s ? this.data.m.forEach(o => this.hitMc(o, e, i, r)) : this.data.m.length && this.hitMc(this.data.m[0], e, i, r)
                        }
                        hitMc(e, i, r, s, o = "") {
                            if ("ph" == r) {
                                if (e.undead && this.data.equip[3]) {
                                    let a = this.baseItem(this.data.equip[3].id);
                                    a.wtype && "m" == a.wtype && (i *= 1.5)
                                }
                                if (!o) {
                                    let a = this.totalEffect("lsto");
                                    a && (this.data.life += i * a / 100, this.data.life > this.maxLife() && (this.data.life = this.maxLife()));
                                    let l = this.totalEffect("msto");
                                    l && (this.data.mana += i * l / 100, this.data.mana > this.maxMana() && (this.data.mana = this.maxMana()))
                                }
                            } else "l" == r ? "l" == e.type && (i /= 2) : "f" == r ? "f" == e.type && (i /= 2) : "c" == r ? ("c" == e.type && (i /= 2), e.frozen = 3) : "p" == r ? "p" == e.type && (i /= 2) : "m" == r && e.res && (i *= 1 - e.res);
                            (i = Math.floor(i)) && (e.hp -= i, e.hp < 0 && (e.hp = 0), this.log((o || "You") + ": Hit (" + i + " " + this.iconForType(r) + ")", "h"), "l" == e.type && !s && this.mHitPlayer("l", Math.floor(e.min / 4), e), this.isPixie() && he.roll(this.pixieFreezeBonus()) && (e.frozen = 1))
                        }
                        iconForType(e) {
                            return "l" == e ? '<i class="fas fa-bolt text-warning"></i>' : "f" == e ? '<i class="fas fa-fire text-danger"></i>' : "c" == e ? '<i class="fas fa-snowflake text-primary"></i>' : "p" == e ? '<i class="fas fa-skull text-success"></i>' : "m" == e ? '<i class="fas fa-magic text-info"></i>' : ""
                        }
                        mXp(e) {
                            return Math.floor(1 * Math.pow(8 * e.lvl * Math.pow(1.05, e.lvl) + e.def + e.min + e.max, 1.5))
                        }
                        xpmult(e) {
                            let i = 1;
                            if (e.lvl < this.data.lvl) {
                                let r = 12 / (1 + this.data.lvl - e.lvl) - 1;
                                r = Math.max(Math.min(r, 1), .01)
                            }
                            return i *= 1 + this.xpBonusFromRelics(), i
                        }
                        mChances() {
                            if (this.data.m.length >= this.maxMonsters()) return 0;
                            let e = 1 + this.conf.l.flat().findIndex(i => i.id == this.data.currentl);
                            return 1 / (1 + 1e3 * this.data.m.length / e)
                        }
                        maxMonsters() {
                            return 4 + this.data.act
                        }
                        levelUp() {
                            this.data.lvl++, this.data.rem += 5, this.data.srem++, this.data.life = this.maxLife(), this.data.mana = this.maxMana(), this.log('<span class="text-success">Level up !</span>', "lu")
                        }
                        mercSkill(e) {
                            return e = e.split("_")[0], this.conf.mercSkills.find(i => i.id == e)
                        }
                        mercLevelUp(e) {
                            if (e.lvl++, "fighter" == e.type) {
                                e.config.life = this.mercMaxLife(e);
                                let i = "";
                                e.lvl % 5 == 0 && (i = this.addMercSkill(e)), this.log('<span class="text-success">' + e.name + ": Level up ! " + (i ? "New skill: " + i : "") + "</span>", "lu")
                            }
                            if ("assistant" == e.type) {
                                let i = e.config.actions;
                                this.assistantNb(e.lvl) > i.length && (e.config.actions.push({
                                    type: "",
                                    treshold: 1
                                }), this.log('<span class="text-success">' + e.name + ": Level up ! 1 action gained !</span>", "lu"))
                            }
                        }
                        addMercSkill(e) {
                            let i = e.config.skills,
                                r = he.fromArray(this.conf.mercSkills.filter(s => {
                                    let o = i.find(c => c.startsWith(s.id)),
                                        a = o ? parseInt(o.split("_")[1]) : 0;
                                    return a != s.values.length && !(e.lvl < s.lvl[a])
                                }));
                            if (r) {
                                let s = 1,
                                    o = i.find(a => a.split("_")[0] == r.id);
                                return o && (s = parseInt(o.split("_")[1]) + 1), s > 1 && e.config.skills.splice(e.config.skills.indexOf(r.id + "_" + (s - 1)), 1), e.config.skills.push(r.id + "_" + s), r.name + " " + s
                            }
                            return ""
                        }
                        sellerDelay(e) {
                            return Math.max(.1, 40 / (3 + e))
                        }
                        assistantDelay(e) {
                            return Math.max(.05, 20 / (1 + e))
                        }
                        assistantNb(e) {
                            return 1 + Math.floor(e / 20)
                        }
                        atkRatingMultForAll() {
                            let e = 0;
                            return this.isPixie() && (e += this.pixieRatingBonus()), e
                        }
                        atkRating() {
                            let e = 5 * (this.dexterity() - 7);
                            e += this.totalEffect("ar");
                            let i = 1;
                            if (this.data.equip[3] && this.data.equip[3].id) {
                                let r = this.baseItem(this.data.equip[3].id).wtype || "";
                                "a" == r && (i *= 1 + this.amasBonus()), "s" == r && (i *= 1 + this.smasBonus()), "m" == r && (i *= 1 + this.mmasBonus())
                            }
                            return this.isActive("frenzy") ? i *= 1 + this.frenzyBonus() : this.isActive("concentrate") && (i *= 1 + this.concentrateBonus()), this.isActive("werewolf") && (i *= 1 + this.werewolfRatingBonus()), this.data.activeshrine && "combat" == this.data.activeshrine.id && (i *= 2), i *= 1 + this.atkRatingMultForAll(), Math.floor(i * e)
                        }
                        defense() {
                            let e = 0;
                            this.data.equip[0] && (e += this.armorDefense(this.data.equip[0])), this.data.equip[2] && (e += this.armorDefense(this.data.equip[2])), this.data.equip[4] && (e += this.armorDefense(this.data.equip[4])), this.data.equip[5] && (e += this.armorDefense(this.data.equip[5])), this.data.equip[6] && (e += this.armorDefense(this.data.equip[6])), this.data.equip[7] && (e += this.armorDefense(this.data.equip[7]));
                            let i = this.dexterity() / 4 + e + 10;
                            return i *= 1 + this.ironSkinBonus(), this.isActive("werebear") && (i *= 1 + this.werebearDefenseBonus()), this.data.activeshrine && "armor" == this.data.activeshrine.id && (i *= 2), Math.floor(i)
                        }
                        armorDefense(e) {
                            let i = 0;
                            if (e && e.def) {
                                i = e.def;
                                let r = this.effect(e, "defpct");
                                r && (i *= 1 + r / 100)
                            }
                            return Math.floor(i)
                        }
                        mercChances(e, i = this.data.m[0]) {
                            return this.chances(i, this.mercAtkRating(e))
                        }
                        chances(e = this.data.m[0], i = this.atkRating()) {
                            if (!e) return 0;
                            let r = i / (i + e.def) * 200;
                            return r > 95 ? 95 : r < 5 ? 5 : r
                        }
                        mercRevChances(e, i = this.data.m[0]) {
                            return this.revChances(i, this.mercDefense(e))
                        }
                        revChances(e = this.data.m[0], i = this.defense()) {
                            if (!e) return 0;
                            let r = e.atk / (e.atk + i) * 200;
                            return r > 95 ? 95 : r < 5 ? 5 : r
                        }
                        log(e, i) {
                            this.data.logs.unshift({
                                txt: e,
                                type: i
                            }), this.data.logs.length > this.conf.maxlogs && (this.data.logs = this.data.logs.slice(0, this.conf.maxlogs))
                        }
                        drinkById(e) {
                            let i = this.data.inv.findIndex(r => r.item.id == e); - 1 != i && this.data.inv[i].nb > 0 && this.drink(i)
                        }
                        drink(e) {
                            let r = this.baseItem(this.data.inv[e].item.id, !0);
                            r.use && r.use(this), this.data.inv[e].nb--, this.data.inv[e].nb <= 0 && this.data.inv.splice(e, 1)
                        }
                        sell(e) {
                            let i = this.data.inv[e].item;
                            this.data.gold += (null == i ? void 0 : i.price) || 0, this.data.inv[e].nb--, this.data.inv[e].nb <= 0 && this.data.inv.splice(e, 1), i.potion || (this.data.stats.total.sold.item++, i.unique ? this.data.stats.total.sold.magic[4]++ : 1 == i.effects.length ? this.data.stats.total.sold.magic[0]++ : 2 == i.effects.length || 3 == i.effects.length ? this.data.stats.total.sold.magic[1]++ : i.effects.length >= 4 && this.data.stats.total.sold.magic[3]++)
                        }
                        dropPotion(e, i = this.conf.drop.potion, r = "") {
                            if (he.roll(i)) {
                                let s;
                                s = r ? this.baseItem(r, !0) : he.fromArray(this.conf.potions.filter(a => a.lvl <= e && (a.anylvlover || a.lvl >= Math.min(this.conf.potionlvllimit, e - 10))));
                                let o = this.data.inv.findIndex(a => a.item.id == s.id); - 1 == o ? this.data.inv.push({
                                    item: {
                                        name: s.name,
                                        id: s.id,
                                        effects: [],
                                        potion: !0,
                                        lvlreq: 1,
                                        price: s.price || 1
                                    },
                                    nb: 1
                                }) : this.data.inv[o].nb++, this.log("Potion dropped: " + s.name, "d")
                            }
                        }
                        dropGold(e) {
                            if (he.roll(this.conf.drop.gold)) {
                                let i = Math.pow(e, 2),
                                    r = Math.pow(e, 3.5),
                                    s = he.get(i, r),
                                    o = this.totalEffect("gold");
                                o && (s *= 1 + o / 100), s = Math.floor(s), this.data.gold += s, this.log("Gold dropped: " + this.float.transform(s), "dg")
                            }
                        }
                        dropShards(e) {
                            let i = 5e-5 * e.lvl;
                            e.special && (i *= Math.pow(1 + e.special.lvl, 3));
                            let r = this.totalEffect("shard");
                            if (r && (i *= 1 + r / 100), he.roll(i)) {
                                let s = he.get(1, Math.floor(this.data.lvl / 10));
                                s < 1 && (s = 1), s > 5 && (s = 5), this.data.shards += s, this.log('<span class="text-unique">Shard dropped: ' + s + "</span>", "d")
                            }
                        }
                        shardsChances(e) {
                            return 1 / (1 + 50 / e)
                        }
                        dropRandomUnique() {
                            let e = Object.values(this.conf.uniques).map(r => r.price).reduce((r, s) => Math.max(r, s), 0),
                                i = [];
                            for (let r of Object.keys(this.conf.uniques)) {
                                let s = this.conf.uniques[r];
                                s.lvlreq < this.data.lvl + 5 && i.push({
                                    el: r,
                                    weight: Math.floor(1 + (e - s.price) / 15e3)
                                })
                            }
                            return this.dropUnique(he.fromArrayWithWeights(i))
                        }
                        dropUnique(e) {
                            let i = this.unique(e);
                            return this.getData().inv.push({
                                item: i,
                                nb: 1
                            }), this.log('Item dropped: <span class="' + this.itemCls(i) + '">' + i.name + "</span>", "d"), i
                        }
                        unique(e) {
                            return Mb.copy(this.getConf().uniques[e])
                        }
                        classSpecificEffects(e, i) {
                            let r = [],
                                s = [],
                                o = 1,
                                a = 1;
                            for (let l = 0; l < he.get(-1, 3); l++) {
                                let c = he.get(1, Math.min(3, Math.floor(e / 8))),
                                    u = he.fromArray(this.conf.cl[i].skillsCat.flatMap(p => p.skills), s);
                                s.push(u), r.push("sk_" + u.id + "_" + c), o += u.lvl * c, a = Math.max(a, u.lvl)
                            }
                            return {
                                effects: r,
                                levels: o,
                                reqlvl: a
                            }
                        }
                        isMagicalAllowed(e, i, r, s) {
                            return !(e.lvl > r + this.conf.magiclvlgap[s] || !e.types.includes(i.type) || e.wtypes && e.wtypes.length && i.wtype && !e.wtypes.includes(i.wtype) || null != e.class && null != i.class && e.class != i.class)
                        }
                        dropItem(e, i = -1, r = this.conf.drop.item, s, o, a, l, c = "") {
                            let u;
                            if (he.roll(r)) {
                                let p;
                                p = c ? this.baseItem(c) : he.fromArray(this.conf.items.filter(re => (-1 == i || re.type == i) && re.lvl <= e + 2 && (re.anylvlover || re.lvl >= Math.min(this.conf.itemlvllimit, e - 20))));
                                let h = 1,
                                    m = p.lvl;
                                (1 == p.type || 8 == p.type) && (m += 10);
                                let M = Math.pow(m, 2),
                                    I = p.name,
                                    H = [];
                                if (p.wtype && "st" == p.wtype) {
                                    let re = this.classSpecificEffects(e, 2);
                                    H.push(...re.effects), M *= Math.pow(1 + re.levels / 2, 1.3), h = re.reqlvl
                                }
                                if (p.class && 3 == p.class) {
                                    let re = this.classSpecificEffects(e, 3);
                                    H.push(...re.effects), M *= Math.pow(1 + re.levels / 2, 1.3), h = re.reqlvl
                                }
                                let Y = "",
                                    P = "";
                                if (he.roll(s)) {
                                    let re = he.fromArray(this.conf.magic.filter(ge => this.isMagicalAllowed(ge, p, e, 0)));
                                    if (H.push(this.genEffect(re.effect)), re.prefix && (Y = re.prefix), re.suffix && (P = re.suffix), re.lvl > h && (h = re.lvl), M *= Math.pow(1 + re.lvl / 2, 1.6), he.roll(o)) {
                                        let ge = he.fromArray(this.conf.magic.filter(we => this.isMagicalAllowed(we, p, e, 1) && re.prefix != we.prefix && re.suffix != we.suffix));
                                        if (H.push(this.genEffect(ge.effect)), ge.prefix && (Y = ge.prefix), ge.suffix && (P = ge.suffix), ge.lvl > h && (h = ge.lvl), M *= Math.pow(1 + ge.lvl / 2, 1.4), he.roll(a)) {
                                            let we = he.fromArray(this.conf.magic.filter(Ne => this.isMagicalAllowed(Ne, p, e, 2) && re.effect.split("_")[0] != Ne.effect.split("_")[0] && ge.effect.split("_")[0] != Ne.effect.split("_")[0]));
                                            if (H.push(this.genEffect(we.effect)), we.prefix && (Y = we.prefix), we.suffix && (P = we.suffix), we.lvl > h && (h = we.lvl), Math.pow(1 + we.lvl / 2, 1.4), he.roll(l)) {
                                                let Ne = he.fromArray(this.conf.magic.filter(Ue => this.isMagicalAllowed(Ue, p, e, 3) && re.effect.split("_")[0] != Ue.effect.split("_")[0] && ge.effect.split("_")[0] != Ue.effect.split("_")[0] && we.effect.split("_")[0] != Ue.effect.split("_")[0]));
                                                H.push(this.genEffect(Ne.effect)), Ne.prefix && (Y = Ne.prefix), Ne.suffix && (P = Ne.suffix), Ne.lvl > h && (h = Ne.lvl), Math.pow(1 + Ne.lvl / 2, 1.2)
                                            }
                                        }
                                    }
                                }
                                I = (Y ? Y + " " : "") + I + (P ? " of " + P : "");
                                let ue = !0;
                                (1 == p.type || 8 == p.type) && 0 == H.length && (ue = !1), ue && (u = {
                                    name: I,
                                    id: p.id,
                                    effects: H,
                                    lvlreq: h,
                                    price: Math.floor(M)
                                }, p.def && (u.def = he.get(p.def[0], p.def[1])), this.data.inv.push({
                                    item: u,
                                    nb: 1
                                }), this.log('Item dropped: <span class="' + this.itemCls(u) + '">' + I + "</span>", "d" + H.length))
                            }
                            return u
                        }
                        drop(e, i = this.conf.drop.item, r = 1, s = 1, o = 1, a = 1) {
                            this.dropPotion(e), this.dropGold(e);
                            let l = this.magicalChances();
                            l && (r += l / 100);
                            let c = Math.pow(this.data.lvl, this.conf.drop.magic[0]) * this.conf.drop.magic[1] + this.conf.drop.magic[2];
                            c > .9 && (c = .9), this.dropItem(e, -1, i, c * r, .5 * c * s, .5 * c * o, .5 * c * a)
                        }
                        magicalChances() {
                            let e = this.totalEffect("drop");
                            return this.data.activeshrine && "luck" == this.data.activeshrine.id && (e += 50), e
                        }
                        genEffect(e) {
                            let i = e.split("_");
                            if (2 == i.length) return i[0] + "_" + i[1];
                            if (3 == i.length) {
                                let r = he.get(parseInt(i[1]), parseInt(i[2]));
                                return i[0] + "_" + r
                            } {
                                let r = he.get(parseInt(i[1]), parseInt(i[2])),
                                    s = he.get(parseInt(i[3]), parseInt(i[4]));
                                return i[0] + "_" + r + "_" + s
                            }
                        }
                        goTo(e, i = !1) {
                            var r;
                            this.data.stun && !i || (this.data.currentl = e, this.data.m = [], this.initM(), (null === (r = this.curLevel()) || void 0 === r ? void 0 : r.home) && (this.data.life = this.maxLife(), this.data.mana = this.maxMana(), this.data.poisoned = void 0, this.data.frozen = 0, this.data.stun = 0, this.data.merc.filter(s => "fighter" == s.type).forEach(s => {
                                s.config.life = this.mercMaxLife(s)
                            }), this.data.summons.forEach(s => {
                                let o = this.baseSummon(s.type);
                                o && (s.life = 1 | o.maxlife(this))
                            }), this.data.shrine = void 0))
                        }
                        dmgReducForAll() {
                            let e = 0;
                            return this.isPixie() && (e += this.pixieReducBonus()), e
                        }
                        dmgReduc() {
                            return this.totalEffect("dmgred")
                        }
                        mDmgReduc() {
                            return this.totalEffect("mdmgred")
                        }
                        mHitTry(e, i, r = !1) {
                            let s = this.data.merc.filter(o => "fighter" == o.type && !o.config.dead && o.enabled);
                            if (r) return s.forEach(o => this.mHitTryMerc(e, o)), this.data.summons.forEach(o => this.mHitTrySummon(e, o)), this.mHitTryPlayer(e, 0 != i);
                            if (0 == i) return this.mHitTryPlayer(e, !1);
                            {
                                let o = [void 0, ...s, ...this.data.summons],
                                    a = he.fromArray(o);
                                if (!a) return this.mHitTryPlayer(e, !0);
                                a.type && "fighter" == a.type ? this.mHitTryMerc(e, a) : this.mHitTrySummon(e, a)
                            }
                            return !1
                        }
                        mHitTryPlayer(e, i) {
                            if (he.roll(this.revChances(e) / 100)) {
                                let r = he.get(e.min, e.max);
                                if (!he.roll(this.chancesToBlock() / 100)) return i && !e.ranged && (r = Math.ceil(r / 2)), this.mHitPlayer(e.type || "ph", r, e);
                                {
                                    this.log(e.name + ": Blocked", "h");
                                    let o = this.totalEffect("fbl");
                                    this.data.rep = this.speed() * (1 - o / 100)
                                }
                            } else this.log(e.name + ": Miss", "h");
                            return !1
                        }
                        mHitTryMerc(e, i) {
                            if (he.roll(this.mercRevChances(i, e) / 100)) {
                                let r = he.get(e.min, e.max);
                                this.mHitMerc(e.type || "ph", r, e, i)
                            } else this.log(e.name + ": Miss", "h")
                        }
                        mHitTrySummon(e, i) {
                            let r = this.baseSummon(i.type);
                            if (r)
                                if (he.roll(this.revChances(e, r.def(this)) / 100)) {
                                    let s = he.get(e.min, e.max);
                                    this.mHitSummon(e.type || "ph", s, e, i)
                                } else this.log(e.name + ": Miss", "h")
                        }
                        mHitAll(e, i, r) {
                            return this.data.merc.filter(o => "fighter" == o.type && !o.config.dead && o.enabled).forEach(o => this.mHitMerc(e, i, r, o)), this.data.summons.forEach(o => this.mHitSummon(e, i, r, o)), this.mHitPlayer(e, i, r)
                        }
                        mHitPlayer(e, i, r) {
                            if (e && "ph" != e) {
                                if (i *= 2 * (100 - this.resistance(e)) / 100, "c" == e) {
                                    let o = 5,
                                        a = this.totalEffect("redfrz");
                                    a && (o /= a), this.data.frozen = o
                                }
                                if ("p" == e) {
                                    let o = 5,
                                        a = this.totalEffect("plen", 1, [], !0);
                                    a && (o *= a), this.data.poisoned = {
                                        length: o,
                                        dmg: i / 10
                                    }
                                } else i -= this.mDmgReduc()
                            } else i -= this.dmgReducForAll(), i -= this.dmgReduc();
                            if (i < 0) i = 0;
                            else {
                                if (r.name && this.log(r.name + ": Hit (" + Math.floor(i) + " " + this.iconForType(e) + ")", "h"), this.data.frozenarmor && (this.data.frozenarmor -= i, i = 0, this.data.frozenarmor <= 0)) {
                                    i = -this.data.frozenarmor, this.data.frozenarmor = 0;
                                    let s = this.data.actives.find(o => "frozenarmor" == o.id);
                                    s && (s.time = 0)
                                }
                                if (this.data.life -= i, r.burn && (this.data.mana -= 2 * i, this.data.mana < 0 && (this.data.mana = 0)), r.stun && !this.data.frozenarmor && he.roll(r.stun[0])) {
                                    let s = r.stun[1],
                                        o = this.totalEffect("stun");
                                    o && (s /= o), this.data.stun = s
                                }
                                if (this.data.life <= 0) return this.die(r.name), !0
                            }
                            return !1
                        }
                        mHitMerc(e, i, r, s) {
                            if (!s.config.dead && s.enabled)
                                if (e && "ph" != e ? i *= 2 * (100 - this.mercRes(s)) / 100 : i -= this.dmgReducForAll(), i < 0) i = 0;
                                else if (r.name && this.log(r.name + ": Hit " + s.name + " (" + Math.floor(i) + " " + this.iconForType(e) + ")", "h"), s.config.life -= i, s.config.life <= 0) {
                                s.config.dead = !0;
                                let o = Math.floor((s.xp - this.xpReqAbs(s.lvl - 1)) / 12);
                                o < 0 && (o = 0), o > s.xp - this.xpReqAbs(s.lvl - 1) && (o = s.xp - this.xpReqAbs(s.lvl - 1)), s.xp -= o, this.log('<i class="fas fa-skull"></i> ' + s.name + " have been killed by " + r.name + ".", "e")
                            }
                        }
                        mHitSummon(e, i, r, s) {
                            let o = this.baseSummon(s.type);
                            if (o)
                                if (e && "ph" != e ? i *= 2 * (100 - this.summonRes()) / 100 : i -= this.dmgReducForAll(), i < 0) i = 0;
                                else if (r.name && this.log(r.name + ": Hit " + o.name + " (" + Math.floor(i) + " " + this.iconForType(e) + ")", "h"), s.life -= i, s.life <= 0) {
                                let a = this.data.summons.findIndex(l => l.type == s.type);
                                this.data.summons.splice(a, 1)
                            }
                        }
                        die(e) {
                            let i = Math.floor((this.data.xp - this.xpReq(-1)) / 10),
                                r = 1;
                            this.isAchievementDone("die10") && (r -= .1), this.isAchievementDone("die1e2") && (r -= .15), this.isAchievementDone("die1e3") && (r -= .2), i *= r, i < 0 && (i = 0), i > this.data.xp - this.xpReq(-1) && (i = this.data.xp - this.xpReq(-1)), this.data.xp -= i, this.log('<i class="fas fa-skull"></i> You have been killed by ' + (e || "") + ". Xp lost: " + this.float.transform(i), "e"), this.goTo(this.conf.l[this.data.act][0].id, !0), this.data.summons = [], this.data.stats.total.death++, this.data.stats.run.death++
                        }
                        canAutoSkip() {
                            return !!(this.isAchievementDone("craft10") && 1 == this.currentAct() || this.isAchievementDone("craft100") && 2 == this.currentAct())
                        }
                        killM(e) {
                            this.data.stats.total.killed++, this.data.stats.run.killed++, e.special && e.special.id && (this.data.stats.total.bosses[e.special.id] ? this.data.stats.total.bosses[e.special.id]++ : this.data.stats.total.bosses[e.special.id] = 1), this.isVine() && (this.data.life = Math.min(this.maxLife(), this.data.life + this.vineLifeGainedRolled()), this.data.merc.filter(i => "fighter" == i.type && i.enabled && !i.config.dead).forEach(i => i.config.life = Math.min(this.mercMaxLife(i), i.config.life + this.vineLifeGainedRolled())), this.data.summons.forEach(i => {
                                let r = this.baseSummon(i.type);
                                r && r.maxlife && (i.life = Math.min(r.maxlife(this), i.life + this.vineLifeGainedRolled()))
                            }))
                        }
                        restoreLife(e) {
                            this.data.life = Math.min(this.data.life + e, this.maxLife())
                        }
                        restoreMana(e) {
                            this.data.mana = Math.min(this.data.mana + e, this.maxMana())
                        }
                        chancesToBlock(e) {
                            if (!e && this.data.equip[4] && (e = this.data.equip[4]), !e) return 0;
                            let i = this.totalEffect("bl"),
                                r = this.baseItem(e.id);
                            r.block || (r.block = 0);
                            let s = 20 + Math.floor((r.block + i) * (this.dexterity() - 6) / (2 * this.data.lvl));
                            return this.isActive("parry") && (s += 100 * this.parryBonus()), s > 75 ? 75 : s
                        }
                        resistance(e) {
                            let i = 0;
                            return i += this.totalEffect("res" + e), i += this.totalEffect("resa"), i += this.resistanceBonus(), this.isPixie() && (i += this.pixieResBonus()), 3 == this.data.cl && ("p" == e || "c" == e) && (i += 15), i -= this.data.act * this.conf.resredbyact, this.data.activeshrine && this.data.activeshrine.id == "res" + e && (i += 75), i > 75 && (i = 75), i
                        }
                        strength() {
                            let e = this.data.str;
                            return e += this.totalEffect("str"), e
                        }
                        dexterity() {
                            let e = this.data.dex;
                            return e += this.totalEffect("dex"), e
                        }
                        lifeRegen(e = !0, i = 20) {
                            let r = this.conf.baseliferegen;
                            if (e) {
                                r *= this.data.vit;
                                let s = this.totalEffect("lifereg");
                                s && (r *= 1 + s / 100)
                            } else r *= i;
                            if (this.isPixie()) {
                                let s = this.pixieRegenBonus();
                                s && (r *= 1 + s)
                            }
                            return r
                        }
                        manaRegen() {
                            let e = this.conf.basemanaregen * Math.pow(this.data.ene, 1.2),
                                i = 1 + this.heatBonus();
                            i && (e *= i);
                            let r = this.totalEffect("manareg");
                            if (r && (e *= 1 + r / 100), this.isPixie()) {
                                let s = this.pixieRegenBonus();
                                s && (e *= 1 + s)
                            }
                            return e
                        }
                        uniqueEquipped() {
                            return this.data.equip.filter(e => e && e.unique).length
                        }
                        initMerchants() {
                            for (; this.data.merchants.length < this.conf.merchants;) {
                                let e = he.get(1, 100) / 100,
                                    i = he.get(1, 100) / 100,
                                    r = he.get(1, 100) / 100,
                                    s = he.get(1, 100) / 100;
                                this.data.merchants.push({
                                    name: he.fromArray(this.conf.merchantsName.filter(o => !this.data.merchants.find(a => a.name == o))),
                                    timeleft: he.get(120, 900),
                                    ratios: [e, i, r, s],
                                    dratios: [Math.floor(100 * e), Math.floor(e * i * 100), Math.floor(e * i * r * 100), Math.floor(e * i * r * s * 100)]
                                })
                            }
                        }
                        initMercs() {
                            this.data.mercToHire = [];
                            let e = he.get(Math.max(this.data.lvl - this.conf.mercsLvllimit, 1), Math.max(this.data.lvl - 1, 1)),
                                i = [];
                            for (let r = 0; r < this.assistantNb(e); r++) i.push({
                                type: "",
                                treshold: 1
                            });
                            this.data.mercToHire.push({
                                type: this.conf.mercs[0].id,
                                name: he.fromArray(this.conf.mercNames),
                                lvl: e,
                                xp: this.xpReqAbs(e - 1),
                                enabled: !1,
                                config: {
                                    rep: 0,
                                    actions: i
                                }
                            }), e = he.get(Math.max(this.data.lvl - this.conf.mercsLvllimit, 1), Math.max(this.data.lvl - 1, 1)), this.data.mercToHire.push({
                                type: this.conf.mercs[1].id,
                                name: he.fromArray(this.conf.mercNames, [...this.data.mercToHire, ...this.data.merc].map(r => r.name)),
                                lvl: e,
                                xp: this.xpReqAbs(e - 1),
                                enabled: !1,
                                config: Mb.copy(this.conf.mercs[1].config)
                            });
                            for (let r = 0; r < this.conf.mercsToHire; r++) {
                                let s = he.get(Math.max(this.data.lvl - this.conf.mercsLvllimit, 1), Math.max(this.data.lvl - 1, 1)),
                                    o = {
                                        skills: [],
                                        life: 1,
                                        dead: !1,
                                        rep: 0
                                    },
                                    a = {
                                        type: this.conf.mercs[2].id,
                                        name: he.fromArray(this.conf.mercNames, [...this.data.mercToHire, ...this.data.merc].map(c => c.name)),
                                        lvl: s,
                                        xp: this.xpReqAbs(s - 1),
                                        enabled: !1,
                                        config: o
                                    };
                                a.config.life = this.mercMaxLife(a);
                                let l = 1 + Math.floor(s / 5);
                                for (let c = 0; c < l; c++) this.addMercSkill(a);
                                this.data.mercToHire.push(a)
                            }
                            this.data.mercToHireTimeleft = he.get(120, 900)
                        }
                        gamblingCost(e) {
                            return Math.max(100, (1 + e[0]) * (1 + e[1]) * (1 + e[2]) * (1 + e[3]) * (1 + e[3]) * 10 * this.data.lvl / 50)
                        }
                        mercMinDmg(e) {
                            let i = 2 * e.lvl + this.mercEffect(e, "mindmg");
                            return i *= 1 + this.mercEffect(e, "dmgpct") / 100, i *= 1 + this.damageMultForAll(), Math.floor(i)
                        }
                        mercMaxDmg(e) {
                            let i = 5 * e.lvl + this.mercEffect(e, "maxdmg");
                            return i *= 1 + this.mercEffect(e, "dmgpct") / 100, i *= 1 + this.damageMultForAll(), Math.floor(i)
                        }
                        mercAtkRating(e) {
                            let i = 15 + 10 * e.lvl;
                            return i *= 1 + this.mercEffect(e, "arpct") / 100, i *= 1 + this.atkRatingMultForAll(), Math.floor(i)
                        }
                        mercDefense(e) {
                            let i = 15 + 10 * e.lvl;
                            return i *= 1 + this.mercEffect(e, "defpct") / 100, Math.floor(i)
                        }
                        mercRes(e) {
                            let i = e.lvl / 2;
                            return i -= this.data.act * this.conf.resredbyact, i += this.mercEffect(e, "resa"), Math.floor(i)
                        }
                        mercSpeed(e) {
                            let i = 1.4;
                            return i /= 1 + this.mercEffect(e, "spd") / 100, i /= 1 + this.speedMultForAll(), Math.floor(100 * i) / 100
                        }
                        mercMaxLife(e) {
                            let i = 15 + 6 * e.lvl;
                            return i *= 1 + this.mercEffect(e, "lifepct") / 100, Math.floor(i)
                        }
                        summonRes() {
                            let e = -this.data.act * this.conf.resredbyact;
                            return e += this.summonResistBonus(), Math.floor(e)
                        }
                        resetSkills(e = !1) {
                            this.data.srem = this.data.srem + this.data.skills.reduce((i, r) => i + r.level, 0), this.data.skills = [], this.data.autocast = [], this.data.quickslots.skills = this.data.quickslots.skills.map(i => ""), e && (this.data.rem = this.data.rem + (this.data.str - this.conf.istr) + (this.data.dex - this.conf.idex) + (this.data.vit - this.conf.ivit) + (this.data.ene - this.conf.iene), this.data.str = this.conf.istr, this.data.dex = this.conf.idex, this.data.vit = this.conf.ivit, this.data.ene = this.conf.iene)
                        }
                        maxAutocast() {
                            let e = this.class().autocast || 0,
                                i = this.totalEffect("autocast");
                            return i && (e += i), this.data.quest >= 15 && e++, e
                        }
                        openAct(e) {
                            this.data.act = e - 1, this.data.l.push({
                                id: this.conf.l[e - 1][0].id,
                                progress: 0,
                                done: !0
                            }), this.log('<span class="text-success">New area available: ' + this.conf.l[e - 1][0].name + "</span>", "n"), this.data.l.push({
                                id: this.conf.l[e - 1][1].id,
                                progress: 0,
                                done: !1
                            }), this.log('<span class="text-success">New area available: ' + this.conf.l[e - 1][1].name + "</span>", "n")
                        }
                        strSpeed(e) {
                            return e <= .4 ? "Lightning fast" : e <= .6 ? "Very fast" : e <= .8 ? "Fast" : e <= 1 ? "Normal" : e <= 1.2 ? "Slow" : "Very slow"
                        }
                        checkItemReqs(e) {
                            if (!e || e.lvlreq && this.data.lvl < e.lvlreq) return !1;
                            let i = this.baseItem(e.id);
                            return !(i.req_str && this.strength() < this.strReq(e) || i.req_dex && this.dexterity() < this.dexReq(e) || null != i.class && i.class != this.data.cl)
                        }
                        checkItemsReqs() {
                            for (let i = 0; i < this.data.equip.length; i++) this.data.equip[i] && (this.checkItemReqs(this.data.equip[i]) || this.unequip(i));
                            let e = this.weapon();
                            e && e.base && e.base.w2handed && this.data.equip[4] && this.unequip(4), this.data.autocast.length > this.maxAutocast() && this.data.autocast.splice(this.maxAutocast());
                            for (let i = 0; i < this.data.quickslots.skills.length; i++) 0 == this.skillLevel(this.data.quickslots.skills[i]) && (this.data.quickslots.skills[i] = "")
                        }
                        unequip(e) {
                            let i = this.data.equip[e];
                            i && this.data.inv.push({
                                item: i,
                                nb: 1
                            }), this.data.equip[e] = void 0, this.checkItemsReqs()
                        }
                        mercCost(e) {
                            let i = 1;
                            return "fighter" == e.type && (i = e.lvl), Math.floor(100 * Math.pow(i, 3))
                        }
                        resurrectCost(e) {
                            return Math.floor(this.mercCost(e) / 4)
                        }
                        spellCost(e) {
                            let i = this.skill(e);
                            if (!i || !i.cost) return 0;
                            let r = i.cost(this) || 0,
                                s = this.manafreezeBonus();
                            return s && (r *= 1 - s), Math.ceil(r)
                        }
                        baseSummon(e) {
                            return this.conf.summons.find(i => i.id == e)
                        }
                        summon(e) {
                            let i = this.data.summons.findIndex(s => s.type == e); - 1 != i && this.data.summons.splice(i, 1);
                            let r = this.baseSummon(e);
                            this.data.summons.push({
                                type: e,
                                life: (null == r ? void 0 : r.maxlife(this)) || 0,
                                rep: 0
                            })
                        }
                        lvlReq(e) {
                            let i = this.totalEffect("lvlreq");
                            return i && (e -= i), e < 1 && (e = 1), e
                        }
                        classLvlReq(e) {
                            return this.lvlReq(this.conf.cl[e].reqlvl)
                        }
                        currentAct() {
                            return this.conf.l.findIndex(e => e.find(i => {
                                var r;
                                return i.id == (null === (r = this.curLevel()) || void 0 === r ? void 0 : r.id)
                            })) + 1
                        }
                        reqm() {
                            let e = this.conf.basereqm;
                            return this.isAchievementDone("unlock1") && 1 == this.currentAct() && e--, this.isAchievementDone("unlock2") && this.currentAct() <= 2 && e--, this.isAchievementDone("unlock3") && this.currentAct() <= 3 && e--, e
                        }
                        disciplineBonus(e = 0) {
                            let i = this.skillLevel("discipline") + e;
                            return Math.pow(i, .8) / 10
                        }
                        healBonus(e = 0) {
                            let i = this.skillLevel("heal") + e;
                            return Math.floor(3 * Math.pow(i, 1.1))
                        }
                        parryBonus(e = 0) {
                            let i = this.skillLevel("parry") + e;
                            return Math.pow(i, .5) / 10
                        }
                        parryDuration(e = 0) {
                            let i = this.skillLevel("parry") + e;
                            return Math.floor(5 * Math.pow(i, .4))
                        }
                        magicMissileDmg(e = 0) {
                            let i = this.skillLevel("magicmissile") + e;
                            return Math.floor(4 * Math.pow(i, 1.4))
                        }
                        shockDmg(e = 0) {
                            let i = this.skillLevel("shock") + e;
                            return Math.floor(2 * Math.pow(i, 1.3))
                        }
                        shockStunDuration(e = 0) {
                            let i = this.skillLevel("shock") + e;
                            return .3 * Math.pow(i, .8)
                        }
                        amasBonus(e = 0) {
                            let i = this.skillLevel("amas") + e;
                            return Math.pow(i, .8) / 5
                        }
                        smasBonus(e = 0) {
                            let i = this.skillLevel("smas") + e;
                            return Math.pow(i, .8) / 5
                        }
                        mmasBonus(e = 0) {
                            let i = this.skillLevel("mmas") + e;
                            return Math.pow(i, .8) / 5
                        }
                        ironSkinBonus(e = 0) {
                            return (this.skillLevel("ironskin") + e) / 8
                        }
                        resistanceBonus(e = 0) {
                            let i = this.skillLevel("resistance") + e;
                            return Math.floor(15 * Math.pow(i, .4))
                        }
                        bashBonus(e = 0) {
                            let i = this.skillLevel("bash") + e;
                            return Math.pow(i, .6) / 5
                        }
                        bashStunDuration(e = 0) {
                            let i = this.skillLevel("bash") + e;
                            return 1.2 * Math.pow(i, .4)
                        }
                        concentrateBonus(e = 0) {
                            let i = this.skillLevel("concentrate") + e;
                            return Math.pow(i, .6) / 4
                        }
                        concentrateDuration(e = 0) {
                            return 5 * (this.skillLevel("concentrate") + e)
                        }
                        frenzyBonus(e = 0) {
                            let i = this.skillLevel("frenzy") + e;
                            return Math.pow(i, .55) / 3
                        }
                        frenzyDuration(e = 0) {
                            return 5 * (this.skillLevel("frenzy") + e)
                        }
                        heatBonus(e = 0) {
                            let i = this.skillLevel("heat") + e;
                            return .5 * Math.pow(i, .8)
                        }
                        manafreezeBonus(e = 0) {
                            return 1 - 1 / (1 + (this.skillLevel("manafreeze") + e) / 8)
                        }
                        fireballDmg(e = 0) {
                            let i = this.skillLevel("fireball") + e;
                            return Math.floor(5 * Math.pow(i, 1.2) * (1 + this.fireMasteryTotalBonus() / 100))
                        }
                        fireballCost(e = 0) {
                            let i = this.skillLevel("fireball") + e;
                            return Math.floor(3 * Math.pow(i, .5))
                        }
                        meteorDmg(e = 0) {
                            let i = this.skillLevel("meteor") + e;
                            return Math.floor(6 * Math.pow(i, 1.2) * (1 + this.fireMasteryTotalBonus() / 100))
                        }
                        meteorLengthDmg(e = 0) {
                            let i = this.skillLevel("meteor") + e;
                            return Math.floor(2 * Math.pow(i, 1.2) * (1 + this.fireMasteryTotalBonus() / 100))
                        }
                        meteorCost(e = 0) {
                            let i = this.skillLevel("meteor") + e;
                            return Math.floor(10 * Math.pow(i, .5))
                        }
                        frozenOrbDmg(e = 0) {
                            let i = this.skillLevel("frozenorb") + e;
                            return Math.floor(7 * Math.pow(i, 1.2) * (1 + this.coldMasteryTotalBonus() / 100))
                        }
                        frozenOrbCost(e = 0) {
                            let i = this.skillLevel("frozenorb") + e;
                            return Math.floor(10 * Math.pow(i, .5))
                        }
                        frozenArmorDmg(e = 0) {
                            let i = this.skillLevel("frozenarmor") + e;
                            return Math.floor(6 * Math.pow(i, 1.1) * (1 + this.coldMasteryTotalBonus() / 100))
                        }
                        frozenArmorCost(e = 0) {
                            let i = this.skillLevel("frozenarmor") + e;
                            return Math.floor(4 * Math.pow(i, .5))
                        }
                        fireMasteryBonus(e = 0) {
                            let i = this.skillLevel("firemastery") + e;
                            return .9 * Math.pow(i, .8)
                        }
                        fireMasteryTotalBonus() {
                            return this.fireMasteryBonus() * Math.pow(this.data.stats.total.skills.firemastery || 0, .75)
                        }
                        coldMasteryBonus(e = 0) {
                            let i = this.skillLevel("coldmastery") + e;
                            return .9 * Math.pow(i, .8)
                        }
                        coldMasteryTotalBonus() {
                            return this.coldMasteryBonus() * Math.pow(this.data.stats.total.skills.coldmastery || 0, .75)
                        }
                        crowMinDmg(e = 0) {
                            let i = this.skillLevel("summoncrow") + e,
                                r = 1 * Math.pow(i, 1.2);
                            return Math.floor(r)
                        }
                        crowMaxDmg(e = 0) {
                            let i = this.skillLevel("summoncrow") + e,
                                r = 2 * Math.pow(i, 1.25);
                            return Math.floor(r)
                        }
                        crowAtkRating(e = 0) {
                            let i = this.skillLevel("summoncrow") + e,
                                r = 10 * Math.pow(i, 1.2);
                            return Math.floor(r)
                        }
                        crowSpeed(e = 0) {
                            let i = this.skillLevel("summoncrow") + e;
                            return Math.floor(2 / (1 + (i - 1) / 20) * 100) / 100
                        }
                        crowDef(e = 0) {
                            let i = this.skillLevel("summoncrow") + e,
                                r = 10 * Math.pow(i, 1.2);
                            return Math.floor(r)
                        }
                        crowMaxLife(e = 0) {
                            let i = this.skillLevel("summoncrow") + e,
                                r = 10 * Math.pow(i, 1.4);
                            return Math.floor(r)
                        }
                        wolfMinDmg(e = 0) {
                            let i = this.skillLevel("summonwolf") + e,
                                r = 1 * Math.pow(i, 1.5);
                            return r *= 1 + this.damageMultForAll(), Math.floor(r)
                        }
                        wolfMaxDmg(e = 0) {
                            let i = this.skillLevel("summonwolf") + e,
                                r = 2 * Math.pow(i, 1.55);
                            return r *= 1 + this.damageMultForAll(), Math.floor(r)
                        }
                        wolfAtkRating(e = 0) {
                            let i = this.skillLevel("summonwolf") + e;
                            return Math.floor(10 * Math.pow(i, 1.2) * (1 + this.atkRatingMultForAll()))
                        }
                        wolfSpeed(e = 0) {
                            let r = 1.6 / (1 + (this.skillLevel("summonwolf") + e - 1) / 10);
                            return r /= 1 + this.speedMultForAll(), Math.floor(100 * r) / 100
                        }
                        wolfDef(e = 0) {
                            let i = this.skillLevel("summonwolf") + e,
                                r = 10 * Math.pow(i, 1.4);
                            return r *= 1 + this.summonMasteryDefenseBonus(), Math.floor(r)
                        }
                        wolfMaxLife(e = 0) {
                            let i = this.skillLevel("summonwolf") + e,
                                r = 10 * Math.pow(i, 1.6);
                            return r *= 1 + this.summonMasteryLifeBonus(), Math.floor(r)
                        }
                        pixieDef(e = 0) {
                            let i = this.skillLevel("summonpixie") + e,
                                r = 10 * Math.pow(i, 1.2);
                            return r *= 1 + this.summonMasteryDefenseBonus(), Math.floor(r)
                        }
                        pixieMaxLife(e = 0) {
                            let i = this.skillLevel("summonpixie") + e,
                                r = 9 * Math.pow(i, 1.2);
                            return r *= 1 + this.summonMasteryLifeBonus(), Math.floor(r)
                        }
                        pixieReducBonus(e = 0) {
                            let i = this.skillLevel("summonpixie") + e;
                            return Math.floor(1 * Math.pow(i, 1.1))
                        }
                        pixieRegenBonus(e = 0) {
                            let i = this.skillLevel("summonpixie") + e;
                            return i < 5 ? 0 : .1 * Math.pow(i - 4, 1.1)
                        }
                        pixieFreezeBonus(e = 0) {
                            let i = this.skillLevel("summonpixie") + e;
                            return i < 10 ? 0 : .05 * Math.pow(i - 9, .6)
                        }
                        pixieDmgBonus(e = 0) {
                            let i = this.skillLevel("summonpixie") + e;
                            return i < 20 ? 0 : .15 * Math.pow(i - 19, 1.2)
                        }
                        pixieResBonus(e = 0) {
                            let i = this.skillLevel("summonpixie") + e;
                            return i < 15 ? 0 : Math.floor(10 * Math.pow(i - 14, .5))
                        }
                        pixieRatingBonus(e = 0) {
                            let i = this.skillLevel("summonpixie") + e;
                            return i < 25 ? 0 : .5 * Math.pow(i - 24, .7)
                        }
                        pixieSpeedBonus(e = 0) {
                            let i = this.skillLevel("summonpixie") + e;
                            return i < 30 ? 0 : .25 * Math.pow(i - 29, .5)
                        }
                        summonResistBonus(e = 0) {
                            let i = this.skillLevel("summonresist") + e;
                            return Math.floor(15 * Math.pow(i, .5))
                        }
                        vineDef(e = 0) {
                            let i = this.skillLevel("carrionvine") + e,
                                r = 10 * Math.pow(i, 1.3);
                            return r *= 1 + this.summonMasteryDefenseBonus(), Math.floor(r)
                        }
                        vineMaxLife(e = 0) {
                            let i = this.skillLevel("carrionvine") + e,
                                r = 9 * Math.pow(i, 1.15);
                            return r *= 1 + this.summonMasteryLifeBonus(), Math.floor(r)
                        }
                        vineLifeGained(e = 0) {
                            let i = this.skillLevel("carrionvine") + e;
                            return Math.floor(.5 + .6 * Math.pow(i, 1.4))
                        }
                        vineLifeGainedRolled() {
                            return he.get(1, this.vineLifeGained())
                        }
                        summonMasteryLifeBonus(e = 0) {
                            let i = this.skillLevel("summonmastery") + e;
                            return .09 * Math.pow(i, .7)
                        }
                        summonMasteryDefenseBonus(e = 0) {
                            let i = this.skillLevel("summonmastery") + e;
                            return .12 * Math.pow(i, .8)
                        }
                        lycanthropyDurationBonus(e = 0) {
                            return 40 + 20 * (this.skillLevel("lycanthropy") + e)
                        }
                        lycanthropyLifeBonus(e = 0) {
                            let i = this.skillLevel("lycanthropy") + e;
                            return .15 * Math.pow(i, .8)
                        }
                        werewolfSpeedBonus(e = 0) {
                            let i = this.skillLevel("werewolf") + e;
                            return .05 * Math.pow(i, .7)
                        }
                        werewolfRatingBonus(e = 0) {
                            let i = this.skillLevel("werewolf") + e;
                            return .1 * Math.pow(i, 1.1)
                        }
                        werebearDmgBonus(e = 0) {
                            let i = this.skillLevel("werebear") + e;
                            return .1 * Math.pow(i, 1.1)
                        }
                        werebearDefenseBonus(e = 0) {
                            let i = this.skillLevel("werebear") + e;
                            return .15 * Math.pow(i, 1.2)
                        }
                        shapeShiftingPreEffect() {
                            this.data.life += this.lycanthropyLifeBonus();
                            let e = this.data.actives.findIndex(i => "werebear" == i.id); - 1 != e && this.data.actives.splice(e, 1), e = this.data.actives.findIndex(i => "werewolf" == i.id), -1 != e && this.data.actives.splice(e, 1)
                        }
                        shapeShiftingEffect() {
                            this.data.life += this.data.life * this.lycanthropyLifeBonus()
                        }
                        updateVersion() {
                            console.log("game version: " + this.conf.version), console.log("save version: " + this.data.version), this.conf.version != this.data.version ? (this.data.version < 2 && (this.data.autopause = !1, this.data.options = {
                                invpause: !1
                            }), this.data.version < 3 && (this.data.cooldowns = [], this.data.act = 0, this.data.shards = 0, this.data.stun = 0, this.data.autocast = [], this.data.merc = [], this.data.mercToHire = [], this.data.mercToHireTimeleft = 0, this.data.maxmercs = this.data.quest > 1 ? 1 : 0, this.data.stashlimit = 3, this.data.stats.total.bosses = {}, this.data.stats.total.shrines = 0, this.data.stats.total.skillnb = 0, this.data.stats.run.skillnb = 0, this.data.achievements = [], this.data.skillreset = this.data.quest > 0 ? 1 : 0, this.data.showGoldLogs = !0, this.data.showNonMagicalItemsLogs = !0), this.data.version < 5 && this.data.quest >= 6 && 0 == this.data.act && this.openAct(2), this.data.version < 7 && this.data.quickslots.skills.length > 3 && this.data.quickslots.skills.splice(3), this.data.version < 8 && (this.data.summons = [], this.data.stats.total.sold = {
                                item: 0,
                                magic: [0, 0, 0, 0, 0]
                            }, this.data.stats.total.craft = 0, this.data.quest >= 12 && this.data.act < 2 && this.openAct(3), [...this.data.inv.map(e => e.item), ...this.data.equip].filter(e => e && e.unique).forEach(e => {
                                if (!e) return;
                                let i = Object.values(this.conf.uniques).find(r => r.name == e.name);
                                i && i.def && (e.def = i.def, console.log("updating object def: " + e.name + "(" + e.def + ")"))
                            })), this.data.version < 10 && [...this.data.inv.map(e => e.item), ...this.data.equip, ...this.data.stash].forEach(e => {
                                if (e)
                                    for (let i of e.effects) {
                                        let r = i.split("_");
                                        if ("sk" == r[0]) {
                                            let s = this.skill(r[1]);
                                            s && e.lvlreq < s.lvl && (e.lvlreq = s.lvl)
                                        }
                                    }
                            }), console.log("-> Upgrade done"), this.data.version = this.conf.version) : console.log("-> No upgrade needed")
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(Ce(eo), Ce(Da), Ce(ba))
                    }, t.\u0275prov = $e({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
                var Bp = L(206);
                let Tb = (() => {
                        class t {
                            constructor(e, i, r) {
                                this.data = e, this.conf = i, this.dataService = r, this.id = "rakanishu-save"
                            }
                            encryptData(e = !0) {
                                let i = JSON.parse(JSON.stringify(this.data));
                                delete i.conf, i.shrine = void 0, i.logs = [], i.frozenarmor = 0, i.m = [], i.summons = [];
                                let r = JSON.stringify(i);
                                return Bp.AES.encrypt(r, this.conf.aes_key).toString()
                            }
                            decryptData(e) {
                                const i = Bp.AES.decrypt(e, this.conf.aes_key);
                                return JSON.parse(i.toString(Bp.enc.Utf8))
                            }
                            save(e = !0) {
                                let i = Date.now();
                                this.data.savetime = i, localStorage.setItem(this.id, this.encryptData(e))
                            }
                            delete() {
                                localStorage.removeItem(this.id)
                            }
                            load(e = null) {
                                e || (e = localStorage.getItem(this.id)), e && (this.data.load(this.decryptData(e)), this.data.savetime = Date.now(), this.dataService.updateVersion())
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(Da), Ce(eo), Ce(Ic))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })(),
                    Q4 = (() => {
                        class t {
                            constructor(e, i, r, s, o) {
                                this.float = e, this.data = i, this.conf = r, this.dataService = s, this.saveService = o, this.rr = 100, this.lt = 0, this.subscriptions = [], this.engine = sc(0, this.rr)
                            }
                            ngOnDestroy() {
                                this.stop()
                            }
                            stop() {
                                this.subscriptions.forEach(e => e.unsubscribe())
                            }
                            start() {
                                this.lt = Date.now(), this.subscriptions.push(this.engine.subscribe(this.run.bind(this)))
                            }
                            run(e) {
                                var i, r;
                                let s = Date.now(),
                                    o = (s - this.lt) / 1e3;
                                if (this.lt = s, s - this.data.savetime >= this.conf.autosave_delay && this.saveService.save(!1), this.data.pause || this.data.autopause) return;
                                if (this.data.m && this.data.m.length > 0 && this.data.rep <= 0 && !this.data.stun)
                                    if (this.data.rep = this.dataService.speed(), he.roll(this.dataService.chances(this.data.m[0]) / 100)) {
                                        let l = this.dataService.minDamage(),
                                            c = this.dataService.maxDamage(),
                                            u = he.get(l.ph, c.ph);
                                        if (this.dataService.hitM(u, "ph", !1), c.f) {
                                            let p = he.get(l.f, c.f);
                                            this.dataService.hitM(p, "f", !1)
                                        }
                                        if (c.l) {
                                            let p = he.get(l.l, c.l);
                                            this.dataService.hitM(p, "l", !1)
                                        }
                                        if (c.c) {
                                            let p = he.get(l.c, c.c);
                                            this.dataService.hitM(p, "c", !1)
                                        }
                                        c.p && (this.data.m[0].poisoned = {
                                            dmg: l.p,
                                            length: c.p
                                        })
                                    } else this.dataService.log("You: Miss", "h");
                                this.data.rep -= o, this.data.frozen && (this.data.frozen -= o, this.data.frozen <= 0 && (this.data.frozen = 0)), this.data.stun && (this.data.stun -= o, this.data.stun <= 0 && (this.data.stun = 0)), this.data.poisoned && (this.data.poisoned.length -= o, (null === (i = this.dataService.curLevel()) || void 0 === i ? void 0 : i.home) || (this.data.life -= this.data.poisoned.dmg * o), this.data.life <= 0 && this.dataService.die("Poison"), this.data.poisoned.length <= 0 && (this.data.poisoned = void 0));
                                for (let l of this.data.autocast) {
                                    let u = this.dataService.skill(this.data.quickslots.skills[l]);
                                    u && this.dataService.isSkillAllowed(u) && !this.dataService.isSkillActive(u) && this.dataService.useSkill(u)
                                }
                                e % 10 == 0 && this.dataService.isActive("meteor") && this.dataService.hitM(this.dataService.meteorLengthDmg(), "f", !0, !0);
                                for (let l of this.data.merc)
                                    if (l.enabled) {
                                        let c = this.conf.mercs.find(u => u.id == l.type);
                                        c && c.act(this.dataService, l.config, o, l)
                                    } this.data.merc.filter(l => "fighter" == l.type).forEach(l => {
                                    if (!l.config.dead && l.enabled) {
                                        if (this.data.m && this.data.m.length > 0 && l.config.rep <= 0) {
                                            l.config.rep = this.dataService.mercSpeed(l);
                                            let c = he.fromArray(this.data.m);
                                            if (he.roll(this.dataService.mercChances(l, c) / 100)) {
                                                let u = he.get(this.dataService.mercMinDmg(l), this.dataService.mercMaxDmg(l));
                                                this.dataService.hitMc(c, u, "ph", !0, l.name);
                                                let p = this.dataService.mercEffect(l, "lsto");
                                                p && (l.config.life += u * p / 100);
                                                let h = this.dataService.mercEffect(l, "frz");
                                                h && (c.frozen = h)
                                            } else this.dataService.log(l.name + ": Miss", "h")
                                        }
                                        l.config.rep -= o, l.config.life += this.dataService.lifeRegen(!1), l.config.life > this.dataService.mercMaxLife(l) && (l.config.life = this.dataService.mercMaxLife(l))
                                    }
                                });
                                for (let l of this.data.summons) {
                                    let c = this.dataService.baseSummon(l.type);
                                    !c || (this.data.m.length && (c && c.speed && l.rep <= 0 && (l.rep = (null == c ? void 0 : c.speed(this.dataService)) || 90, null == c || c.act(this.dataService)), l.rep -= o), l.life += this.dataService.lifeRegen(!1), l.life > (null == c ? void 0 : c.maxlife(this.dataService)) && (l.life = null == c ? void 0 : c.maxlife(this.dataService)))
                                }
                                for (let l of this.data.m)
                                    if (l.frozen && (l.frozen -= o, l.frozen <= 0 && delete l.frozen), l.poisoned && (l.poisoned.length -= o, this.dataService.hitM(l.poisoned.dmg * o, "p", !0), l.poisoned.length <= 0 && delete l.poisoned), l.hp <= 0) {
                                        let c = l.xp * this.dataService.xpmult(l);
                                        this.data.activeshrine && "xp" == this.data.activeshrine.id && (c *= 2);
                                        let u = this.dataService.totalEffect("xp");
                                        if (u && (c *= 1 + u / 100), c = Math.floor(c), this.dataService.log(l.name + " died. Xp earned: " + this.float.transform(c), "s"), l.special && l.special.lvl) {
                                            let h = 100,
                                                m = 1,
                                                M = 1,
                                                I = 1;
                                            1 == l.special.lvl ? m = 2 : 2 == l.special.lvl ? (m = 2, M = 2) : 3 == l.special.lvl && (m = 4, M = 2, I = 2);
                                            for (let H = 0; H <= l.special.lvl; H++) this.dataService.drop(l.lvl, 1, h, m, M, I)
                                        } else this.dataService.drop(l.lvl);
                                        for (this.dataService.dropShards(l), this.dataService.killM(l), this.data.m.splice(this.data.m.indexOf(l), 1), this.data.xp += c; this.data.xp >= this.dataService.xpReq();) this.dataService.levelUp();
                                        this.data.merc.forEach(h => {
                                            if (!h.config.dead && h.enabled)
                                                for (h.xp += Math.floor(.75 * c); h.xp >= this.dataService.xpReqAbs(h.lvl);) this.dataService.mercLevelUp(h)
                                        });
                                        let p = this.data.l.find(h => h.id == this.data.currentl);
                                        if (p && (l.special || !this.data.m.find(h => h.special))) {
                                            if (p.progress++, p.progress >= this.dataService.reqm() && !(null === (r = this.dataService.curDataLevel()) || void 0 === r ? void 0 : r.done) && !this.data.m.find(h => h.special)) {
                                                this.dataService.curDataLevel().done = !0;
                                                let h = this.conf.l[this.data.act].findIndex(m => m.id == p.id);
                                                this.conf.l[this.data.act][h + 1] && (this.data.l.push({
                                                    id: this.conf.l[this.data.act][h + 1].id,
                                                    progress: 0,
                                                    done: !1
                                                }), this.dataService.log('<span class="text-success">New area available: ' + this.conf.l[this.data.act][h + 1].name + "</span>", "n"), this.dataService.canAutoSkip() && this.dataService.goTo(this.conf.l[this.data.act][h + 1].id))
                                            }
                                            this.dataService.checkForSpecial() && this.dataService.initM()
                                        }
                                        l.exploding && this.dataService.mHitAll(l.type || "ph", 2 * l.max, l)
                                    } let a = -1;
                                for (let l of this.data.m)
                                    if (a++, l.stunned && l.stunned > 0) l.stunned -= o, l.stunned <= 0 && delete l.stunned;
                                    else {
                                        if (l && l.rep <= 0) {
                                            if (l.rep = this.dataService.mSpeed(l), this.dataService.mHitTry(l, a, l.hitall || !1)) break;
                                            l.summon && this.data.m.length < this.dataService.maxMonsters() && he.roll(this.conf.summonroll) && this.dataService.initM(l.summon)
                                        }
                                        l && (l.rep -= o)
                                    } if (he.roll(this.dataService.mChances()) && this.dataService.initM(), this.data.life += this.dataService.lifeRegen() * o, this.data.life > this.dataService.maxLife() && (this.data.life = this.dataService.maxLife()), this.data.mana += this.dataService.manaRegen() * o, this.data.mana > this.dataService.maxMana() && (this.data.mana = this.dataService.maxMana()), this.data.actives.forEach((l, c) => {
                                        l.time -= o, l.time <= 0 && this.data.actives.splice(c, 1)
                                    }), this.data.cooldowns.forEach((l, c) => {
                                        l.time -= o, l.time <= 0 && this.data.cooldowns.splice(c, 1)
                                    }), this.data.shrine) this.data.shrine.rem -= o, this.data.shrine.rem <= 0 && (this.data.shrine = void 0);
                                else if (!this.data.shrine && this.data.m.length && he.roll(this.conf.shrinechance)) {
                                    let l = he.get(0, this.conf.shrines.length - 1),
                                        c = this.conf.shrinetimeout,
                                        u = this.dataService.totalEffect("shrine");
                                    u && (c *= 1 + u / 100), this.data.shrine = {
                                        idx: l,
                                        rem: c
                                    }
                                }
                                this.data.activeshrine && (this.data.activeshrine.rem -= o, this.data.activeshrine.rem <= 0 && (this.data.activeshrine = void 0)), this.data.merchants.forEach((l, c) => {
                                    l.timeleft -= o, l.timeleft <= 0 && this.data.merchants.splice(c, 1)
                                }), this.dataService.initMerchants(), this.data.mercToHireTimeleft -= o, this.data.mercToHireTimeleft <= 0 && this.dataService.initMercs(), this.conf.locks.filter(l => !this.dataService.isUnlocked(l.id)).forEach(l => {
                                    l.check(this.dataService) && (l.desc && this.dataService.log('<span class="text-success">Unlocked: ' + l.desc + "</span>", "u"), this.data.locks.push(l.id), l.effect && l.effect(this.dataService))
                                }), this.conf.achievements.filter(l => !this.dataService.isAchievementDone(l.id)).forEach(l => {
                                    l.val(this.dataService) >= l.req && (this.data.achievements.push(l.id), l.reward(this.dataService), this.dataService.log('<span class="text-warning">New achivement: ' + l.desc + " (" + l.rewardDesc + ")</span>", "ach"))
                                })
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(Ce(ba), Ce(Da), Ce(eo), Ce(Ic), Ce(Tb))
                        }, t.\u0275prov = $e({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        }), t
                    })();
                const J4 = function() {
                    return ["right", "right-bottom"]
                };

                function X4(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "span", 3, 4), ie("mouseenter", function() {
                            pe(e);
                            const r = Pe(1);
                            return k().toggleItem(r)
                        })("mouseleave", function() {
                            pe(e);
                            const r = Pe(1);
                            return k().toggleItem(r, !0)
                        }), _(2), f()
                    }
                    if (2 & t) {
                        const e = k(),
                            i = Pe(3);
                        qn(e.dataService.itemCls(e.item)), D("ngbPopover", i)("placement", Jd(6, J4)), g(2), Ye(e.item.name)
                    }
                }

                function e8(t, n) {
                    1 & t && (d(0, "span"), _(1, "Nothing"), f())
                }

                function t8(t, n) {
                    if (1 & t && (d(0, "div", 9), ee(1, "h3", 6), d(2, "div", 10), ee(3, "div", 11), d(4, "i", 12), _(5, "equipped"), f(), f(), f()), 2 & t) {
                        const e = k(),
                            i = e.title2,
                            r = e.desc2;
                        g(1), D("innerHtml", i, fn), g(2), D("innerHtml", r, fn)
                    }
                }

                function n8(t, n) {
                    if (1 & t && (d(0, "div", 9), ee(1, "h3", 6), d(2, "div", 10), ee(3, "div", 11), d(4, "i", 12), _(5, "equipped"), f(), f(), f()), 2 & t) {
                        const e = k(),
                            i = e.title3,
                            r = e.desc3;
                        g(1), D("innerHtml", i, fn), g(2), D("innerHtml", r, fn)
                    }
                }

                function i8(t, n) {
                    if (1 & t && (d(0, "div", 5), d(1, "div"), ee(2, "h3", 6), ee(3, "div", 7), f(), O(4, t8, 6, 2, "div", 8), O(5, n8, 6, 2, "div", 8), f()), 2 & t) {
                        const e = n.title,
                            i = n.desc,
                            r = n.desc2,
                            s = n.desc3;
                        g(2), D("innerHtml", e, fn), g(1), D("innerHtml", i, fn), g(1), D("ngIf", r), g(1), D("ngIf", s)
                    }
                }
                let r8 = (() => {
                    class t {
                        constructor(e, i, r, s) {
                            this.data = e, this.dataService = i, this.conf = r, this.float = s
                        }
                        initCompare() {
                            if (this.item) {
                                let e = this.dataService.baseItem(this.item.id, this.item.potion);
                                this.compare && !this.item.potion && (this.compared = this.data.equip[e.type], 8 == e.type && (this.compared2 = this.data.equip[9]))
                            }
                        }
                        toggleItem(e, i = !1) {
                            if (i) e.close();
                            else if (this.item) {
                                this.initCompare();
                                let s, o, a, r = this.title(this.item),
                                    l = "";
                                this.compared && (s = this.title(this.compared), o = this.itemDesc(this.compared)), this.compared2 && (a = this.title(this.compared2), l = this.itemDesc(this.compared2)), e.popoverClass = "noPadding noMaxWidth", e.open({
                                    title: r,
                                    title2: s,
                                    title3: a,
                                    desc: this.itemDesc(this.item),
                                    desc2: o,
                                    desc3: l,
                                    container: "body"
                                })
                            }
                        }
                        title(e) {
                            let i = this.dataService.baseItem(e.id);
                            return '<span class="' + this.dataService.itemCls(e) + '">' + e.name + '</span><br/><small class="text-muted fw-normal font-80">(' + this.dataService.itemRarity(e) + (e.unique ? " " + i.name : "") + ")</small>"
                        }
                        itemDesc(e) {
                            let i = this.dataService.baseItem(e.id, e.potion),
                                r = (i.desc ? i.desc + "<br/>" : "") + (e.def ? "Defense: " + this.dataService.armorDefense(e) + "<br/>" : "") + (i.w2handed ? "Two-handed<br/>" : "") + (4 == i.type ? "Chances to block: " + this.dataService.chancesToBlock(e) + "%<br/>" : "") + (i.wtype ? "Type: " + this.strWType(i) + "<br/>" : "") + (i.minDmg ? "Damage: " + this.dataService.wMinDamage(e) + "-" + this.dataService.wMaxDamage(e) + "<br/>" : "") + (null != i.spd ? "Speed: " + Math.floor(10 * this.dataService.speed(e)) / 10 + " (" + this.strSpeed(e) + ")<br/>" : "") + (i.slots ? "Extra Slots: " + i.slots + "<br/>" : "") + ' <span class="text-primary">' + (i.wtype && "m" == i.wtype ? "+50% damage to undeads<br/>" : "");
                            if (e.effects.forEach(s => {
                                    let o = s.split("_");
                                    if ("sk" == o[0]) {
                                        let a, l;
                                        for (let c of this.conf.cl)
                                            for (let u of c.skillsCat.map(p => p.skills).flat())
                                                if (u.id == o[1]) {
                                                    a = c, l = u;
                                                    break
                                                } r += Ac[o[0]](o[2], null == l ? void 0 : l.name, null == a ? void 0 : a.name) + "<br/>"
                                    } else 2 == o.length ? r += Ac[o[0]](o[1]) + "<br/>" : 3 == o.length && (r += Ac[o[0]](o[1], o[2]) + "<br/>")
                                }), r += "</span>", e.lvlreq && e.lvlreq > 1) {
                                let s = "Required level: " + e.lvlreq + "<br/>";
                                this.data.lvl < e.lvlreq && (s = '<span class="text-danger">' + s + "</span>"), r += s
                            }
                            if (i.req_str) {
                                let s = "Required strength: " + this.dataService.strReq(e) + "<br/>";
                                this.dataService.strength() < this.dataService.strReq(e) && (s = '<span class="text-danger">' + s + "</span>"), r += s
                            }
                            if (i.req_dex) {
                                let s = "Required dexterity: " + this.dataService.dexReq(e) + "<br/>";
                                this.dataService.dexterity() < this.dataService.dexReq(e) && (s = '<span class="text-danger">' + s + "</span>"), r += s
                            }
                            if (null != i.class) {
                                let o = this.conf.cl[i.class].name + " only<br/>";
                                this.data.cl != i.class && (o = '<span class="text-danger">' + o + "</span>"), r += o
                            }
                            return r += "Price: " + this.float.transform(e.price), r
                        }
                        strWType(e) {
                            let i = e.wtype;
                            return "d" == i ? "Dagger" : "m" == i ? "Mace" : "s" == i ? "Sword" : "a" == i ? "Axe" : "st" == i ? "Staff" : ""
                        }
                        strSpeed(e) {
                            return this.dataService.strSpeed(this.dataService.speed(e))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(F(Da), F(Ic), F(eo), F(ba))
                    }, t.\u0275cmp = Xn({
                        type: t,
                        selectors: [
                            ["item"]
                        ],
                        inputs: {
                            item: "item",
                            compare: "compare"
                        },
                        decls: 4,
                        vars: 2,
                        consts: [
                            ["container", "body", 3, "ngbPopover", "placement", "class", "mouseenter", "mouseleave", 4, "ngIf"],
                            [4, "ngIf"],
                            ["itemPopContent", ""],
                            ["container", "body", 3, "ngbPopover", "placement", "mouseenter", "mouseleave"],
                            ["p1", "ngbPopover"],
                            [1, "d-flex"],
                            [1, "popover-header", 3, "innerHtml"],
                            [1, "p-2", 3, "innerHtml"],
                            ["class", "border-start", 4, "ngIf"],
                            [1, "border-start"],
                            [1, "p-2"],
                            [3, "innerHtml"],
                            [1, "text-secondary"]
                        ],
                        template: function(e, i) {
                            1 & e && (O(0, X4, 3, 7, "span", 0), O(1, e8, 2, 0, "span", 1), O(2, i8, 6, 4, "ng-template", null, 2, mt)), 2 & e && (D("ngIf", i.item), g(1), D("ngIf", !i.item))
                        },
                        directives: [lr, Db],
                        encapsulation: 2
                    }), t
                })();
                const s8 = ["invModal"];

                function o8(t, n) {
                    if (1 & t && (d(0, "span", 91, 92), _(2), f()), 2 & t) {
                        const e = k();
                        D("ngbPopover", Pe(9)), g(2), Se("Relics: ", e.data.relics, "")
                    }
                }

                function a8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 93), ie("click", function() {
                            pe(e);
                            const r = k(),
                                s = Pe(149);
                            return r.open(s, "lg")
                        }), _(1), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(1), Se("Exile (+", e.dataService.relicGain(), ")")
                    }
                }

                function l8(t, n) {
                    if (1 & t && (_(0), ee(1, "br"), d(2, "b"), _(3), f()), 2 & t) {
                        const e = k();
                        Se(" Xp gain per relic: +", 100 * e.dataService.relicMult(), "%"), g(3), Se("Xp gain: +", 100 * e.dataService.xpBonusFromRelics(), "%")
                    }
                }

                function c8(t, n) {
                    if (1 & t && ee(0, "i", 94), 2 & t) {
                        const e = k();
                        Un("pe-1 text-warning ", e.data.activeshrine.icon, ""), D("ngbPopover", e.data.activeshrine.name)
                    }
                }

                function u8(t, n) {
                    1 & t && ee(0, "i", 95)
                }

                function d8(t, n) {
                    1 & t && ee(0, "i", 96)
                }

                function f8(t, n) {
                    1 & t && ee(0, "i", 97)
                }

                function p8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 98), ie("click", function() {
                            pe(e);
                            const r = k(),
                                s = Pe(151);
                            return r.openMercenary(s)
                        }), _(1, "Hirelings"), f()
                    }
                }

                function h8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 99), ie("click", function() {
                            pe(e);
                            const r = k();
                            return r.showAllLevels = !r.showAllLevels
                        }), _(1), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(1), Ye(e.showAllLevels ? "Show less" : "Show more")
                    }
                }

                function g8(t, n) {
                    if (1 & t && (d(0, "li", 64), d(1, "a", 65), _(2), f(), f()), 2 & t) {
                        const e = k().index,
                            i = k(2);
                        D("ngbNavItem", e), g(2), Se("Act ", i.roman(e + 1), "")
                    }
                }

                function m8(t, n) {
                    if (1 & t && (In(0), O(1, g8, 3, 2, "li", 101), On()), 2 & t) {
                        const e = n.index,
                            i = k(2);
                        g(1), D("ngIf", e <= i.data.act)
                    }
                }

                function _8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "ul", 100, 63), ie("activeIdChange", function(r) {
                            return pe(e), k().actTab = r
                        }), O(2, m8, 2, 1, "ng-container", 27), f()
                    }
                    if (2 & t) {
                        const e = k();
                        D("activeId", e.actTab), g(2), D("ngForOf", e.conf.l)
                    }
                }

                function v8(t, n) {
                    1 & t && ee(0, "i", 105)
                }
                const y8 = function(t) {
                    return {
                        "bg-primary text-light": t,
                        pointer: !0
                    }
                };

                function b8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 103), ie("click", function() {
                            pe(e);
                            const r = k().$implicit;
                            return k().goTo(r.id)
                        }), O(1, v8, 1, 0, "i", 104), _(2), f()
                    }
                    if (2 & t) {
                        const e = k(),
                            i = e.$implicit,
                            r = e.index,
                            s = k();
                        D("ngClass", function Uo(t, n, e, i) {
                            return w1(ne(), cn(), t, n, e, i)
                        }(4, y8, s.data.currentl == i.id)), g(1), D("ngIf", 0 == r), g(1), et(" ", s.levelName(i.id), " (", s.lstatus(i.id, r), ") ")
                    }
                }

                function D8(t, n) {
                    if (1 & t && (In(0), O(1, b8, 3, 6, "div", 102), On()), 2 & t) {
                        const e = n.$implicit,
                            i = n.index,
                            r = k();
                        g(1), D("ngIf", r.showLevel(e, i))
                    }
                }

                function x8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 106), ie("click", function() {
                            pe(e);
                            const r = k(),
                                s = Pe(147);
                            return r.open(s)
                        }), _(1, "Achievements"), f()
                    }
                }

                function w8(t, n) {
                    1 & t && (d(0, "div", 107), ee(1, "i", 108), f())
                }

                function C8(t, n) {
                    1 & t && ee(0, "i", 116)
                }

                function M8(t, n) {
                    1 & t && ee(0, "i", 117)
                }

                function T8(t, n) {
                    1 & t && ee(0, "i", 118)
                }

                function S8(t, n) {
                    1 & t && ee(0, "i", 119)
                }

                function E8(t, n) {
                    1 & t && ee(0, "i", 120)
                }

                function k8(t, n) {
                    if (1 & t && (In(0), ee(1, "div", 121), On()), 2 & t) {
                        const e = k().$implicit;
                        g(1), D("innerHTML", e.desc, fn)
                    }
                }

                function N8(t, n) {
                    if (1 & t && (d(0, "div"), d(1, "h3", 109), d(2, "div"), O(3, C8, 1, 0, "i", 110), O(4, M8, 1, 0, "i", 111), O(5, T8, 1, 0, "i", 112), O(6, S8, 1, 0, "i", 113), _(7), O(8, E8, 1, 0, "i", 114), f(), O(9, k8, 2, 1, "ng-container", 39), f(), d(10, "div", 30), d(11, "div", 115), ee(12, "div"), d(13, "div", 31), _(14), qe(15, "float"), qe(16, "float"), f(), f(), ee(17, "div", 32), f(), f()), 2 & t) {
                        const e = n.$implicit,
                            i = k();
                        g(2), qn(e.special ? "bg-warning" : ""), g(1), D("ngIf", "f" == e.type), g(1), D("ngIf", "l" == e.type), g(1), D("ngIf", "c" == e.type), g(1), D("ngIf", "p" == e.type), g(1), Se(" ", e.name, " "), g(1), D("ngIf", e.stunned), g(1), D("ngIf", e.desc), g(3), ci("width: ", i.progMHp(e), "%"), Un("progress-bar ", e.poisoned ? "bg-poison" : e.frozen ? "bg-frozen" : "bg-secondary", ""), g(2), et("", yt(15, 21, e.hp), " / ", yt(16, 23, e.ihp), ""), g(3), ci("--value:", i.progMRep(e), "")
                    }
                }

                function A8(t, n) {
                    1 & t && ee(0, "div", 123), 2 & t && D("innerHtml", k().$implicit.txt, fn)
                }

                function I8(t, n) {
                    if (1 & t && (In(0), O(1, A8, 1, 1, "div", 122), On()), 2 & t) {
                        const e = n.$implicit,
                            i = k();
                        g(1), D("ngIf", i.showLog(e))
                    }
                }

                function O8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 129, 92), ie("click", function() {
                            pe(e);
                            const r = k().$implicit;
                            return k(2).dataService.drinkById(r.item.id)
                        })("mouseenter", function() {
                            pe(e);
                            const r = Pe(1),
                                s = k(),
                                o = s.index,
                                a = s.$implicit;
                            return k(2).togglePotionDesc(r, o, a)
                        })("mouseleave", function() {
                            pe(e);
                            const r = Pe(1),
                                s = k(),
                                o = s.index,
                                a = s.$implicit;
                            return k(2).togglePotionDesc(r, o, a, !0)
                        }), ee(2, "img", 130), d(3, "div", 131), _(4), f(), f()
                    }
                    if (2 & t) {
                        const e = k().$implicit,
                            i = k(2),
                            r = Pe(61);
                        D("ngClass", i.potionBtnClass(e))("ngbPopover", r), g(2), D("src", i.potionImg(e.item), Ti), g(2), Ye(e.nb > 9 ? "9+" : e.nb)
                    }
                }

                function R8(t, n) {
                    1 & t && ee(0, "div", 132)
                }

                function P8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        In(0), d(1, "div", 124), d(2, "div", 125, 92), ie("click", function() {
                            const s = pe(e).index,
                                o = Pe(3);
                            return k(2).toggleSkillSelector(o, s)
                        }), ee(4, "i", 126), f(), O(5, O8, 5, 4, "div", 127), O(6, R8, 1, 0, "div", 128), f(), On()
                    }
                    if (2 & t) {
                        const e = n.$implicit;
                        k(2);
                        const i = Pe(63);
                        g(2), D("ngbPopover", i), g(3), D("ngIf", e), g(1), D("ngIf", !e)
                    }
                }

                function F8(t, n) {
                    if (1 & t && (In(0), O(1, P8, 7, 3, "ng-container", 27), On()), 2 & t) {
                        const e = k();
                        g(1), D("ngForOf", e.quickpotions())
                    }
                }

                function B8(t, n) {
                    if (1 & t && (_(0), ee(1, "br"), _(2, " Shortcut: "), d(3, "b", 133), _(4), f()), 2 & t) {
                        const e = n.idx,
                            i = n.i;
                        et(" ", i.item.name, " (", i.nb, ")"), g(4), Ye(e + 1)
                    }
                }

                function L8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div"), d(1, "div", 134), ie("click", function() {
                            const s = pe(e).$implicit,
                                o = k(),
                                a = o.idx,
                                l = o.popover;
                            return k().selectPotion(s.item, a, l)
                        }), ee(2, "img", 130), _(3), f(), f()
                    }
                    if (2 & t) {
                        const e = n.$implicit,
                            i = k(2);
                        g(2), D("src", i.potionImg(e.item), Ti), g(1), et(" ", e.item.name, " (", e.nb, ")")
                    }
                }

                function V8(t, n) {
                    1 & t && O(0, L8, 4, 3, "div", 27), 2 & t && D("ngForOf", k().potions())
                }

                function H8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 137, 92), ie("click", function() {
                            pe(e);
                            const r = k().$implicit;
                            return k().dataService.useSkill(r)
                        })("mouseenter", function() {
                            pe(e);
                            const r = Pe(1),
                                s = k(),
                                o = s.index,
                                a = s.$implicit;
                            return k().toggleSkillDesc(r, o, a)
                        })("mouseleave", function() {
                            pe(e);
                            const r = Pe(1),
                                s = k(),
                                o = s.index,
                                a = s.$implicit;
                            return k().toggleSkillDesc(r, o, a, !0)
                        }), ee(2, "img", 130), f()
                    }
                    if (2 & t) {
                        const e = k().$implicit,
                            i = k(),
                            r = Pe(67);
                        D("ngClass", i.skillBtnClass(e))("ngStyle", i.skillBtnStyle(e))("ngbPopover", r), g(2), Ni("src", "assets/img/sk_", e.id, ".png", Ti)
                    }
                }

                function j8(t, n) {
                    1 & t && ee(0, "div", 132)
                }

                function G8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        In(0), d(1, "div", 124), d(2, "div", 135, 92), ie("click", function() {
                            const s = pe(e).index,
                                o = Pe(3);
                            return k().toggleSkillSelector(o, s)
                        }), ee(4, "i", 126), f(), O(5, H8, 3, 4, "div", 136), O(6, j8, 1, 0, "div", 128), f(), On()
                    }
                    if (2 & t) {
                        const e = n.$implicit;
                        k();
                        const i = Pe(69);
                        g(2), D("ngbPopover", i)("autoClose", "outside"), g(3), D("ngIf", e), g(1), D("ngIf", !e)
                    }
                }

                function $8(t, n) {
                    if (1 & t && (d(0, "b"), _(1), f(), ee(2, "br"), _(3, " Shortcut: "), d(4, "b", 133), _(5), f()), 2 & t) {
                        const e = n.idx,
                            i = n.s;
                        g(1), Ye(i.name), g(4), Ye(e + 6)
                    }
                }

                function q8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 23), d(1, "input", 139), ie("change", function() {
                            pe(e);
                            const r = k().idx;
                            return k().toggleAutocast(r)
                        }), f(), d(2, "label", 140), _(3, "Auto-cast"), f(), f()
                    }
                    if (2 & t) {
                        const e = k().idx,
                            i = k();
                        g(1), D("checked", i.isAutocast(e))
                    }
                }

                function U8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div"), d(1, "div", 134), ie("click", function() {
                            const s = pe(e).$implicit,
                                o = k(),
                                a = o.idx,
                                l = o.popover;
                            return k().selectSkill(s, a, l)
                        }), ee(2, "img", 130), _(3), f(), f()
                    }
                    if (2 & t) {
                        const e = n.$implicit;
                        g(2), Ni("src", "assets/img/sk_", e.id, ".png", Ti), g(1), Se(" ", e.name, "")
                    }
                }

                function z8(t, n) {
                    1 & t && (d(0, "div"), _(1, " No available skill "), f())
                }

                function W8(t, n) {
                    if (1 & t && (O(0, q8, 4, 1, "div", 138), O(1, U8, 4, 2, "div", 27), O(2, z8, 2, 0, "div", 39)), 2 & t) {
                        const e = n.idx,
                            i = k();
                        D("ngIf", i.dataService.maxAutocast()), g(1), D("ngForOf", i.skills(e)), g(1), D("ngIf", !i.skills(e).length)
                    }
                }

                function Y8(t, n) {
                    if (1 & t && (d(0, "div", 30), ee(1, "img", 142), d(2, "div", 143), ee(3, "div", 144), d(4, "div", 31), _(5), qe(6, "number"), qe(7, "number"), f(), f(), ee(8, "div", 32), f()), 2 & t) {
                        const e = k().$implicit,
                            i = k();
                        g(1), D("title", e.name), g(2), ci("width: ", i.progMercLife(e), "%"), g(2), et("", tn(6, 9, e.config.life, "1.0-0"), " / ", tn(7, 12, i.dataService.mercMaxLife(e), "1.0-0"), ""), g(3), ci("--value:", i.progMercRep(e), "")
                    }
                }

                function K8(t, n) {
                    if (1 & t && (In(0), O(1, Y8, 9, 15, "div", 141), On()), 2 & t) {
                        const e = n.$implicit;
                        g(1), D("ngIf", "fighter" == e.type && e.enabled && !e.config.dead)
                    }
                }

                function Z8(t, n) {
                    if (1 & t && ee(0, "div", 32), 2 & t) {
                        const e = k().$implicit;
                        ci("--value:", k().progSummonRep(e), "")
                    }
                }

                function Q8(t, n) {
                    if (1 & t && (d(0, "div", 30), d(1, "div", 145), ee(2, "img", 146), f(), d(3, "div", 143), ee(4, "div", 144), d(5, "div", 31), _(6), qe(7, "number"), qe(8, "number"), f(), f(), O(9, Z8, 1, 3, "div", 147), f()), 2 & t) {
                        const e = n.$implicit,
                            i = k();
                        g(2), Ni("src", "assets/img/su_", e.type, ".png", Ti), D("title", i.summonName(e)), g(2), ci("width: ", i.progSummonLife(e), "%"), g(2), et("", tn(7, 8, e.life, "1.0-0"), " / ", tn(8, 11, i.summonMaxLife(e), "1.0-0"), ""), g(3), D("ngIf", i.summonSpeed(e))
                    }
                }

                function J8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 148), ie("click", function() {
                            return pe(e), k().activateShrine()
                        }), ee(1, "i"), _(2), qe(3, "number"), f()
                    }
                    if (2 & t) {
                        const e = k();
                        D("ngbPopover", e.conf.shrines[e.data.shrine.idx].desc), g(1), qn(e.conf.shrines[e.data.shrine.idx].icon), g(1), et(" ", e.conf.shrines[e.data.shrine.idx].name, " (", tn(3, 6, e.data.shrine.rem, "1.0-0"), "s)")
                    }
                }

                function X8(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 149), ie("click", function() {
                            pe(e);
                            const r = k(),
                                s = Pe(143);
                            return r.open(s)
                        }), _(1, "Change class"), f()
                    }
                }

                function eR(t, n) {
                    1 & t && (d(0, "span", 150), _(1, "!"), f())
                }

                function tR(t, n) {
                    1 & t && (d(0, "span", 150), _(1, "!"), f())
                }

                function nR(t, n) {
                    1 & t && (d(0, "span", 150), _(1, "!"), f())
                }

                function iR(t, n) {
                    if (1 & t && (d(0, "div"), d(1, "table", 151), d(2, "tbody"), d(3, "tr"), d(4, "td"), _(5, "Death:"), f(), d(6, "td"), _(7), f(), f(), d(8, "tr"), d(9, "td"), _(10, "Killed:"), f(), d(11, "td"), _(12), f(), f(), f(), f(), f()), 2 & t) {
                        const e = k();
                        g(7), Ye(e.data.stats.run.death), g(5), Ye(e.data.stats.run.killed)
                    }
                }

                function rR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 153), ie("click", function() {
                            return pe(e), k(3).reward()
                        }), _(1, "Get reward"), f()
                    }
                }

                function sR(t, n) {
                    if (1 & t && (d(0, "div"), d(1, "h5"), _(2), f(), ee(3, "p", 123), O(4, rR, 2, 0, "button", 152), f()), 2 & t) {
                        const e = k(2);
                        g(2), Ye(e.conf.quests[e.data.quest].title), g(1), D("innerHtml", e.conf.quests[e.data.quest].description, fn), g(1), D("ngIf", e.conf.quests[e.data.quest].check(e.dataService))
                    }
                }

                function oR(t, n) {
                    if (1 & t && (d(0, "div"), O(1, sR, 5, 3, "div", 39), f()), 2 & t) {
                        const e = k();
                        g(1), D("ngIf", e.conf.quests.length > e.data.quest)
                    }
                }

                function aR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 157), ie("click", function() {
                            return pe(e), k(2).resetSkills()
                        }), _(1), f()
                    }
                    if (2 & t) {
                        const e = k(2);
                        g(1), Se("Reset attr & skills (", e.data.skillreset, ")")
                    }
                }

                function lR(t, n) {
                    if (1 & t && (d(0, "li", 64), d(1, "a", 65), _(2), f(), f()), 2 & t) {
                        const e = n.$implicit;
                        D("ngbNavItem", n.index), g(2), Ye(e.name)
                    }
                }

                function cR(t, n) {
                    if (1 & t && (d(0, "td"), d(1, "span", 133), _(2), f(), _(3), f()), 2 & t) {
                        const e = k().$implicit,
                            i = k(2);
                        g(2), Ye(i.dataService.skillLevel(e.id)), g(1), Se(" (", i.slvl(e.id), ") ")
                    }
                }

                function uR(t, n) {
                    if (1 & t && (d(0, "td"), _(1), f()), 2 & t) {
                        const e = k().$implicit,
                            i = k(2);
                        g(1), Se(" ", i.slvl(e.id), " ")
                    }
                }

                function dR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "td"), d(1, "button", 159), ie("click", function() {
                            pe(e);
                            const r = k().$implicit,
                                s = Pe(1);
                            return k(2).sup(r, s)
                        }), d(2, "b"), _(3, "+"), f(), f(), f()
                    }
                    if (2 & t) {
                        const e = k().$implicit,
                            i = k(2);
                        g(1), D("disabled", !i.isSkillAvailable(e))
                    }
                }

                function fR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "tr", 158, 92), ie("mouseenter", function() {
                            const s = pe(e).$implicit,
                                o = Pe(1);
                            return k(2).toggleSkill(o, s)
                        })("mouseleave", function() {
                            const s = pe(e).$implicit,
                                o = Pe(1);
                            return k(2).toggleSkill(o, s, !0)
                        }), O(2, cR, 4, 2, "td", 39), O(3, uR, 2, 1, "td", 39), d(4, "td"), ee(5, "img", 130), f(), d(6, "td"), _(7), f(), O(8, dR, 4, 1, "td", 39), f()
                    }
                    if (2 & t) {
                        const e = n.$implicit,
                            i = k(2),
                            r = Pe(139);
                        qn(i.isSkillLocked(e) ? "opacity-50" : ""), D("ngbPopover", r)("popoverTitle", e.name), g(2), D("ngIf", i.dataService.skillLevel(e.id) != i.slvl(e.id)), g(1), D("ngIf", i.dataService.skillLevel(e.id) == i.slvl(e.id)), g(2), Ni("src", "assets/img/sk_", e.id, ".png", Ti), g(2), Ye(e.name), g(1), D("ngIf", i.data.srem > 0)
                    }
                }

                function pR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div"), d(1, "div", 38), d(2, "div"), _(3), f(), O(4, aR, 2, 1, "button", 154), f(), d(5, "ul", 62, 63), ie("activeIdChange", function(r) {
                            return pe(e), k().skillTab = r
                        }), O(7, lR, 3, 2, "li", 155), f(), d(8, "table", 151), d(9, "tbody"), O(10, fR, 9, 10, "tr", 156), f(), f(), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(3), Se("Available points: ", e.data.srem, ""), g(1), D("ngIf", e.data.skillreset), g(1), D("activeId", e.skillTab), g(2), D("ngForOf", e.conf.cl[e.data.cl].skillsCat), g(3), D("ngForOf", e.conf.cl[e.data.cl].skillsCat[e.skillTab].skills)
                    }
                }

                function hR(t, n) {
                    if (1 & t && (d(0, "td"), _(1), f()), 2 & t) {
                        const e = k(2);
                        g(1), Ye(e.dataService.strength())
                    }
                }

                function gR(t, n) {
                    if (1 & t && (d(0, "td"), d(1, "span", 133), _(2), f(), _(3), f()), 2 & t) {
                        const e = k(2);
                        g(2), Ye(e.dataService.strength()), g(1), Se(" (", e.data.str, ") ")
                    }
                }

                function mR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "td"), d(1, "button", 167), ie("click", function() {
                            return pe(e), k(2).up("str")
                        }), d(2, "b"), _(3, "+"), f(), f(), f()
                    }
                }

                function _R(t, n) {
                    if (1 & t && (d(0, "td"), _(1), f()), 2 & t) {
                        const e = k(2);
                        g(1), Ye(e.dataService.dexterity())
                    }
                }

                function vR(t, n) {
                    if (1 & t && (d(0, "td"), d(1, "span", 133), _(2), f(), _(3), f()), 2 & t) {
                        const e = k(2);
                        g(2), Ye(e.dataService.dexterity()), g(1), Se(" (", e.data.dex, ") ")
                    }
                }

                function yR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "td"), d(1, "button", 167), ie("click", function() {
                            return pe(e), k(2).up("dex")
                        }), d(2, "b"), _(3, "+"), f(), f(), f()
                    }
                }

                function bR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "td"), d(1, "button", 167), ie("click", function() {
                            return pe(e), k(2).up("vit")
                        }), d(2, "b"), _(3, "+"), f(), f(), f()
                    }
                }

                function DR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "td"), d(1, "button", 167), ie("click", function() {
                            return pe(e), k(2).up("ene")
                        }), d(2, "b"), _(3, "+"), f(), f(), f()
                    }
                }

                function xR(t, n) {
                    if (1 & t && (d(0, "small", 168), _(1), f()), 2 & t) {
                        const e = k(2);
                        g(1), et("(-", 5 * e.data.act, " from Act ", e.roman(e.data.act + 1), ")")
                    }
                }
                const wR = function() {
                    return []
                };

                function CR(t, n) {
                    if (1 & t && (d(0, "div", 160), _(1), d(2, "table", 151), d(3, "tbody"), d(4, "tr", 161), d(5, "td", 162), d(6, "b"), _(7, "Strength"), f(), f(), O(8, hR, 2, 1, "td", 39), O(9, gR, 4, 2, "td", 39), O(10, mR, 4, 0, "td", 39), f(), d(11, "tr"), d(12, "td"), _(13, "Damage"), f(), d(14, "td", 94), _(15), f(), f(), d(16, "tr"), d(17, "td"), _(18, "Attack speed"), f(), d(19, "td"), _(20), qe(21, "number"), f(), f(), d(22, "tr", 161), d(23, "td", 163), d(24, "b"), _(25, "Dexterity"), f(), f(), O(26, _R, 2, 1, "td", 39), O(27, vR, 4, 2, "td", 39), O(28, yR, 4, 0, "td", 39), f(), d(29, "tr"), d(30, "td"), _(31, "Attack rating"), f(), d(32, "td"), _(33), qe(34, "number"), f(), f(), d(35, "tr"), d(36, "td"), _(37, "Defense"), f(), d(38, "td"), _(39), qe(40, "number"), f(), f(), d(41, "tr"), d(42, "td"), _(43, "Chances to block"), f(), d(44, "td"), _(45), f(), f(), d(46, "tr", 161), d(47, "td", 164), d(48, "b"), _(49, "Vitality"), f(), f(), d(50, "td"), _(51), f(), O(52, bR, 4, 0, "td", 39), f(), d(53, "tr"), d(54, "td"), _(55, "Life"), f(), d(56, "td"), _(57), qe(58, "number"), f(), f(), d(59, "tr", 161), d(60, "td", 165), d(61, "b"), _(62, "Energy"), f(), f(), d(63, "td"), _(64), f(), O(65, DR, 4, 0, "td", 39), f(), d(66, "tr"), d(67, "td"), _(68, "Mana"), f(), d(69, "td"), _(70), qe(71, "number"), f(), f(), f(), f(), d(72, "h5"), _(73, "Resistances "), O(74, xR, 2, 2, "small", 166), f(), d(75, "table", 151), d(76, "tbody"), d(77, "tr"), d(78, "td"), ee(79, "i", 116), _(80, " Fire"), f(), d(81, "td"), _(82), f(), d(83, "td"), ee(84, "i", 117), _(85, " Lightning"), f(), d(86, "td"), _(87), f(), f(), d(88, "tr"), d(89, "td"), ee(90, "i", 118), _(91, " Cold"), f(), d(92, "td"), _(93), f(), d(94, "td"), ee(95, "i", 119), _(96, " Poison"), f(), d(97, "td"), _(98), f(), f(), f(), f(), d(99, "h5"), _(100, "Other data"), f(), d(101, "table", 151), d(102, "tbody"), d(103, "tr"), d(104, "td"), _(105, "Cast rate"), f(), d(106, "td"), _(107), qe(108, "number"), f(), f(), d(109, "tr"), d(110, "td"), _(111, "Freeze duration"), f(), d(112, "td"), _(113), qe(114, "number"), f(), f(), d(115, "tr"), d(116, "td"), _(117, "Stun duration"), f(), d(118, "td"), _(119), qe(120, "number"), f(), f(), d(121, "tr"), d(122, "td"), _(123, "Poison duration"), f(), d(124, "td"), _(125), qe(126, "number"), f(), f(), d(127, "tr"), d(128, "td"), _(129, "Damage reduction"), f(), d(130, "td"), _(131), f(), f(), d(132, "tr"), d(133, "td"), _(134, "Magical Damage reduction"), f(), d(135, "td"), _(136), f(), f(), d(137, "tr"), d(138, "td"), _(139, "Increase chances to find magical"), f(), d(140, "td"), _(141), qe(142, "number"), f(), f(), f(), f(), f()), 2 & t) {
                        const e = k(),
                            i = Pe(141);
                        g(1), Se(" Available points: ", e.data.rem, " "), g(7), D("ngIf", e.dataService.strength() == e.data.str), g(1), D("ngIf", e.dataService.strength() != e.data.str), g(1), D("ngIf", e.data.rem > 0), g(4), D("ngbPopover", i), g(1), et(" ", e.dataService.minDamageTotal(), " - ", e.dataService.maxDamageTotal(), " "), g(5), et("", tn(21, 37, e.dataService.speed(), "1.2-2"), " (", e.dataService.strSpeed(e.dataService.speed()), ") "), g(6), D("ngIf", e.dataService.dexterity() == e.data.dex), g(1), D("ngIf", e.dataService.dexterity() != e.data.dex), g(1), D("ngIf", e.data.rem > 0), g(5), et("", e.dataService.atkRating(), " (chance to hit: ", tn(34, 40, e.dataService.chances(), "1.0-0"), "%) "), g(6), et("", e.dataService.defense(), " (chance to hit: ", tn(40, 43, e.dataService.revChances(), "1.0-0"), "%) "), g(6), Se("", e.dataService.chancesToBlock(), "% "), g(6), Ye(e.data.vit), g(1), D("ngIf", e.data.rem > 0), g(5), et(" ", e.dataService.maxLife(), " +", tn(58, 46, e.dataService.lifeRegen(), "1.2-2"), "/s "), g(7), Ye(e.data.ene), g(1), D("ngIf", e.data.rem > 0), g(5), et(" ", e.dataService.maxMana(), " +", tn(71, 49, e.dataService.manaRegen(), "1.2-2"), "/s "), g(4), D("ngIf", e.data.act), g(8), Ye(e.dataService.resistance("f")), g(5), Ye(e.dataService.resistance("l")), g(6), Ye(e.dataService.resistance("c")), g(5), Ye(e.dataService.resistance("p")), g(9), Se("+", yt(108, 52, e.dataService.totalEffect("cast")), " %"), g(6), Se("", yt(114, 54, 100 / (e.dataService.totalEffect("redfrz") || 1)), " %"), g(6), Se("", yt(120, 56, 100 / (e.dataService.totalEffect("stun") || 1)), " %"), g(6), Se("", yt(126, 58, 100 * e.dataService.totalEffect("plen", 1, Jd(62, wR), !0)), " %"), g(6), Ye(e.dataService.dmgReduc() + e.dataService.dmgReducForAll()), g(5), Ye(e.dataService.mDmgReduc()), g(5), Se("", yt(142, 60, e.dataService.magicalChances()), " %")
                    }
                }

                function MR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 169), d(1, "h5", 170), _(2, "Support & Credits"), f(), d(3, "button", 171), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), d(4, "span", 172), _(5, "\xd7"), f(), f(), f(), d(6, "div", 173), d(7, "h3"), _(8, "Support"), f(), d(9, "p"), _(10, "This game is "), d(11, "u"), _(12, "completely free"), f(), _(13, " and provided "), d(14, "u"), _(15, "without any ads"), f(), _(16, "."), f(), d(17, "p"), _(18, " If you like this game and wish to support it, feel free to give whatever you want "), d(19, "a", 174), _(20, "here"), f(), _(21, "."), f(), d(22, "p"), _(23, " Note: OG dev has discontinued support/development. Donation links have been preserved out of respect. "), f(), d(24, "h3"), _(25, "Credits"), f(), d(26, "div"), _(27, "Icons made by "), d(28, "a", 175), _(29, "Freepik"), f(), f(), f()
                    }
                }

                function TR(t, n) {
                    1 & t && ee(0, "div", 123), 2 & t && D("innerHtml", n.desc, fn)
                }

                function SR(t, n) {
                    if (1 & t && (d(0, "tr"), d(1, "td"), _(2, "+"), f(), d(3, "td", 177), _(4), f(), d(5, "td"), _(6, " (fire)"), f(), f()), 2 & t) {
                        const e = k(2);
                        g(4), et("", e.dataService.minDamage().f, " - ", e.dataService.maxDamage().f, "")
                    }
                }

                function ER(t, n) {
                    if (1 & t && (d(0, "tr"), d(1, "td"), _(2, "+"), f(), d(3, "td", 178), _(4), f(), d(5, "td"), _(6, " (cold)"), f(), f()), 2 & t) {
                        const e = k(2);
                        g(4), et("", e.dataService.minDamage().c, " - ", e.dataService.maxDamage().c, "")
                    }
                }

                function kR(t, n) {
                    if (1 & t && (d(0, "tr"), d(1, "td"), _(2, "+"), f(), d(3, "td", 179), _(4), f(), d(5, "td"), _(6, " (lightning)"), f(), f()), 2 & t) {
                        const e = k(2);
                        g(4), et("", e.dataService.minDamage().l, " - ", e.dataService.maxDamage().l, "")
                    }
                }

                function NR(t, n) {
                    if (1 & t && (d(0, "tr"), d(1, "td"), _(2, "+"), f(), d(3, "td", 180), _(4), f(), d(5, "td"), _(6, " (poison)"), f(), f()), 2 & t) {
                        const e = k(2);
                        g(4), et("", e.dataService.minDamage().p * e.dataService.maxDamage().p, " over ", e.dataService.maxDamage().p, "s")
                    }
                }

                function AR(t, n) {
                    if (1 & t && (d(0, "table", 151), d(1, "tbody"), d(2, "tr"), ee(3, "td"), d(4, "td"), d(5, "b"), _(6), f(), f(), ee(7, "td"), f(), d(8, "tr"), ee(9, "td"), d(10, "td", 176), _(11), f(), d(12, "td"), _(13, " (physical)"), f(), f(), O(14, SR, 7, 2, "tr", 39), O(15, ER, 7, 2, "tr", 39), O(16, kR, 7, 2, "tr", 39), O(17, NR, 7, 2, "tr", 39), f(), f()), 2 & t) {
                        const e = k();
                        g(6), et("", e.dataService.minDamageTotal(), " - ", e.dataService.maxDamageTotal(), ""), g(5), et("", e.dataService.minDamage().ph, " - ", e.dataService.maxDamage().ph, ""), g(3), D("ngIf", e.dataService.maxDamage().f), g(1), D("ngIf", e.dataService.maxDamage().c), g(1), D("ngIf", e.dataService.maxDamage().l), g(1), D("ngIf", e.dataService.maxDamage().p)
                    }
                }

                function IR(t, n) {
                    if (1 & t && (d(0, "div", 23), ee(1, "i"), d(2, "div"), _(3), f(), f()), 2 & t) {
                        const e = k().$implicit,
                            i = k(2);
                        g(1), Un("me-1 fas fa-", i.data.cl == e.reqclass ? "check" : "times", ""), g(2), Se("Class: ", i.conf.cl[e.reqclass].name, "")
                    }
                }

                function OR(t, n) {
                    if (1 & t && (d(0, "div", 23), ee(1, "i"), d(2, "div"), _(3), f(), f()), 2 & t) {
                        const e = n.$implicit,
                            i = k(4);
                        g(1), Un("me-1 fas fa-", e.check(i.dataService) ? "check" : "times", ""), g(2), Ye(e.desc(i.dataService))
                    }
                }

                function RR(t, n) {
                    if (1 & t && (In(0), O(1, OR, 4, 4, "div", 189), On()), 2 & t) {
                        const e = k().$implicit;
                        g(1), D("ngForOf", e.req)
                    }
                }

                function PR(t, n) {
                    1 & t && (d(0, "div", 23), ee(1, "i", 190), d(2, "div"), _(3, "Class unlocked"), f(), f())
                }

                function FR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 191), ie("click", function() {
                            pe(e);
                            const r = k().$implicit;
                            return k(2).selectClass(r)
                        }), _(1, "Select"), f()
                    }
                    if (2 & t) {
                        const e = k().$implicit;
                        D("disabled", !k(2).isClassAllowed(e))
                    }
                }

                function BR(t, n) {
                    if (1 & t && (d(0, "div", 183), d(1, "h4"), _(2), f(), ee(3, "img", 184), ee(4, "div", 185), ee(5, "hr"), d(6, "div", 186), d(7, "h6", 187), _(8, "Requirements:"), f(), O(9, IR, 4, 4, "div", 138), d(10, "div", 23), ee(11, "i"), d(12, "div"), _(13), f(), f(), O(14, RR, 2, 1, "ng-container", 39), O(15, PR, 4, 0, "div", 138), f(), O(16, FR, 2, 1, "button", 188), f()), 2 & t) {
                        const e = n.$implicit,
                            i = k(2);
                        (function Im(t, n, e, i, r) {
                            li(kn, Ai, Cs(ne(), t, n, e, i, r), !0)
                        })("d-flex flex-column mx-1 p-1 border border-2 rounded cl ", i.data.cl == e.id ? "selected" : "", " ", i.data.cl == e.id || i.isClassAllowed(e) ? "" : "opacity-50", ""), g(2), Ye(e.name), g(1), Ni("src", "assets/img/", e.id, ".png", Ti), g(1), D("innerHTML", e.desc, fn), g(5), D("ngIf", e.id), g(2), Un("me-1 fas fa-", i.data.lvl >= i.dataService.classLvlReq(e.id) ? "check" : "times", ""), g(2), Se("Level: ", i.dataService.classLvlReq(e.id), ""), g(1), D("ngIf", !i.dataService.isClassUnlocked(e.id)), g(1), D("ngIf", i.dataService.isClassUnlocked(e.id)), g(1), D("ngIf", e.id && i.data.cl != e.id)
                    }
                }

                function LR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 169), d(1, "h5", 170), _(2, "Class selection"), f(), d(3, "button", 171), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), d(4, "span", 172), _(5, "\xd7"), f(), f(), f(), d(6, "div", 173), d(7, "div", 181), O(8, BR, 17, 15, "div", 182), f(), _(9, " Class requirements (other than class & level) are needed only the first time you unlock a class. "), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(8), D("ngForOf", e.conf.cl)
                    }
                }

                function VR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 204), ie("click", function() {
                            return pe(e), k(2).data.dark = !0
                        }), _(1, "Dark mode"), f()
                    }
                }

                function HR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 204), ie("click", function() {
                            return pe(e), k(2).data.dark = !1
                        }), _(1, "Light mode"), f()
                    }
                }

                function jR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 169), d(1, "h5", 170), _(2, "Options"), f(), d(3, "button", 171), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), d(4, "span", 172), _(5, "\xd7"), f(), f(), f(), d(6, "div", 173), d(7, "h3"), _(8, "Options"), f(), d(9, "div", 192), d(10, "input", 193), ie("change", function() {
                            pe(e);
                            const r = k();
                            return r.data.options.invpause = !r.data.options.invpause
                        }), f(), d(11, "label", 194), _(12, " Auto-pause on inventory "), f(), f(), d(13, "div", 145), O(14, VR, 2, 0, "button", 195), O(15, HR, 2, 0, "button", 195), f(), d(16, "h3"), _(17, "Export / Import"), f(), ee(18, "textarea", 196), d(19, "button", 197), ie("click", function() {
                            return pe(e), k().download()
                        }), ee(20, "i", 198), _(21, " Download"), f(), d(22, "button", 199), ie("click", function() {
                            return pe(e), k().import()
                        }), ee(23, "i", 200), _(24, " Import"), f(), d(25, "button", 201), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), ee(26, "i", 202), _(27, " Close"), f(), ee(28, "br"), d(29, "button", 203), ie("click", function() {
                            return pe(e), k().hardreset()
                        }), _(30, "Hard reset"), f(), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(10), D("value", e.data.options.invpause), g(4), D("ngIf", !e.data.dark), g(1), D("ngIf", e.data.dark), g(3), D("value", e.export)
                    }
                }

                function GR(t, n) {
                    1 & t && (d(0, "h6", 213), _(1, "Done !"), f())
                }

                function $R(t, n) {
                    if (1 & t && (d(0, "h6", 214), _(1), f()), 2 & t) {
                        const e = k().$implicit,
                            i = k(2);
                        g(1), et(" ", e.val(i.dataService), "/", e.req, " ")
                    }
                }

                function qR(t, n) {
                    if (1 & t && (d(0, "div", 207), d(1, "div", 208), d(2, "h5", 209), _(3), f(), O(4, GR, 2, 0, "h6", 210), O(5, $R, 2, 2, "h6", 211), d(6, "small", 212), _(7), f(), f(), f()), 2 & t) {
                        const e = n.$implicit,
                            i = k(2);
                        Un("card ", i.data.dark ? "text-white bg-dark border-light" : "", " me-2 mb-2"), g(3), Se("", e.desc, " "), g(1), D("ngIf", i.dataService.isAchievementDone(e.id)), g(1), D("ngIf", !i.dataService.isAchievementDone(e.id)), g(2), Se("Reward: ", e.rewardDesc, "")
                    }
                }

                function UR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 169), d(1, "h5", 170), _(2, "Achievements"), f(), d(3, "button", 171), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), d(4, "span", 172), _(5, "\xd7"), f(), f(), f(), d(6, "div", 205), O(7, qR, 8, 7, "div", 206), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(7), D("ngForOf", e.conf.achievements)
                    }
                }

                function zR(t, n) {
                    1 & t && (d(0, "div", 219), _(1, "Your stash is not full! Are you sure?"), f())
                }

                function WR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 169), d(1, "h5", 170), _(2, "Exile"), f(), d(3, "button", 171), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), d(4, "span", 172), _(5, "\xd7"), f(), f(), f(), d(6, "div", 173), d(7, "b"), _(8, "Are you sure you want to exile ?"), f(), ee(9, "br"), _(10, " You will get "), d(11, "b"), _(12), f(), _(13), ee(14, "br"), _(15, " You will keep your stash, shards and unlocked class will remain unlocked."), ee(16, "br"), _(17, " You will lose everything else: progress, xp, attributes, skills, inventory... "), d(18, "div", 215), ee(19, "i", 216), _(20, " Don't forget to store your favorite items in your stash or it will be lost."), f(), d(21, "div", 23), d(22, "button", 199), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), _(23, "Cancel"), f(), O(24, zR, 2, 0, "div", 217), d(25, "button", 218), ie("click", function() {
                            return pe(e), k().exile()
                        }), _(26), f(), f(), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(12), Se("", e.dataService.relicGain(), " relics"), g(1), Se(" (+", 100 * e.dataService.relicMult(), "% xp gain / relic)"), g(11), D("ngIf", e.exileWarning), g(2), Ye(e.exileWarning ? "I'm sure" : "Exile")
                    }
                }

                function YR(t, n) {
                    1 & t && ee(0, "i", 224)
                }

                function KR(t, n) {
                    1 & t && ee(0, "i", 225)
                }

                function ZR(t, n) {
                    if (1 & t && (d(0, "li", 64), d(1, "a", 65), O(2, YR, 1, 0, "i", 222), O(3, KR, 1, 0, "i", 223), _(4), f(), f()), 2 & t) {
                        const e = n.$implicit,
                            i = n.index,
                            r = k(2);
                        D("ngbNavItem", i), g(2), D("ngIf", e.enabled), g(1), D("ngIf", !e.enabled), g(1), Se(" ", r.mercTabName(e), " ")
                    }
                }

                function QR(t, n) {
                    if (1 & t && ee(0, "span", 229), 2 & t) {
                        const e = n.$implicit,
                            i = k(4);
                        D("innerHtml", i.mercSkillName(e), fn)("ngbPopover", i.mercSkillDesc(e))
                    }
                }

                function JR(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "tr"), d(1, "td"), d(2, "span", 94), _(3), f(), O(4, QR, 1, 2, "span", 227), f(), d(5, "td"), _(6), f(), d(7, "td"), ee(8, "i", 226), _(9), qe(10, "float"), f(), d(11, "td"), d(12, "button", 228), ie("click", function() {
                            const r = pe(e),
                                s = r.$implicit,
                                o = r.index;
                            return k(3).hire(s, o)
                        }), _(13, "Hire"), f(), f(), f()
                    }
                    if (2 & t) {
                        const e = n.$implicit,
                            i = k(3);
                        g(2), D("ngbPopover", i.mercDesc(e)), g(1), Ye(i.mercTabName(e)), g(1), D("ngForOf", e.config.skills), g(2), Se("Level ", e.lvl, ""), g(3), Se(" ", yt(10, 6, i.dataService.mercCost(e)), ""), g(3), D("disabled", !i.canHire(e))
                    }
                }

                function XR(t, n) {
                    if (1 & t && (d(0, "div"), d(1, "table", 151), d(2, "tbody"), O(3, JR, 14, 8, "tr", 27), f(), f(), d(4, "span", 7), ee(5, "i", 226), _(6), qe(7, "float"), f(), _(8), f()), 2 & t) {
                        const e = k(2);
                        g(3), D("ngForOf", e.data.mercToHire), g(3), Se(" ", yt(7, 4, e.data.gold), ""), g(2), et(" Hirelings: ", e.data.merc.length, "/", e.data.maxmercs, " ")
                    }
                }

                function eP(t, n) {
                    1 & t && (d(0, "div", 236), _(1, "(Dead)"), f())
                }

                function tP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div"), d(1, "div", 237), _(2), qe(3, "float"), qe(4, "float"), f(), _(5, " Sell "), d(6, "select", 238, 239), ie("change", function() {
                            pe(e);
                            const r = Pe(7),
                                s = k(3);
                            return s.data.merc[s.mercTab].config.rarity = r.value
                        }), d(8, "option", 240), _(9, "Normal"), f(), d(10, "option", 241), _(11, "Magical and below"), f(), d(12, "option", 242), _(13, "Rare and below"), f(), d(14, "option", 243), _(15, "Epic and below"), f(), d(16, "option", 244), _(17, "Legendary and below"), f(), d(18, "option", 245), _(19, "All (including uniques)"), f(), f(), _(20, " items with value below "), d(21, "input", 246, 247), ie("change", function() {
                            pe(e);
                            const r = Pe(22),
                                s = k(3);
                            return s.data.merc[s.mercTab].config.cost = r.value
                        }), f(), ee(23, "br"), _(24), qe(25, "number"), f()
                    }
                    if (2 & t) {
                        const e = k(3);
                        g(2), Vo("Level: ", e.data.merc[e.mercTab].lvl, " (xp: ", yt(3, 6, e.data.merc[e.mercTab].xp), " / ", yt(4, 8, e.dataService.xpReqAbs(e.data.merc[e.mercTab].lvl)), ") "), g(4), D("value", e.data.merc[e.mercTab].config.rarity), g(15), D("value", e.data.merc[e.mercTab].config.cost), g(3), Se(" Selling every ", tn(25, 10, e.dataService.sellerDelay(e.data.merc[e.mercTab].lvl), "1.1-1"), "s. ")
                    }
                }

                function nP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "span"), _(1), d(2, "input", 246, 255), ie("change", function() {
                            pe(e);
                            const r = Pe(3);
                            return k().$implicit.treshold = r.value
                        }), f(), f()
                    }
                    if (2 & t) {
                        const e = k().$implicit;
                        g(1), Se(" when ", "healing" == e.type ? "life" : "mana", " is under "), g(1), D("value", e.treshold)
                    }
                }

                function iP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 237), _(1, " Give "), d(2, "select", 238, 249), ie("change", function() {
                            const s = pe(e).$implicit,
                                o = Pe(3);
                            return s.type = o.value
                        }), d(4, "option", 250), _(5, "Nothing"), f(), d(6, "option", 251), _(7, "Healing potion"), f(), d(8, "option", 252), _(9, "Mana potion"), f(), d(10, "option", 253), _(11, "Thawing potion"), f(), d(12, "option", 254), _(13, "Antidote"), f(), f(), O(14, nP, 4, 2, "span", 39), f()
                    }
                    if (2 & t) {
                        const e = n.$implicit;
                        g(2), D("value", e.type), g(12), D("ngIf", "healing" == e.type || "mana" == e.type)
                    }
                }

                function rP(t, n) {
                    if (1 & t && (d(0, "div"), d(1, "div", 237), _(2), qe(3, "float"), qe(4, "float"), f(), O(5, iP, 15, 2, "div", 248), ee(6, "br"), _(7), qe(8, "number"), f()), 2 & t) {
                        const e = k(3);
                        g(2), Vo("Level: ", e.data.merc[e.mercTab].lvl, " (xp: ", yt(3, 5, e.data.merc[e.mercTab].xp), " / ", yt(4, 7, e.dataService.xpReqAbs(e.data.merc[e.mercTab].lvl)), ") "), g(3), D("ngForOf", e.data.merc[e.mercTab].config.actions), g(2), Se(" Gives potion every ", tn(8, 9, e.dataService.assistantDelay(e.data.merc[e.mercTab].lvl), "1.1-1"), "s. ")
                    }
                }

                function sP(t, n) {
                    if (1 & t && ee(0, "span", 229), 2 & t) {
                        const e = n.$implicit,
                            i = k(4);
                        D("innerHtml", i.mercSkillName(e), fn)("ngbPopover", i.mercSkillDesc(e))
                    }
                }

                function oP(t, n) {
                    if (1 & t && (d(0, "div"), d(1, "table", 151), d(2, "tbody"), d(3, "tr"), d(4, "td"), _(5, "Level"), f(), d(6, "td"), _(7), qe(8, "float"), qe(9, "float"), f(), f(), d(10, "tr"), d(11, "td"), _(12, "Damage"), f(), d(13, "td"), _(14), f(), f(), d(15, "tr"), d(16, "td"), _(17, "Attack rating"), f(), d(18, "td"), _(19), qe(20, "number"), f(), f(), d(21, "tr"), d(22, "td"), _(23, "Speed"), f(), d(24, "td"), _(25), f(), f(), d(26, "tr"), d(27, "td"), _(28, "Defense"), f(), d(29, "td"), _(30), qe(31, "number"), f(), f(), d(32, "tr"), d(33, "td"), _(34, "Life"), f(), d(35, "td"), _(36), f(), f(), d(37, "tr"), d(38, "td"), _(39, "Resistances"), f(), d(40, "td"), _(41), f(), f(), f(), f(), d(42, "div"), O(43, sP, 1, 2, "span", 227), f(), f()), 2 & t) {
                        const e = k(3);
                        g(7), Vo("", e.data.merc[e.mercTab].lvl, " (xp: ", yt(8, 14, e.data.merc[e.mercTab].xp), " / ", yt(9, 16, e.dataService.xpReqAbs(e.data.merc[e.mercTab].lvl)), ")"), g(7), et("", e.dataService.mercMinDmg(e.data.merc[e.mercTab]), " - ", e.dataService.mercMaxDmg(e.data.merc[e.mercTab]), ""), g(5), et("", e.dataService.mercAtkRating(e.data.merc[e.mercTab]), " (chance to hit: ", tn(20, 18, e.dataService.mercChances(e.data.merc[e.mercTab]), "1.0-0"), "%)"), g(6), et("", e.dataService.mercSpeed(e.data.merc[e.mercTab]), " (", e.dataService.strSpeed(e.dataService.mercSpeed(e.data.merc[e.mercTab])), ") "), g(5), et("", e.dataService.mercDefense(e.data.merc[e.mercTab]), " (chance to hit: ", tn(31, 21, e.dataService.mercRevChances(e.data.merc[e.mercTab]), "1.0-0"), "%)"), g(6), Ye(e.dataService.mercMaxLife(e.data.merc[e.mercTab])), g(5), Ye(e.dataService.mercRes(e.data.merc[e.mercTab])), g(2), D("ngForOf", e.data.merc[e.mercTab].config.skills)
                    }
                }

                function aP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 256), ie("click", function() {
                            pe(e);
                            const r = k(3);
                            return r.resurrect(r.mercTab)
                        }), _(1, "Resurrect ("), ee(2, "i", 226), _(3), qe(4, "float"), f()
                    }
                    if (2 & t) {
                        const e = k(3);
                        D("disabled", !e.canResurrect(e.data.merc[e.mercTab])), g(3), Se(" ", yt(4, 2, e.dataService.resurrectCost(e.data.merc[e.mercTab])), ")")
                    }
                }

                function lP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 230), d(1, "div", 23), d(2, "input", 231), ie("change", function() {
                            pe(e);
                            const r = k(2);
                            return r.data.merc[r.mercTab].enabled = !r.data.merc[r.mercTab].enabled
                        }), f(), d(3, "label", 232), _(4, "Enabled"), f(), O(5, eP, 2, 0, "div", 233), f(), O(6, tP, 26, 13, "div", 39), O(7, rP, 9, 12, "div", 39), O(8, oP, 44, 24, "div", 39), d(9, "div"), d(10, "button", 234), ie("click", function() {
                            pe(e);
                            const r = k(2);
                            return r.dismiss(r.mercTab)
                        }), _(11, "Dismiss"), f(), O(12, aP, 5, 4, "button", 235), f(), f()
                    }
                    if (2 & t) {
                        const e = k(2);
                        g(2), D("checked", e.data.merc[e.mercTab].enabled), g(3), D("ngIf", e.data.merc[e.mercTab].config.dead), g(1), D("ngIf", "seller" == e.data.merc[e.mercTab].type && e.data.merc[e.mercTab].enabled), g(1), D("ngIf", "assistant" == e.data.merc[e.mercTab].type && e.data.merc[e.mercTab].enabled), g(1), D("ngIf", "fighter" == e.data.merc[e.mercTab].type && e.data.merc[e.mercTab].enabled), g(4), D("ngIf", e.data.merc[e.mercTab].config.dead)
                    }
                }

                function cP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 169), d(1, "h5", 170), _(2, "Mercenary"), f(), d(3, "button", 171), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), d(4, "span", 172), _(5, "\xd7"), f(), f(), f(), d(6, "div", 220), d(7, "ul", 100), ie("activeIdChange", function(r) {
                            return pe(e), k().mercTab = r
                        }), O(8, ZR, 5, 4, "li", 155), d(9, "li", 64), d(10, "a", 65), _(11, "Hire"), f(), f(), f(), O(12, XR, 9, 6, "div", 39), O(13, lP, 13, 6, "div", 221), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(7), D("activeId", e.mercTab), g(1), D("ngForOf", e.data.merc), g(1), D("ngbNavItem", -1), g(3), D("ngIf", -1 == e.mercTab), g(1), D("ngIf", -1 != e.mercTab)
                    }
                }

                function uP(t, n) {
                    if (1 & t && (d(0, "div"), d(1, "b", 145), ee(2, "i", 268), _(3, " Shards:"), f(), _(4), qe(5, "float"), f()), 2 & t) {
                        const e = k(2);
                        g(4), Se("", yt(5, 1, e.data.shards), " ")
                    }
                }

                function dP(t, n) {
                    if (1 & t && (d(0, "option", 270), _(1), f()), 2 & t) {
                        const e = k(),
                            i = e.index,
                            r = e.$implicit;
                        D("selected", k(2).invSelect == i)("value", i), g(1), Ye(r)
                    }
                }

                function fP(t, n) {
                    if (1 & t && (In(0), O(1, dP, 2, 3, "option", 269), On()), 2 & t) {
                        const e = n.index;
                        g(1), D("ngIf", 9 != e)
                    }
                }

                function pP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 278), ie("click", function() {
                            pe(e);
                            const r = k(2).index;
                            return k(2).equip(r)
                        }), _(1, "Equip"), f()
                    }
                    if (2 & t) {
                        const e = k(2).index,
                            i = k(2);
                        D("disabled", !i.dataService.checkItemReqs(i.data.inv[e].item))
                    }
                }

                function hP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 279), ie("click", function() {
                            pe(e);
                            const r = k(2).index;
                            return k(2).store(r)
                        }), _(1, "Store"), f()
                    }
                }

                function gP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 280), ie("click", function() {
                            pe(e);
                            const r = k(2).index;
                            return k(2).imbue(r)
                        }), _(1, "Imbue"), f()
                    }
                }

                function mP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 281), ie("click", function() {
                            pe(e);
                            const r = k(2).index;
                            return k(2).dataService.drink(r)
                        }), _(1, "Drink"), f()
                    }
                }

                function _P(t, n) {
                    if (1 & t && (d(0, "span", 282), _(1), f()), 2 & t) {
                        const e = k(2).$implicit;
                        g(1), Se("x", e.nb, "")
                    }
                }

                function vP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div"), O(1, pP, 2, 1, "button", 271), O(2, hP, 2, 0, "button", 272), O(3, gP, 2, 0, "button", 273), O(4, mP, 2, 0, "button", 274), d(5, "button", 275), ie("click", function() {
                            pe(e);
                            const r = k().index;
                            return k(2).dataService.sell(r)
                        }), _(6, "Sell"), f(), ee(7, "item", 276), O(8, _P, 2, 1, "span", 277), f()
                    }
                    if (2 & t) {
                        const e = k().$implicit,
                            i = k(2);
                        g(1), D("ngIf", !e.item.potion), g(1), D("ngIf", !e.item.potion && i.dataService.isUnlocked("exile")), g(1), D("ngIf", !e.item.potion && i.data.imbue && !e.item.effects.length), g(1), D("ngIf", e.item.potion), g(3), D("item", e.item)("compare", !0), g(1), D("ngIf", e.item.potion)
                    }
                }

                function yP(t, n) {
                    if (1 & t && (In(0), O(1, vP, 9, 7, "div", 39), On()), 2 & t) {
                        const e = n.$implicit,
                            i = k(2);
                        g(1), D("ngIf", i.showItem(e.item))
                    }
                }

                function bP(t, n) {
                    1 & t && (d(0, "li", 64), d(1, "a", 65), ee(2, "i", 283), _(3, " Stash"), f(), f()), 2 & t && D("ngbNavItem", 1)
                }

                function DP(t, n) {
                    1 & t && (d(0, "li", 64), d(1, "a", 65), ee(2, "i", 284), _(3, " Market"), f(), f()), 2 & t && D("ngbNavItem", 2)
                }

                function xP(t, n) {
                    1 & t && (d(0, "li", 64), d(1, "a", 65), ee(2, "i", 285), _(3, " Shards"), f(), f()), 2 & t && D("ngbNavItem", 3)
                }

                function wP(t, n) {
                    1 & t && ee(0, "div", 123), 2 & t && D("innerHtml", k(3).shardsUseStatus, fn)
                }

                function CP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div"), _(1, " You can try to create a unique item with your shards."), ee(2, "br"), _(3), d(4, "input", 286, 287), ie("input", function() {
                            pe(e);
                            const r = Pe(5);
                            return k(2).setShardsToUse(r.value)
                        }), f(), ee(6, "br"), _(7), qe(8, "percent"), ee(9, "br"), d(10, "button", 288), ie("click", function() {
                            return pe(e), k(2).useShards()
                        }), _(11, "Create item"), f(), O(12, wP, 1, 1, "div", 122), f()
                    }
                    if (2 & t) {
                        const e = k(2);
                        g(3), Se(" Shards to use: ", e.shardsToUse, " "), g(1), D("max", e.data.shards)("value", e.shardsToUse), g(3), Se(" Chances of success: ", yt(8, 6, e.dataService.shardsChances(e.shardsToUse)), ""), g(3), D("disabled", !e.canUseShards()), g(2), D("ngIf", e.shardsUseStatus)
                    }
                }

                function MP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "button", 293), ie("click", function() {
                            pe(e);
                            const r = k().index;
                            return k(3).unequip(r)
                        }), _(1, "Unequip"), f()
                    }
                }

                function TP(t, n) {
                    if (1 & t && (d(0, "tr", 290), d(1, "td"), _(2), f(), d(3, "td"), ee(4, "item", 291), f(), d(5, "td"), O(6, MP, 2, 0, "button", 292), f(), f()), 2 & t) {
                        const e = n.$implicit,
                            i = n.index,
                            r = k(3);
                        g(2), Se(" ", e, ": "), g(2), D("item", r.data.equip[i]), g(2), D("ngIf", r.data.equip[i])
                    }
                }

                function SP(t, n) {
                    if (1 & t && (d(0, "table", 151), d(1, "tbody"), O(2, TP, 7, 3, "tr", 289), f(), f()), 2 & t) {
                        const e = k(2);
                        g(2), D("ngForOf", e.conf.equipNames)
                    }
                }

                function EP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div"), d(1, "button", 279), ie("click", function() {
                            const s = pe(e).index;
                            return k(3).take(s)
                        }), _(2, "Take"), f(), ee(3, "item", 291), f()
                    }
                    if (2 & t) {
                        const e = n.$implicit;
                        g(3), D("item", e)
                    }
                }

                function kP(t, n) {
                    if (1 & t && (d(0, "div", 294), d(1, "b"), _(2), f(), O(3, EP, 4, 1, "div", 27), f()), 2 & t) {
                        const e = k(2);
                        g(2), et("Storage: ", e.data.stash.length, "/", e.data.stashlimit, ""), g(1), D("ngForOf", e.data.stash)
                    }
                }

                function NP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "tr"), d(1, "td"), _(2), f(), d(3, "td"), _(4), f(), d(5, "td"), _(6), f(), d(7, "td"), _(8), f(), d(9, "td"), _(10), f(), d(11, "td"), _(12), qe(13, "float"), f(), d(14, "td"), d(15, "button", 295), ie("click", function() {
                            const s = pe(e).$implicit;
                            return k(3).gamble(s)
                        }), _(16, "Gamble"), f(), f(), f()
                    }
                    if (2 & t) {
                        const e = n.$implicit,
                            i = k(3);
                        g(2), Ye(e.name), g(2), Se("", e.dratios[0], "%"), g(2), Se("", e.dratios[1], "%"), g(2), Se("", e.dratios[2], "%"), g(2), Se("", e.dratios[3], "%"), g(2), Ye(yt(13, 7, i.dataService.gamblingCost(e.dratios))), g(3), D("disabled", !i.canGamble(e))
                    }
                }

                function AP(t, n) {
                    if (1 & t && (d(0, "table", 151), d(1, "thead"), d(2, "tr"), d(3, "th"), _(4, "Merchant"), f(), d(5, "th"), _(6, "Magical"), f(), d(7, "th"), _(8, "Rare"), f(), d(9, "th"), _(10, "Epic"), f(), d(11, "th"), _(12, "Legendary"), f(), d(13, "th"), _(14, "Price"), f(), ee(15, "th"), f(), f(), d(16, "tbody"), O(17, NP, 17, 9, "tr", 27), f(), f()), 2 & t) {
                        const e = k(2);
                        g(17), D("ngForOf", e.data.merchants)
                    }
                }

                function IP(t, n) {
                    if (1 & t) {
                        const e = xe();
                        d(0, "div", 169), d(1, "h5", 170), _(2, "Inventory"), f(), d(3, "button", 171), ie("click", function() {
                            return pe(e).$implicit.dismiss()
                        }), d(4, "span", 172), _(5, "\xd7"), f(), f(), f(), d(6, "div", 257), d(7, "div", 258), d(8, "div", 38), d(9, "div"), d(10, "b", 145), ee(11, "i", 226), _(12, " Gold:"), f(), _(13), qe(14, "float"), f(), O(15, uP, 6, 3, "div", 39), d(16, "div"), _(17, "Show: "), d(18, "select", 259, 260), ie("change", function() {
                            pe(e);
                            const r = Pe(19);
                            return k().onChangeInventory(r.value)
                        }), d(20, "option", 261), _(21, "All"), f(), O(22, fP, 2, 1, "ng-container", 27), d(23, "option", 262), _(24, "Potions"), f(), f(), f(), f(), d(25, "div", 263), O(26, yP, 2, 1, "ng-container", 27), f(), f(), d(27, "div", 264), d(28, "ul", 100), ie("activeIdChange", function(r) {
                            return pe(e), k().invTab = r
                        }), d(29, "li", 64), d(30, "a", 65), ee(31, "i", 265), _(32, " Equipment"), f(), f(), O(33, bP, 4, 1, "li", 101), O(34, DP, 4, 1, "li", 101), O(35, xP, 4, 1, "li", 101), f(), O(36, CP, 13, 8, "div", 39), O(37, SP, 3, 1, "table", 266), O(38, kP, 4, 3, "div", 267), O(39, AP, 18, 1, "table", 266), f(), f()
                    }
                    if (2 & t) {
                        const e = k();
                        g(13), Se("", yt(14, 15, e.data.gold), " "), g(2), D("ngIf", e.dataService.isUnlocked("shards")), g(5), D("selected", -1 == e.invSelect), g(2), D("ngForOf", e.conf.equipNames), g(1), D("selected", -2 == e.invSelect), g(3), D("ngForOf", e.data.inv), g(2), D("activeId", e.invTab), g(1), D("ngbNavItem", 0), g(4), D("ngIf", e.dataService.isUnlocked("exile")), g(1), D("ngIf", e.dataService.isUnlocked("gambling")), g(1), D("ngIf", e.dataService.isUnlocked("shards")), g(1), D("ngIf", 3 == e.invTab), g(1), D("ngIf", 0 == e.invTab), g(1), D("ngIf", 1 == e.invTab), g(1), D("ngIf", 2 == e.invTab)
                    }
                }
                let OP = (() => {
                        class t {
                            constructor(e, i, r, s, o, a, l, c) {
                                this.engine = e, this.data = i, this.dataService = r, this.conf = s, this.modalService = l, this.saveService = c, this.env = wb, this.ctrl = !1, this.actTab = 0, this.tab = 0, this.skillTab = 0, this.invTab = 0, this.mercTab = 0, this.now = Date.now(), this.invSelect = -1, this.showAllLevels = !1, this.shardsToUse = 10, this.shardsUseStatus = "", this.exileWarning = !1, this.bg = "", o.placement = "right", o.triggers = "manual", o.container = "body", o.animation = !1, o.autoClose = !1, a.animation = !1
                            }
                            handleKeydownEvent(e) {
                                if ("control" == e.key.toLowerCase()) this.ctrl = !0;
                                else if ("i" == e.key.toLowerCase()) this.modalService.hasOpenModals() ? this.modalService.dismissAll() : this.openInventory(this.invModal);
                                else if (e.code.startsWith("Digit")) {
                                    let i = parseInt(e.code.replace("Digit", ""));
                                    if (i <= 5) this.data.quickslots.potions.length >= i && this.data.quickslots.potions[i - 1] && this.dataService.drinkById(this.data.quickslots.potions[i - 1]);
                                    else if (i -= 5, this.data.quickslots.skills.length >= i && this.data.quickslots.skills[i - 1]) {
                                        let r = this.dataService.skill(this.data.quickslots.skills[i - 1]);
                                        r && this.dataService.useSkill(r)
                                    }
                                } else "h" == e.key.toLowerCase() ? this.dataService.goTo(this.conf.l[this.data.act][0].id) : " " == e.key.toLowerCase() && (this.data.pause = !this.data.pause)
                            }
                            handleKeyupEvent(e) {
                                "control" == e.key.toLowerCase() && (this.ctrl = !1)
                            }
                            ngOnInit() {
                                this.env.production || console.log(this), this.saveService.load(), this.dataService.init(), this.actTab = this.data.act, this.engine.start(), this.timer = setInterval(() => {
                                    if (this.now = Date.now(), this.data.tutos.length) {
                                        let e = this.data.tutos[0];
                                        this.tuto(e.selector, e.html, e.position || "right")
                                    }
                                }, 100), this.initBg()
                            }
                            topbarStyle() {
                                return {
                                    height: "45px",
                                    background: this.bg
                                }
                            }
                            initBg() {
                                let e;
                                1 == this.data.cl && (e = "#5c0004"), 2 == this.data.cl && (e = "#004f5c"), 3 == this.data.cl && (e = "#005c00"), e && (this.bg = "linear-gradient(135deg, transparent, " + e + ", transparent)")
                            }
                            tuto(e, i, r) {
                                let s = document.querySelector("#popover");
                                if (!s || "hidden" != s.style.visibility) return;
                                let o = document.querySelector(e);
                                if (!o) return;
                                this.data.pause = !0;
                                let a = document.querySelector("#popover .popover-body-text"),
                                    l = document.querySelector("#popover .popover-arrow");
                                if (a.innerHTML = i, s.style.visibility = "", "right" == r) {
                                    let c = o.clientWidth + o.getBoundingClientRect().left + 10,
                                        u = o.getBoundingClientRect().top + o.clientHeight / 2 - s.clientHeight / 2;
                                    s.style.transform = "translate(" + c + "px, " + u + "px)", l.style.transform = "translate(0px, " + (s.clientHeight / 2 - 8) + "px)"
                                } else if ("left" == r) {
                                    let c = o.getBoundingClientRect().left - s.clientWidth - 15,
                                        u = o.getBoundingClientRect().top + o.clientHeight / 2 - s.clientHeight / 2;
                                    s.style.transform = "translate(" + c + "px, " + u + "px)", l.style.transform = "translate(" + (s.clientWidth + 13) + "px, " + (s.clientHeight / 2 - 8) + "px) rotate(180deg)"
                                } else if ("bottom" == r) {
                                    let c = o.clientHeight + o.getBoundingClientRect().top + 10,
                                        u = o.getBoundingClientRect().left + o.clientWidth / 2 - s.clientWidth / 2;
                                    s.style.transform = "translate(" + u + "px, " + c + "px)", l.style.transform = "translate(" + (s.clientWidth / 2 - 8) + "px, -16px) rotate(90deg)"
                                }
                            }
                            closeTuto() {
                                this.data.pause = !1, this.data.tutos.splice(0, 1), document.querySelector("#popover").style.visibility = "hidden"
                            }
                            ngOnDestroy() {
                                this.timer && clearInterval(this.timer)
                            }
                            itemType(e) {
                                return e.potion ? "p" : "" + this.dataService.baseItem(e.id).type
                            }
                            togglePause() {
                                this.data.pause || this.data.autopause ? (this.data.pause = !1, this.data.autopause = !1) : this.data.pause = !0
                            }
                            open(e, i = "xl", r = "", s = {}) {
                                let o = Object.assign({
                                    modalDialogClass: r + (this.data.dark ? " dark" : ""),
                                    size: i
                                }, s);
                                return this.modalService.open(e, o)
                            }
                            openInventory(e) {
                                this.data.options.invpause && (this.data.autopause = !0), this.open(e, "xl", "modal-inv").result.then(() => {}, () => {
                                    this.data.options.invpause && (this.data.autopause = !1)
                                })
                            }
                            openMercenary(e) {
                                this.data.options.invpause && (this.data.autopause = !0), this.data.merc.length || (this.mercTab = -1), this.open(e, "xl", "modal-inv").result.then(() => {}, () => {
                                    this.data.options.invpause && (this.data.autopause = !1)
                                })
                            }
                            openOptions(e) {
                                let i = {
                                    modalDialogClass: this.data.dark ? "dark" : "",
                                    size: "lg"
                                };
                                this.export = this.saveService.encryptData(), this.modalService.open(e, i)
                            }
                            download() {
                                this.export = this.saveService.encryptData();
                                const e = new Blob([this.export], {
                                    type: "text"
                                });
                                (0, O4.saveAs)(e, "rakanishu_" + class R4 {
                                    static capitalizeFirstLetter(n) {
                                        return n.charAt(0).toUpperCase() + n.slice(1)
                                    }
                                    static formatDate() {
                                        let n = new Date;
                                        return n.getFullYear() + "_" + (n.getMonth() + 1) + "_" + n.getDate()
                                    }
                                }.formatDate() + ".txt")
                            }
                            import() {
                                let e = document.getElementById("exportArea").value;
                                !e || (this.saveService.load(e), this.modalService.dismissAll())
                            }
                            reward() {
                                this.conf.quests[this.data.quest].reward(this.dataService), this.data.quest++
                            }
                            save() {
                                this.saveService.save()
                            }
                            saveTime() {
                                return Math.floor((this.now - this.data.savetime) / 1e3)
                            }
                            up(e) {
                                let i = this.ctrl ? 5 : 1;
                                i = Math.min(i, this.data.rem), this.dataService.up(e, i), this.data.rem -= i
                            }
                            onChangeInventory(e) {
                                this.invSelect = parseInt(e)
                            }
                            showItem(e) {
                                let i = this.dataService.baseItem(e.id);
                                return !!(-1 == this.invSelect || e.potion && -2 == this.invSelect) || i.type == this.invSelect
                            }
                            store(e) {
                                this.data.stash.length >= this.data.stashlimit || (this.data.stash.push(this.data.inv[e].item), this.data.inv.splice(e, 1))
                            }
                            take(e) {
                                this.data.inv.push({
                                    item: this.data.stash[e],
                                    nb: 1
                                }), this.data.stash.splice(e, 1)
                            }
                            equip(e) {
                                let r = this.dataService.baseItem(this.data.inv[e].item.id);
                                if (!this.dataService.checkItemReqs(this.data.inv[e].item)) return;
                                let s = r.type;
                                8 == s ? this.data.equip[8] ? this.data.equip[9] ? (this.unequip(8), this.data.equip[8] = this.data.inv[e].item) : this.data.equip[9] = this.data.inv[e].item : this.data.equip[8] = this.data.inv[e].item : (this.unequip(s), this.data.equip[s] = this.data.inv[e].item), this.data.inv.splice(e, 1), this.dataService.checkItemsReqs(), 6 == s && this.updatePotionSlots()
                            }
                            mercItem(e, i) {
                                return this.data.merc[e].config.equip[i]
                            }
                            updatePotionSlots() {
                                var e;
                                let i = 1,
                                    r = this.dataService.baseItem((null === (e = this.data.equip[6]) || void 0 === e ? void 0 : e.id) || "");
                                for (r && r.slots && (i += r.slots); i > this.data.quickslots.potions.length;) this.data.quickslots.potions.push("");
                                this.data.quickslots.potions.splice(i)
                            }
                            unequip(e) {
                                this.dataService.unequip(e), 6 == e && this.updatePotionSlots()
                            }
                            nbOf(e) {
                                var i;
                                return (null === (i = this.data.inv.find(r => r.item.id == e)) || void 0 === i ? void 0 : i.nb) || 0
                            }
                            activateShrine() {
                                if (!this.data.shrine) return;
                                let e = this.conf.shrines[this.data.shrine.idx];
                                if (e.effect && e.effect(this.dataService), e.duration) {
                                    let i = e.duration,
                                        r = this.dataService.totalEffect("shrine");
                                    r && (i *= 1 + r / 100), this.data.activeshrine = {
                                        id: e.id,
                                        icon: e.icon,
                                        rem: i,
                                        name: e.name
                                    }, this.data.stats.total.shrines++
                                }
                                this.data.shrine = void 0
                            }
                            goTo(e) {
                                this.dataService.goTo(e)
                            }
                            levelName(e) {
                                var i;
                                return (null === (i = this.dataService.l(e)) || void 0 === i ? void 0 : i.name) || ""
                            }
                            progMHp(e) {
                                return 100 * e.hp / e.ihp
                            }
                            summonName(e) {
                                var i;
                                return (null === (i = this.dataService.baseSummon(e.type)) || void 0 === i ? void 0 : i.name) || ""
                            }
                            summonMaxLife(e) {
                                var i;
                                return (null === (i = this.dataService.baseSummon(e.type)) || void 0 === i ? void 0 : i.maxlife(this.dataService)) || 1
                            }
                            progSummonLife(e) {
                                return 100 * e.life / this.summonMaxLife(e)
                            }
                            progMercLife(e) {
                                return 100 * e.config.life / this.dataService.mercMaxLife(e)
                            }
                            progLife() {
                                return 100 * this.data.life / this.dataService.maxLife()
                            }
                            progMana() {
                                return 100 * this.data.mana / this.dataService.maxMana()
                            }
                            progXp() {
                                return 100 * (this.data.xp - this.dataService.xpReq(-1)) / (this.dataService.xpReq() - this.dataService.xpReq(-1))
                            }
                            progRep() {
                                return 100 * (this.dataService.speed() - this.data.rep) / this.dataService.speed()
                            }
                            progMRep(e) {
                                return 100 * (e.spd - e.rep) / e.spd
                            }
                            progMercRep(e) {
                                let i = this.dataService.mercSpeed(e);
                                return 100 * (i - e.config.rep) / i
                            }
                            progSummonRep(e) {
                                let i = this.summonSpeed(e) || 10;
                                return 100 * (i - e.rep) / i
                            }
                            summonSpeed(e) {
                                let i = this.dataService.baseSummon(e.type);
                                return i && i.speed ? i.speed(this.dataService) : 0
                            }
                            showLog(e) {
                                return !(!this.data.showHitLogs && "h" == e.type || !this.data.showKillLogs && "s" == e.type || !this.data.showNonMagicalItemsLogs && "d0" == e.type || !this.data.showGoldLogs && "dg" == e.type)
                            }
                            slvl(e) {
                                var i;
                                return (null === (i = this.data.skills.find(r => r.id == e)) || void 0 === i ? void 0 : i.level) || 0
                            }
                            sup(e, i) {
                                if (!this.isSkillAvailable(e)) return;
                                let r = this.data.skills.find(s => s.id == e.id);
                                r ? r.level++ : this.data.skills.push({
                                    id: e.id,
                                    level: 1
                                }), this.data.srem--, i.close(), this.toggleSkill(i, e)
                            }
                            isSkillAvailable(e) {
                                let i = this.data.skills.find(r => r.id == e.id);
                                return !(this.isSkillLocked(e) || i && i.level >= this.conf.skilllimit)
                            }
                            isSkillLocked(e) {
                                return this.dataService.lvlReq(e.lvl) > this.data.lvl
                            }
                            toggleSkill(e, i, r = !1) {
                                if (i)
                                    if (r) e.close();
                                    else {
                                        let s = "Level required: " + this.dataService.lvlReq(i.lvl);
                                        this.isSkillLocked(i) && (s = '<span class="text-danger">' + s + "</span>"), s += "<br/>" + i.desc(this.dataService) + (i.cost ? "<hr/>Mana Cost: " + this.dataService.spellCost(i.id) : ""), e.open({
                                            desc: s
                                        })
                                    }
                            }
                            togglePotionDesc(e, i, r, s = !1) {
                                s ? e.close() : e.open({
                                    idx: i,
                                    i: r
                                })
                            }
                            toggleSkillDesc(e, i, r, s = !1) {
                                s ? e.close() : e.open({
                                    idx: i,
                                    s: r
                                })
                            }
                            toggleSkillSelector(e, i) {
                                e.isOpen() ? e.close() : (e.autoClose = "outside", e.open({
                                    idx: i,
                                    popover: e
                                }))
                            }
                            isAutocast(e) {
                                return this.data.autocast.includes(e)
                            }
                            toggleAutocast(e) {
                                let i = this.data.autocast.indexOf(e); - 1 != i ? this.data.autocast.splice(i, 1) : (this.data.autocast.length >= this.dataService.maxAutocast() && this.data.autocast.splice(0, 1), this.data.autocast.push(e))
                            }
                            potions() {
                                return this.data.inv.filter(e => e.item.potion)
                            }
                            potionImg(e) {
                                return -1 != e.id.indexOf("healing") ? "assets/img/potion.png" : -1 != e.id.indexOf("mana") ? "assets/img/potionm.png" : -1 != e.id.indexOf("thawing") ? "assets/img/potiont.png" : -1 != e.id.indexOf("antidote") ? "assets/img/potiona.png" : "assets/img/potiond.png"
                            }
                            selectPotion(e, i, r) {
                                this.data.quickslots.potions[i] = e.id, r.close()
                            }
                            selectSkill(e, i, r) {
                                this.data.quickslots.skills[i] = e.id, r.close()
                            }
                            quickpotions() {
                                return this.data.quickslots.potions.map(e => e ? this.data.inv.find(i => i.item.id == e) : void 0)
                            }
                            quickslots() {
                                return this.data.quickslots.skills.map(e => this.dataService.skill(e))
                            }
                            skills(e) {
                                return this.dataService.class().skillsCat.map(i => i.skills).flat().filter(i => this.dataService.skillLevel(i.id)).filter(i => i.cost && !this.data.quickslots.skills.find((r, s) => r == i.id && s != e))
                            }
                            potionBtnClass(e) {
                                let i = e && e.nb > 0;
                                return {
                                    "skill-btn position-relative": !0,
                                    "bg-allowed": i,
                                    "bg-locked": !i
                                }
                            }
                            skillBtnClass(e) {
                                return {
                                    "skill-btn": !0,
                                    "bg-active": this.dataService.isSkillActive(e),
                                    "bg-allowed": !this.dataService.isSkillActive(e) && this.dataService.isSkillAllowed(e),
                                    "bg-locked": !this.dataService.isSkillActive(e) && !this.dataService.isSkillAllowed(e)
                                }
                            }
                            skillBtnStyle(e) {
                                if (!this.dataService.isSkillCooldown(e.id)) return {};
                                let i = this.cooldownPercent(e);
                                return {
                                    background: "linear-gradient(0deg, #fc7676 " + i + "%, #ffbebe " + i + "%)"
                                }
                            }
                            cooldownPercent(e) {
                                let i = this.data.cooldowns.find(r => r.id == e.id);
                                return i && this.dataService.cooldown(e) ? 100 * i.time / this.dataService.cooldown(e) : 0
                            }
                            isClassAllowed(e) {
                                if (this.dataService.classLvlReq(e.id) > this.data.lvl || e.reqclass != this.data.cl) return !1;
                                if (this.dataService.isClassUnlocked(e.id)) return !0;
                                for (let i of e.req)
                                    if (!i.check(this.dataService)) return !1;
                                return !0
                            }
                            resetSkills() {
                                this.data.skillreset <= 0 || (this.dataService.resetSkills(!0), this.data.skillreset--)
                            }
                            selectClass(e) {
                                !this.isClassAllowed(e) || (this.data.cl = e.id, this.dataService.resetSkills(), this.data.unlockedClass.includes(e.id) || this.data.unlockedClass.push(e.id), e.onSelect && e.onSelect(this.dataService), this.data.stats.run.classselected = Date.now(), this.dataService.checkItemsReqs(), this.data.summons = [], this.initBg())
                            }
                            exile() {
                                if (!this.exileWarning && this.data.stash.length < this.data.stashlimit) return void(this.exileWarning = !0);
                                this.exileWarning = !1, this.modalService.dismissAll();
                                let e = this.dataService.relicGain();
                                if (this.data.relics += e, this.data.init(!0), this.actTab = this.data.act, this.data.stats.total.exiles++, this.data.stats.run.start = Date.now(), this.dataService.log('<span class="text-danger">Exiled ! Gained: ' + e + " relics.</span>", "e"), this.dataService.isAchievementDone("soldit1e3")) {
                                    let i = this.conf.items.find(r => "poignard" == r.id);
                                    i && (this.data.equip[3] = {
                                        name: i.name,
                                        id: i.id,
                                        effects: [],
                                        lvlreq: 1,
                                        price: 1
                                    })
                                } else if (this.dataService.isAchievementDone("soldit1e2")) {
                                    let i = this.conf.items.find(r => "dagger" == r.id);
                                    i && (this.data.equip[3] = {
                                        name: i.name,
                                        id: i.id,
                                        effects: [],
                                        lvlreq: 1,
                                        price: 1
                                    })
                                }
                                if (this.dataService.isAchievementDone("soldm50")) {
                                    let i = this.conf.items.find(r => "quilted" == r.id);
                                    i && (this.data.equip[2] = {
                                        name: i.name,
                                        id: i.id,
                                        def: i.def ? i.def[1] : 10,
                                        effects: [],
                                        lvlreq: 1,
                                        price: 1
                                    })
                                }
                            }
                            canGamble(e) {
                                return this.data.gold >= this.dataService.gamblingCost(e.dratios)
                            }
                            gamble(e) {
                                !this.canGamble(e) || (this.dataService.dropItem(this.data.lvl, -1, 1, e.ratios[0], e.ratios[1], e.ratios[2], e.ratios[3]), this.data.gold -= this.dataService.gamblingCost(e.dratios))
                            }
                            imbue(e) {
                                if (this.data.imbue <= 0) return;
                                let i = this.data.inv[e],
                                    r = this.dataService.baseItem(i.item.id);
                                this.dataService.dropItem(Math.max(this.data.lvl, i.item.lvlreq), r.type, 1, 1, 1, .15, .05, r.id) && this.data.inv.splice(e, 1), this.data.imbue--
                            }
                            canHire(e) {
                                return !(this.data.merc.length >= this.data.maxmercs || this.data.merc.find(i => i.type == e.type) || this.dataService.mercCost(e) > this.data.gold)
                            }
                            canResurrect(e) {
                                return !(this.dataService.resurrectCost(e) > this.data.gold)
                            }
                            hire(e, i) {
                                !this.canHire(e) || (this.data.gold -= this.dataService.mercCost(e), "fighter" == e.type ? this.data.merc.unshift(e) : this.data.merc.push(e), this.data.mercToHire.splice(i, 1))
                            }
                            mercTabName(e) {
                                let i = this.conf.mercs.find(r => r.id == e.type);
                                return i ? e.name + " (" + i.name + ")" : ""
                            }
                            dismiss(e) {
                                this.data.merc.splice(e, 1), this.mercTab = this.data.merc.length ? 0 : -1
                            }
                            resurrect(e) {
                                let i = this.data.merc[e];
                                !this.canResurrect(i) || (this.data.gold -= this.dataService.resurrectCost(i), i.config.dead = !1, i.config.life = this.dataService.mercMaxLife(i))
                            }
                            mercSkillName(e) {
                                var i;
                                let r = " " + (null === (i = this.dataService.mercSkill(e)) || void 0 === i ? void 0 : i.name),
                                    s = parseInt(e.split("_")[1]);
                                for (let o = 0; o < s; o++) r = '<i class="fas fa-star"></i>' + r;
                                return r
                            }
                            mercSkillDesc(e) {
                                let i = this.dataService.mercSkill(e),
                                    r = e.split("_")[0],
                                    s = parseInt(e.split("_")[1]);
                                return i ? this.conf.magicDesc[r](i.values[s - 1]) : ""
                            }
                            mercDesc(e) {
                                var i;
                                return (null === (i = this.conf.mercs.find(r => r.id == e.type)) || void 0 === i ? void 0 : i.desc) || ""
                            }
                            roman(e) {
                                return 1 == e ? "I" : 2 == e ? "II" : 3 == e ? "III" : 4 == e ? "IV" : 5 == e ? "V" : ""
                            }
                            showLevel(e, i) {
                                if (!this.data.l.find(a => a.id == e.id)) return !1;
                                let r = this.data.l.findIndex(a => a.id == e.id),
                                    s = this.conf.l[this.actTab],
                                    o = s.findIndex(a => a.id == e.id);
                                return this.showAllLevels || 0 == i || r == this.data.l.length - 1 || r == this.data.l.length - 2 || o == s.length - 1 || o == s.length - 2
                            }
                            lstatus(e, i) {
                                let r = this.data.l.find(s => s.id == e);
                                return r ? 0 == i ? "H" : r.done ? "\u2713" : r.progress + "/" + this.dataService.reqm() : ""
                            }
                            setShardsToUse(e) {
                                this.shardsToUse = parseInt(e), this.shardsUseStatus = ""
                            }
                            canUseShards() {
                                return !(this.data.shards < 1 || this.shardsToUse < 1 || this.shardsToUse > this.data.shards)
                            }
                            useShards() {
                                if (he.roll(this.dataService.shardsChances(this.shardsToUse))) {
                                    let e = this.dataService.dropRandomUnique();
                                    this.shardsUseStatus = '<span class="text-success">Item succesfully created:</span> <span class="text-unique">' + e.name + "</span>", this.data.stats.total.craft++
                                } else this.shardsUseStatus = '<span class="text-danger">Failed to create item</span>';
                                this.data.shards -= this.shardsToUse, this.shardsToUse > this.data.shards && (this.shardsToUse = this.data.shards)
                            }
                            hardreset() {
                                window.confirm("Are you sure ? All your data will be lost.") && (this.conf.autosave_delay = 1e5, this.saveService.delete(), location.reload())
                            }
                        }
                        return t.\u0275fac = function(e) {
                            return new(e || t)(F(Q4), F(Da), F(Ic), F(eo), F(bb), F(ab), F(lb), F(Tb))
                        }, t.\u0275cmp = Xn({
                            type: t,
                            selectors: [
                                ["app-root"]
                            ],
                            viewQuery: function(e, i) {
                                if (1 & e && Pl(s8, 7), 2 & e) {
                                    let r;
                                    St(r = Et()) && (i.invModal = r.first)
                                }
                            },
                            hostBindings: function(e, i) {
                                1 & e && ie("keydown", function(s) {
                                    return i.handleKeydownEvent(s)
                                }, !1, Gu)("keyup", function(s) {
                                    return i.handleKeyupEvent(s)
                                }, !1, Gu)
                            },
                            decls: 166,
                            vars: 85,
                            consts: [
                                [1, "d-flex", "bg-dark", "text-light", "p-2", "align-items-center", "topbar", "border-bottom"],
                                ["src", "assets/img/icon.png", 1, "me-2"],
                                [1, "me-5"],
                                ["placement", "bottom", "triggers", "mouseenter:mouseleave", 3, "ngbPopover", 4, "ngIf"],
                                ["id", "exile-btn", "class", "btn btn-warning btn-sm ms-1", 3, "click", 4, "ngIf"],
                                ["relicsPopover", ""],
                                [1, "ms-auto", "d-flex"],
                                [1, "me-2"],
                                [3, "click"],
                                [1, "btn", "btn-primary", "btn-sm", "text-nowrap", "me-1", 2, "width", "88px", 3, "click"],
                                [1, "fas", "fa-save"],
                                [1, "btn", "btn-secondary", "btn-sm", "text-nowrap", 2, "width", "88px", 3, "click"],
                                [1, "fas", "fa-sliders-h"],
                                [1, "d-flex", "overflow-hidden", 2, "height", "calc(100% - 80px)"],
                                [1, "d-flex", "flex-column", "w-25", "p-1"],
                                [1, "pb-1", "font-200", "text-center", 2, "height", "50px"],
                                ["triggers", "mouseenter:mouseleave", "placement", "bottom", 3, "class", "ngbPopover", 4, "ngIf"],
                                ["class", "pe-1 fas fa-tired text-stun", "ngbPopover", "Stunned", "triggers", "mouseenter:mouseleave", "placement", "bottom", 4, "ngIf"],
                                ["class", "pe-1 fas fa-snowflake text-cold", 4, "ngIf"],
                                ["class", "pe-1 fas fa-skull text-poison", 4, "ngIf"],
                                [1, "pb-2", "text-center"],
                                [1, "btn", "btn-warning", "mb-2", "me-2", "ms-auto", 2, "width", "140px", 3, "click"],
                                ["id", "mercBtn", "class", "btn btn-merc mb-2 me-2 ms-auto", "style", "width:140px", 3, "click", 4, "ngIf"],
                                [1, "d-flex", "align-items-center"],
                                ["class", "btn btn-secondary btn-xsm ms-2 mb-2", 3, "click", 4, "ngIf"],
                                ["id", "levels", 1, "flex-fill", "overflow-auto"],
                                ["ngbNav", "", "class", "nav-tabs mt-1", 3, "activeId", "activeIdChange", 4, "ngIf"],
                                [4, "ngFor", "ngForOf"],
                                ["class", "btn btn-info mb-2 me-2 ms-auto", "style", "width:140px", 3, "click", 4, "ngIf"],
                                [1, "w-45", "p-1", "d-flex", "flex-column"],
                                [1, "d-flex"],
                                [1, "progress-bar-label"],
                                [1, "progress-circle"],
                                [1, "progress"],
                                [1, "progress-bar", "bg-mana"],
                                ["id", "monsters", 1, "flex-fill", "position-relative"],
                                ["class", "pause-bg", 4, "ngIf"],
                                [2, "height", "200px", "overflow-y", "scroll"],
                                [1, "d-flex", "justify-content-between"],
                                [4, "ngIf"],
                                ["potionDesc", ""],
                                ["potionsSelector", ""],
                                ["skillDesc", ""],
                                ["skillsSelector", ""],
                                ["type", "checkbox", "id", "hitlogs", 1, "me-1", 3, "checked", "change"],
                                ["for", "hitlogs", 1, "me-2"],
                                ["type", "checkbox", "id", "killlogs", 1, "me-1", 3, "checked", "change"],
                                ["for", "killlogs", 1, "me-2"],
                                ["type", "checkbox", "id", "goldlogs", 1, "me-1", 3, "checked", "change"],
                                ["for", "goldlogs", 1, "me-2"],
                                ["type", "checkbox", "id", "nonmagicallogs", 1, "me-1", 3, "checked", "change"],
                                ["for", "nonmagicallogs"],
                                [1, "d-flex", "align-items-center", "flex-wrap", 2, "height", "24px"],
                                ["class", "d-flex", 4, "ngFor", "ngForOf"],
                                [1, "flex-shrink-0", 2, "height", "38px"],
                                ["class", "w-100 btn btn-warning", "triggers", "mouseenter:mouseleave", "placement", "bottom", 3, "ngbPopover", "click", 4, "ngIf"],
                                [1, "w-30", "p-1", "d-flex", "flex-column"],
                                [1, "img-preview", 3, "src", "title"],
                                ["id", "class-btn", 1, "mb-2", "ms-auto"],
                                ["class", "btn btn-xsm btn-primary", 3, "click", 4, "ngIf"],
                                [2, "height", "21px"],
                                [1, "progress-bar", "bg-warning"],
                                ["ngbNav", "", 1, "nav-tabs", "mt-1", "flex-nowrap", 3, "activeId", "activeIdChange"],
                                ["nav", "ngbNav"],
                                [3, "ngbNavItem"],
                                ["ngbNavLink", ""],
                                [1, "fas", "fa-plus-square"],
                                ["class", "badge bg-danger rounded-pill", 4, "ngIf"],
                                [1, "fas", "fa-book-dead"],
                                [1, "fas", "fa-medal"],
                                [1, "fas", "fa-chart-line"],
                                ["class", "overflow-auto flex-fill", 4, "ngIf"],
                                [1, "d-flex", "bg-dark", "text-light", "p-2", "topbar", "border-top", "align-center", 2, "height", "35px"],
                                ["href", "changelog.txt", "target", "_blank", 1, "me-2"],
                                ["href", "#", 1, "me-2", 3, "click"],
                                ["target", "_blank", "href", "https://www.buymeacoffee.com/rakanishu"],
                                ["creditsModal", ""],
                                ["skillPopContent", ""],
                                ["dmgModal", ""],
                                ["classModal", ""],
                                ["optionsModal", ""],
                                ["achievModal", ""],
                                ["exileModal", ""],
                                ["mercModal", ""],
                                ["invModal", ""],
                                ["role", "tooltip", "id", "popover", 2, "position", "absolute", "inset", "0px auto auto 0px", "margin", "0px", "visibility", "hidden"],
                                [1, "popover-arrow", 2, "position", "absolute", "top", "0px"],
                                [1, "popover-body", "d-flex", "align-items-center", "justify-content-between"],
                                [1, "fas", "fa-info-circle", "text-warning", "mx-3", 2, "font-size", "3rem"],
                                [1, "popover-body-text"],
                                [1, "btn", "btn-sm", "mt-1", "btn-primary", 3, "click"],
                                ["placement", "bottom", "triggers", "mouseenter:mouseleave", 3, "ngbPopover"],
                                ["p1", "ngbPopover"],
                                ["id", "exile-btn", 1, "btn", "btn-warning", "btn-sm", "ms-1", 3, "click"],
                                ["triggers", "mouseenter:mouseleave", "placement", "bottom", 3, "ngbPopover"],
                                ["ngbPopover", "Stunned", "triggers", "mouseenter:mouseleave", "placement", "bottom", 1, "pe-1", "fas", "fa-tired", "text-stun"],
                                [1, "pe-1", "fas", "fa-snowflake", "text-cold"],
                                [1, "pe-1", "fas", "fa-skull", "text-poison"],
                                ["id", "mercBtn", 1, "btn", "btn-merc", "mb-2", "me-2", "ms-auto", 2, "width", "140px", 3, "click"],
                                [1, "btn", "btn-secondary", "btn-xsm", "ms-2", "mb-2", 3, "click"],
                                ["ngbNav", "", 1, "nav-tabs", "mt-1", 3, "activeId", "activeIdChange"],
                                [3, "ngbNavItem", 4, "ngIf"],
                                [3, "ngClass", "click", 4, "ngIf"],
                                [3, "ngClass", "click"],
                                ["class", "fas fa-campground", 4, "ngIf"],
                                [1, "fas", "fa-campground"],
                                [1, "btn", "btn-info", "mb-2", "me-2", "ms-auto", 2, "width", "140px", 3, "click"],
                                [1, "pause-bg"],
                                [1, "fas", "fa-pause"],
                                [1, "text-center"],
                                ["class", "fas fa-fire text-fire fw-bold", 4, "ngIf"],
                                ["class", "fas fa-bolt text-lightning fw-bold", 4, "ngIf"],
                                ["class", "fas fa-snowflake text-cold fw-bold", 4, "ngIf"],
                                ["class", "fas fa-skull text-poison fw-bold", 4, "ngIf"],
                                ["class", "fas fa-tired fw-bold", 4, "ngIf"],
                                [1, "flex-fill", "progress"],
                                [1, "fas", "fa-fire", "text-fire", "fw-bold"],
                                [1, "fas", "fa-bolt", "text-lightning", "fw-bold"],
                                [1, "fas", "fa-snowflake", "text-cold", "fw-bold"],
                                [1, "fas", "fa-skull", "text-poison", "fw-bold"],
                                [1, "fas", "fa-tired", "fw-bold"],
                                [2, "font-weight", "normal", "font-size", ".5em", 3, "innerHTML"],
                                [3, "innerHtml", 4, "ngIf"],
                                [3, "innerHtml"],
                                [1, "d-flex", "flex-column", "mx-1"],
                                ["placement", "top", 1, "bg-empty", "skill-chg", 3, "ngbPopover", "click"],
                                [1, "fas", "fa-caret-up"],
                                ["placement", "bottom", 3, "ngClass", "ngbPopover", "click", "mouseenter", "mouseleave", 4, "ngIf"],
                                ["class", "skill-btn bg-empty", 4, "ngIf"],
                                ["placement", "bottom", 3, "ngClass", "ngbPopover", "click", "mouseenter", "mouseleave"],
                                [3, "src"],
                                [1, "potion-nb"],
                                [1, "skill-btn", "bg-empty"],
                                [1, "text-primary"],
                                [1, "pointer", "border", "m-1", 3, "click"],
                                ["placement", "top", 1, "bg-empty", "skill-chg", 3, "ngbPopover", "autoClose", "click"],
                                ["placement", "bottom", 3, "ngClass", "ngStyle", "ngbPopover", "click", "mouseenter", "mouseleave", 4, "ngIf"],
                                ["placement", "bottom", 3, "ngClass", "ngStyle", "ngbPopover", "click", "mouseenter", "mouseleave"],
                                ["class", "d-flex align-items-center", 4, "ngIf"],
                                ["type", "checkbox", "id", "autocast", 1, "me-1", 3, "checked", "change"],
                                ["for", "autocast"],
                                ["class", "d-flex", 4, "ngIf"],
                                ["src", "assets/img/su_merc.png", 3, "title"],
                                [1, "progress", 2, "width", "120px"],
                                [1, "progress-bar", "bg-merc"],
                                [1, "me-1"],
                                [3, "src", "title"],
                                ["class", "progress-circle", 3, "style", 4, "ngIf"],
                                ["triggers", "mouseenter:mouseleave", "placement", "bottom", 1, "w-100", "btn", "btn-warning", 3, "ngbPopover", "click"],
                                [1, "btn", "btn-xsm", "btn-primary", 3, "click"],
                                [1, "badge", "bg-danger", "rounded-pill"],
                                [1, "table", "table-sm"],
                                ["class", "btn btn-primary", 3, "click", 4, "ngIf"],
                                [1, "btn", "btn-primary", 3, "click"],
                                ["class", "btn btn-warning btn-xsm d-inline ms-2", 3, "click", 4, "ngIf"],
                                [3, "ngbNavItem", 4, "ngFor", "ngForOf"],
                                ["placement", "left", 3, "ngbPopover", "popoverTitle", "class", "mouseenter", "mouseleave", 4, "ngFor", "ngForOf"],
                                [1, "btn", "btn-warning", "btn-xsm", "d-inline", "ms-2", 3, "click"],
                                ["placement", "left", 3, "ngbPopover", "popoverTitle", "mouseenter", "mouseleave"],
                                [1, "btn", "btn-sm", "btn-danger", 3, "disabled", "click"],
                                [1, "overflow-auto", "flex-fill"],
                                [1, "font-bold"],
                                ["popoverTitle", "Strength", "ngbPopover", "Increase damages", "triggers", "mouseenter:mouseleave", "placement", "left", "container", "body"],
                                ["popoverTitle", "Dexterity", "ngbPopover", "Increase defense and attack rating", "triggers", "mouseenter:mouseleave", "placement", "left", "container", "body"],
                                ["popoverTitle", "Vitality", "ngbPopover", "Increase life & life regeneration", "triggers", "mouseenter:mouseleave", "placement", "left", "container", "body"],
                                ["popoverTitle", "Energy", "ngbPopover", "Increase mana & mana regeneration", "triggers", "mouseenter:mouseleave", "placement", "left", "container", "body"],
                                ["class", "text-muted font-80", 4, "ngIf"],
                                [1, "btn", "btn-sm", "btn-danger", 3, "click"],
                                [1, "text-muted", "font-80"],
                                [1, "modal-header"],
                                ["id", "modal-basic-title", 1, "modal-title"],
                                ["type", "button", 1, "close", 3, "click"],
                                ["aria-hidden", "true"],
                                [1, "modal-body"],
                                ["target", "_blank", "href", "https://www.buymeacoffee.com/rakanishu", 1, "text-unique"],
                                ["href", "https://www.flaticon.com/authors/freepik", "title", "Freepik"],
                                [1, ""],
                                [1, "text-fire"],
                                [1, "text-cold"],
                                [1, "text-lightning"],
                                [1, "text-poison"],
                                [1, "d-flex", "class-select", "justify-content-center"],
                                ["style", "width:280px;", 3, "class", 4, "ngFor", "ngForOf"],
                                [2, "width", "280px"],
                                [1, "mx-auto", 3, "src"],
                                [2, "height", "72px", 3, "innerHTML"],
                                [1, "flex-fill", "mt-1"],
                                [1, "mb-0"],
                                ["class", "btn btn-sm btn-primary mt-1", 3, "disabled", "click", 4, "ngIf"],
                                ["class", "d-flex align-items-center", 4, "ngFor", "ngForOf"],
                                [1, "me-1", "fas", "fa-check"],
                                [1, "btn", "btn-sm", "btn-primary", "mt-1", 3, "disabled", "click"],
                                [1, "form-check"],
                                ["type", "checkbox", "id", "invpause", 1, "form-check-input", 3, "value", "change"],
                                ["for", "invpause", 1, "form-check-label"],
                                ["class", "btn btn-light btn-sm", 3, "click", 4, "ngIf"],
                                ["id", "exportArea", 2, "width", "100%", "height", "100px", 3, "value"],
                                [1, "btn", "btn-primary", "m-2", 3, "click"],
                                [1, "fas", "fa-file-download"],
                                [1, "btn", "btn-danger", "m-2", 3, "click"],
                                [1, "fas", "fa-file-import"],
                                [1, "btn", "btn-secondary", "m-2", 3, "click"],
                                [1, "fas", "fa-times"],
                                [1, "btn", "btn-xsm", "btn-danger", 3, "click"],
                                [1, "btn", "btn-light", "btn-sm", 3, "click"],
                                [1, "modal-body", "d-flex", "flex-wrap", "overflow-auto"],
                                ["style", "width: 215px;", 3, "class", 4, "ngFor", "ngForOf"],
                                [2, "width", "215px"],
                                [1, "card-body", "p-2"],
                                [1, "card-title", "font-110"],
                                ["class", "card-subtitle mb-1 font-90 text-success", 4, "ngIf"],
                                ["class", "card-subtitle mb-1 font-90 text-muted", 4, "ngIf"],
                                [1, "font-80"],
                                [1, "card-subtitle", "mb-1", "font-90", "text-success"],
                                [1, "card-subtitle", "mb-1", "font-90", "text-muted"],
                                [1, "m-1"],
                                [1, "fas", "fa-info-circle", "text-danger"],
                                ["class", "text-danger font-bold", 4, "ngIf"],
                                [1, "btn", "btn-warning", "m-2", 3, "click"],
                                [1, "text-danger", "font-bold"],
                                [1, "modal-body", "d-flex", "flex-column"],
                                ["class", "d-flex flex-column overflow-hidden", 4, "ngIf"],
                                ["class", "text-success fas fa-check", 4, "ngIf"],
                                ["class", "text-danger fas fa-times", 4, "ngIf"],
                                [1, "text-success", "fas", "fa-check"],
                                [1, "text-danger", "fas", "fa-times"],
                                [1, "fas", "fa-coins", "text-warning"],
                                ["class", "badge bg-secondary ms-1", "triggers", "mouseenter:mouseleave", "placement", "bottom", 3, "innerHtml", "ngbPopover", 4, "ngFor", "ngForOf"],
                                [1, "btn", "btn-primary", "btn-sm", 3, "disabled", "click"],
                                ["triggers", "mouseenter:mouseleave", "placement", "bottom", 1, "badge", "bg-secondary", "ms-1", 3, "innerHtml", "ngbPopover"],
                                [1, "d-flex", "flex-column", "overflow-hidden"],
                                ["type", "checkbox", "id", "m-enabled", 1, "me-1", 3, "checked", "change"],
                                ["for", "m-enabled", 1, "me-2"],
                                ["class", "text-danger", 4, "ngIf"],
                                [1, "btn", "btn-danger", "btn-sm", "mt-2", 3, "click"],
                                ["class", "ms-2 btn btn-primary btn-sm mt-2", 3, "disabled", "click", 4, "ngIf"],
                                [1, "text-danger"],
                                [1, "my-1"],
                                [1, "form-select", "form-select-sm", "d-inline", "w-auto", 3, "value", "change"],
                                ["m00", ""],
                                ["value", "0"],
                                ["value", "1"],
                                ["value", "2"],
                                ["value", "3"],
                                ["value", "4"],
                                ["value", "5"],
                                ["type", "number", "min", "1", 1, "form-control", "form-control-sm", "d-inline", "w-auto", 3, "value", "change"],
                                ["m01", ""],
                                ["class", "my-1", 4, "ngFor", "ngForOf"],
                                ["m10", ""],
                                ["value", ""],
                                ["value", "healing"],
                                ["value", "mana"],
                                ["value", "thawing"],
                                ["value", "antidote"],
                                ["m11", ""],
                                [1, "ms-2", "btn", "btn-primary", "btn-sm", "mt-2", 3, "disabled", "click"],
                                [1, "modal-body", "d-flex"],
                                [1, "w-50", "d-flex", "flex-column"],
                                [3, "change"],
                                ["t", ""],
                                ["value", "-1", 3, "selected"],
                                ["value", "-2", 3, "selected"],
                                [1, "overflow-auto"],
                                [1, "w-50"],
                                [1, "fas", "fa-socks"],
                                ["class", "table table-sm", 4, "ngIf"],
                                ["class", "d-flex flex-column", 4, "ngIf"],
                                [1, "fas", "fa-bahai", "text-unique"],
                                [3, "selected", "value", 4, "ngIf"],
                                [3, "selected", "value"],
                                ["class", "btn btn-primary btn-xsm", 3, "disabled", "click", 4, "ngIf"],
                                ["class", "btn btn-info btn-xsm", 3, "click", 4, "ngIf"],
                                ["class", "btn btn-success btn-xsm", 3, "click", 4, "ngIf"],
                                ["class", "btn btn-primary btn-xsm", 3, "click", 4, "ngIf"],
                                [1, "btn", "btn-danger", "btn-xsm", 3, "click"],
                                [3, "item", "compare"],
                                ["class", "ms-1", 4, "ngIf"],
                                [1, "btn", "btn-primary", "btn-xsm", 3, "disabled", "click"],
                                [1, "btn", "btn-info", "btn-xsm", 3, "click"],
                                [1, "btn", "btn-success", "btn-xsm", 3, "click"],
                                [1, "btn", "btn-primary", "btn-xsm", 3, "click"],
                                [1, "ms-1"],
                                [1, "fas", "fa-archive"],
                                [1, "fas", "fa-dice"],
                                [1, "fas", "fa-bahai"],
                                ["type", "range", "min", "1", 1, "form-range", 3, "max", "value", "input"],
                                ["shardsSelector", ""],
                                [1, "btn", "btn-unique", 3, "disabled", "click"],
                                ["style", "height:39px;", 4, "ngFor", "ngForOf"],
                                [2, "height", "39px"],
                                [3, "item"],
                                ["class", "btn btn-secondary btn-xsm", 3, "click", 4, "ngIf"],
                                [1, "btn", "btn-secondary", "btn-xsm", 3, "click"],
                                [1, "d-flex", "flex-column"],
                                [1, "btn", "btn-xsm", "btn-warning", 3, "disabled", "click"]
                            ],
                            template: function(e, i) {
                                if (1 & e) {
                                    const r = xe();
                                    d(0, "div"), d(1, "div", 0), ee(2, "img", 1), d(3, "h2", 2), _(4, "Rakanishu"), f(), d(5, "div"), O(6, o8, 3, 2, "span", 3), O(7, a8, 2, 1, "button", 4), f(), O(8, l8, 4, 2, "ng-template", null, 5, mt), d(10, "div", 6), d(11, "div", 7), d(12, "i", 8), ie("click", function() {
                                        return i.togglePause()
                                    }), f(), f(), d(13, "button", 9), ie("click", function() {
                                        return i.save()
                                    }), ee(14, "i", 10), _(15), f(), d(16, "button", 11), ie("click", function() {
                                        pe(r);
                                        const o = Pe(145);
                                        return i.openOptions(o)
                                    }), ee(17, "i", 12), _(18, " Options "), f(), f(), f(), d(19, "div", 13), d(20, "div", 14), d(21, "div", 15), O(22, c8, 1, 4, "i", 16), O(23, u8, 1, 0, "i", 17), O(24, d8, 1, 0, "i", 18), O(25, f8, 1, 0, "i", 19), f(), d(26, "div", 20), d(27, "button", 21), ie("click", function() {
                                        pe(r);
                                        const o = Pe(153);
                                        return i.openInventory(o)
                                    }), _(28, "Open Inventory"), f(), O(29, p8, 2, 0, "button", 22), f(), d(30, "div", 23), d(31, "h4"), _(32, "Levels"), f(), O(33, h8, 2, 1, "button", 24), f(), d(34, "div", 25), O(35, _8, 3, 2, "ul", 26), O(36, D8, 2, 1, "ng-container", 27), f(), d(37, "div", 20), O(38, x8, 2, 0, "button", 28), f(), f(), d(39, "div", 29), d(40, "div", 30), d(41, "div"), ee(42, "div"), d(43, "div", 31), _(44), qe(45, "float"), f(), f(), ee(46, "div", 32), f(), d(47, "div", 33), ee(48, "div", 34), d(49, "div", 31), _(50), qe(51, "number"), f(), f(), d(52, "div", 35), O(53, w8, 2, 0, "div", 36), O(54, N8, 18, 25, "div", 27), f(), d(55, "div", 37), O(56, I8, 2, 1, "ng-container", 27), f(), d(57, "div", 38), d(58, "div", 30), O(59, F8, 2, 1, "ng-container", 39), O(60, B8, 5, 3, "ng-template", null, 40, mt), O(62, V8, 1, 1, "ng-template", null, 41, mt), f(), d(64, "div", 30), O(65, G8, 7, 4, "ng-container", 27), O(66, $8, 6, 2, "ng-template", null, 42, mt), O(68, W8, 3, 3, "ng-template", null, 43, mt), f(), f(), d(70, "div"), d(71, "input", 44), ie("change", function() {
                                        return i.data.showHitLogs = !i.data.showHitLogs
                                    }), f(), d(72, "label", 45), _(73, "Show hits"), f(), d(74, "input", 46), ie("change", function() {
                                        return i.data.showKillLogs = !i.data.showKillLogs
                                    }), f(), d(75, "label", 47), _(76, "Show kills"), f(), d(77, "input", 48), ie("change", function() {
                                        return i.data.showGoldLogs = !i.data.showGoldLogs
                                    }), f(), d(78, "label", 49), _(79, "Show Gold"), f(), d(80, "input", 50), ie("change", function() {
                                        return i.data.showNonMagicalItemsLogs = !i.data.showNonMagicalItemsLogs
                                    }), f(), d(81, "label", 51), _(82, "Show Non-magical items"), f(), f(), d(83, "div", 52), O(84, K8, 2, 1, "ng-container", 27), O(85, Q8, 10, 14, "div", 53), f(), d(86, "div", 54), O(87, J8, 4, 9, "button", 55), f(), f(), d(88, "div", 56), d(89, "div", 30), d(90, "div"), ee(91, "img", 57), _(92), f(), d(93, "div", 58), O(94, X8, 2, 0, "button", 59), f(), f(), d(95, "div", 60), d(96, "div", 33), ee(97, "div", 61), d(98, "div", 31), _(99), qe(100, "float"), qe(101, "float"), f(), f(), f(), d(102, "ul", 62, 63), ie("activeIdChange", function(o) {
                                        return i.tab = o
                                    }), d(104, "li", 64), d(105, "a", 65), ee(106, "i", 66), _(107, " Attributes "), O(108, eR, 2, 0, "span", 67), f(), f(), d(109, "li", 64), d(110, "a", 65), ee(111, "i", 68), _(112, " Skills "), O(113, tR, 2, 0, "span", 67), f(), f(), d(114, "li", 64), d(115, "a", 65), ee(116, "i", 69), _(117, " Quests "), O(118, nR, 2, 0, "span", 67), f(), f(), d(119, "li", 64), d(120, "a", 65), ee(121, "i", 70), _(122, " Stats"), f(), f(), f(), O(123, iR, 13, 2, "div", 39), O(124, oR, 2, 1, "div", 39), O(125, pR, 11, 5, "div", 39), O(126, CR, 143, 63, "div", 71), f(), f(), d(127, "div", 72), _(128), d(129, "div", 6), d(130, "a", 73), _(131, "Changelog"), f(), d(132, "a", 74), ie("click", function() {
                                        pe(r);
                                        const o = Pe(137);
                                        return i.open(o, "lg")
                                    }), _(133, "Support & Credits"), f(), d(134, "a", 75), _(135, "Donate?"), f(), f(), f(), O(136, MR, 30, 0, "ng-template", null, 76, mt), O(138, TR, 1, 1, "ng-template", null, 77, mt), O(140, AR, 18, 8, "ng-template", null, 78, mt), O(142, LR, 10, 1, "ng-template", null, 79, mt), O(144, jR, 31, 4, "ng-template", null, 80, mt), O(146, UR, 8, 1, "ng-template", null, 81, mt), O(148, WR, 27, 4, "ng-template", null, 82, mt), O(150, cP, 14, 5, "ng-template", null, 83, mt), O(152, IP, 40, 17, "ng-template", null, 84, mt), f(), d(154, "div", 85), ee(155, "div", 86), d(156, "div", 87), d(157, "div"), ee(158, "i", 88), f(), d(159, "div"), d(160, "div", 89), _(161, "Your life is low."), ee(162, "br"), _(163, "Get back to the camp to get healed !"), f(), d(164, "button", 90), ie("click", function() {
                                        return i.closeTuto()
                                    }), _(165, "Got it !"), f(), f(), f(), f()
                                }
                                2 & e && (Un("vh-100 overflow-hidden ", i.data.dark ? "dark" : "", ""), g(1), oi(i.topbarStyle()), g(5), D("ngIf", i.data.relics), g(1), D("ngIf", i.data.lvl >= 10), g(5), Un("pointer fas fa-", i.data.pause || i.data.autopause ? "play text-warning" : "pause", ""), g(3), Se(" Save (", i.saveTime(), "s) "), g(7), D("ngIf", i.data.activeshrine), g(1), D("ngIf", i.data.stun), g(1), D("ngIf", i.data.frozen), g(1), D("ngIf", i.data.poisoned), g(4), D("ngIf", i.data.maxmercs), g(4), D("ngIf", i.data.l.length > 3), g(2), D("ngIf", i.dataService.isUnlocked("act2")), g(1), D("ngForOf", i.conf.l[i.actTab]), g(2), D("ngIf", i.dataService.isUnlocked("achiev")), g(3), Un("flex-fill progress ", i.data.frozenarmor ? "border border-info border-3" : "", ""), g(1), ci("width: ", i.progLife(), "%"), Un("progress-bar ", i.data.poisoned ? "bg-poison" : i.data.frozen ? "bg-frozen" : "bg-life", ""), g(2), et("", yt(45, 76, i.data.life), " / ", i.dataService.maxLife(), ""), g(2), ci("--value:", i.progRep(), ""), g(2), ci("width: ", i.progMana(), "%"), g(2), et("", tn(51, 78, i.data.mana, "1.0-0"), " / ", i.dataService.maxMana(), ""), g(3), D("ngIf", i.data.pause || i.data.autopause), g(1), D("ngForOf", i.data.m), g(2), D("ngForOf", i.data.logs), g(3), D("ngIf", i.dataService.isUnlocked("potions")), g(6), D("ngForOf", i.quickslots()), g(6), D("checked", i.data.showHitLogs), g(3), D("checked", i.data.showKillLogs), g(3), D("checked", i.data.showGoldLogs), g(3), D("checked", i.data.showNonMagicalItemsLogs), g(4), D("ngForOf", i.data.merc), g(1), D("ngForOf", i.data.summons), g(2), D("ngIf", i.data.shrine), g(4), Ni("src", "assets/img/", i.data.cl, ".png", Ti), D("title", i.conf.cl[i.data.cl].name), g(1), Se(" level ", i.data.lvl, " "), g(2), D("ngIf", i.dataService.isUnlocked("classes")), g(3), ci("width: ", i.progXp(), "%"), g(2), et("xp: ", yt(100, 81, i.data.xp), " / ", yt(101, 83, i.dataService.xpReq()), ""), g(3), D("activeId", i.tab), g(2), D("ngbNavItem", 0), g(4), D("ngIf", i.data.rem), g(1), D("ngbNavItem", 1), g(4), D("ngIf", i.data.srem), g(1), D("ngbNavItem", 2), g(4), D("ngIf", i.conf.quests.length > i.data.quest && i.conf.quests[i.data.quest].check(i.dataService)), g(1), D("ngbNavItem", 3), g(4), D("ngIf", 3 == i.tab), g(1), D("ngIf", 2 == i.tab), g(1), D("ngIf", 1 == i.tab), g(1), D("ngIf", 0 == i.tab), g(2), Se(" v. ", i.conf.versions[i.conf.version], " "), g(26), Un("border border-2 ", i.data.dark ? "dark" : "", " popover show bs-popover-end"))
                            },
                            directives: [lr, Db, Nc, $s, kc, Pp, O_, B_, r8],
                            pipes: [ba, Jl, V_],
                            encapsulation: 2
                        }), t
                    })(),
                    RP = (() => {
                        class t {}
                        return t.\u0275fac = function(e) {
                            return new(e || t)
                        }, t.\u0275mod = ht({
                            type: t,
                            bootstrap: [OP]
                        }), t.\u0275inj = ct({
                            providers: [Jl, ba],
                            imports: [
                                [Zk, db, xb]
                            ]
                        }), t
                    })();
                wb.production && function PS() {
                    u_ = !1
                }(), Yk().bootstrapModule(RP).catch(t => console.error(t))
            },
            466: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(319), L(493), L(865), L(57), function() {
                    var w = A,
                        j = w.lib.BlockCipher,
                        X = w.algo,
                        B = [],
                        U = [],
                        b = [],
                        C = [],
                        N = [],
                        v = [],
                        T = [],
                        y = [],
                        S = [],
                        R = [];
                    ! function() {
                        for (var x = [], E = 0; E < 256; E++) x[E] = E < 128 ? E << 1 : E << 1 ^ 283;
                        var q = 0,
                            G = 0;
                        for (E = 0; E < 256; E++) {
                            var K = G ^ G << 1 ^ G << 2 ^ G << 3 ^ G << 4;
                            B[q] = K = K >>> 8 ^ 255 & K ^ 99, U[K] = q;
                            var fe, W = x[q],
                                de = x[W],
                                ae = x[de];
                            b[q] = (fe = 257 * x[K] ^ 16843008 * K) << 24 | fe >>> 8, C[q] = fe << 16 | fe >>> 16, N[q] = fe << 8 | fe >>> 24, v[q] = fe, T[K] = (fe = 16843009 * ae ^ 65537 * de ^ 257 * W ^ 16843008 * q) << 24 | fe >>> 8, y[K] = fe << 16 | fe >>> 16, S[K] = fe << 8 | fe >>> 24, R[K] = fe, q ? (q = W ^ x[x[x[ae ^ W]]], G ^= x[x[G]]) : q = G = 1
                        }
                    }();
                    var $ = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                        V = X.AES = j.extend({
                            _doReset: function() {
                                if (!this._nRounds || this._keyPriorReset !== this._key) {
                                    for (var E = this._keyPriorReset = this._key, q = E.words, G = E.sigBytes / 4, W = 4 * ((this._nRounds = G + 6) + 1), de = this._keySchedule = [], ae = 0; ae < W; ae++) ae < G ? de[ae] = q[ae] : (x = de[ae - 1], ae % G ? G > 6 && ae % G == 4 && (x = B[x >>> 24] << 24 | B[x >>> 16 & 255] << 16 | B[x >>> 8 & 255] << 8 | B[255 & x]) : (x = B[(x = x << 8 | x >>> 24) >>> 24] << 24 | B[x >>> 16 & 255] << 16 | B[x >>> 8 & 255] << 8 | B[255 & x], x ^= $[ae / G | 0] << 24), de[ae] = de[ae - G] ^ x);
                                    for (var fe = this._invKeySchedule = [], ve = 0; ve < W; ve++) {
                                        if (ae = W - ve, ve % 4) var x = de[ae];
                                        else x = de[ae - 4];
                                        fe[ve] = ve < 4 || ae <= 4 ? x : T[B[x >>> 24]] ^ y[B[x >>> 16 & 255]] ^ S[B[x >>> 8 & 255]] ^ R[B[255 & x]]
                                    }
                                }
                            },
                            encryptBlock: function(x, E) {
                                this._doCryptBlock(x, E, this._keySchedule, b, C, N, v, B)
                            },
                            decryptBlock: function(x, E) {
                                var q = x[E + 1];
                                x[E + 1] = x[E + 3], x[E + 3] = q, this._doCryptBlock(x, E, this._invKeySchedule, T, y, S, R, U), q = x[E + 1], x[E + 1] = x[E + 3], x[E + 3] = q
                            },
                            _doCryptBlock: function(x, E, q, G, K, W, de, ae) {
                                for (var fe = this._nRounds, ve = x[E] ^ q[0], Q = x[E + 1] ^ q[1], ce = x[E + 2] ^ q[2], le = x[E + 3] ^ q[3], oe = 4, ke = 1; ke < fe; ke++) {
                                    var Me = G[ve >>> 24] ^ K[Q >>> 16 & 255] ^ W[ce >>> 8 & 255] ^ de[255 & le] ^ q[oe++],
                                        je = G[Q >>> 24] ^ K[ce >>> 16 & 255] ^ W[le >>> 8 & 255] ^ de[255 & ve] ^ q[oe++],
                                        Te = G[ce >>> 24] ^ K[le >>> 16 & 255] ^ W[ve >>> 8 & 255] ^ de[255 & Q] ^ q[oe++],
                                        J = G[le >>> 24] ^ K[ve >>> 16 & 255] ^ W[Q >>> 8 & 255] ^ de[255 & ce] ^ q[oe++];
                                    ve = Me, Q = je, ce = Te, le = J
                                }
                                Me = (ae[ve >>> 24] << 24 | ae[Q >>> 16 & 255] << 16 | ae[ce >>> 8 & 255] << 8 | ae[255 & le]) ^ q[oe++], je = (ae[Q >>> 24] << 24 | ae[ce >>> 16 & 255] << 16 | ae[le >>> 8 & 255] << 8 | ae[255 & ve]) ^ q[oe++], Te = (ae[ce >>> 24] << 24 | ae[le >>> 16 & 255] << 16 | ae[ve >>> 8 & 255] << 8 | ae[255 & Q]) ^ q[oe++], J = (ae[le >>> 24] << 24 | ae[ve >>> 16 & 255] << 16 | ae[Q >>> 8 & 255] << 8 | ae[255 & ce]) ^ q[oe++], x[E] = Me, x[E + 1] = je, x[E + 2] = Te, x[E + 3] = J
                            },
                            keySize: 8
                        });
                    w.AES = j._createHelper(V)
                }(), A.AES)
            },
            57: function(me, _e, L) {
                var z, j, X, B, U, b, N, T, y, R, $, V, E, G, W, de, fe, ve, A;
                me.exports = (A = L(585), L(865), void(A.lib.Cipher || (z = A, j = z.lib, X = j.Base, B = j.WordArray, U = j.BufferedBlockAlgorithm, b = z.enc, N = b.Base64, T = z.algo.EvpKDF, y = j.Cipher = U.extend({
                    cfg: X.extend(),
                    createEncryptor: function(Q, ce) {
                        return this.create(this._ENC_XFORM_MODE, Q, ce)
                    },
                    createDecryptor: function(Q, ce) {
                        return this.create(this._DEC_XFORM_MODE, Q, ce)
                    },
                    init: function(Q, ce, le) {
                        this.cfg = this.cfg.extend(le), this._xformMode = Q, this._key = ce, this.reset()
                    },
                    reset: function() {
                        U.reset.call(this), this._doReset()
                    },
                    process: function(Q) {
                        return this._append(Q), this._process()
                    },
                    finalize: function(Q) {
                        return Q && this._append(Q), this._doFinalize()
                    },
                    keySize: 4,
                    ivSize: 4,
                    _ENC_XFORM_MODE: 1,
                    _DEC_XFORM_MODE: 2,
                    _createHelper: function() {
                        function Q(ce) {
                            return "string" == typeof ce ? ve : de
                        }
                        return function(ce) {
                            return {
                                encrypt: function(le, oe, ke) {
                                    return Q(oe).encrypt(ce, le, oe, ke)
                                },
                                decrypt: function(le, oe, ke) {
                                    return Q(oe).decrypt(ce, le, oe, ke)
                                }
                            }
                        }
                    }()
                }), j.StreamCipher = y.extend({
                    _doFinalize: function() {
                        return this._process(!0)
                    },
                    blockSize: 1
                }), R = z.mode = {}, $ = j.BlockCipherMode = X.extend({
                    createEncryptor: function(Q, ce) {
                        return this.Encryptor.create(Q, ce)
                    },
                    createDecryptor: function(Q, ce) {
                        return this.Decryptor.create(Q, ce)
                    },
                    init: function(Q, ce) {
                        this._cipher = Q, this._iv = ce
                    }
                }), V = R.CBC = function() {
                    var Q = $.extend();

                    function ce(le, oe, ke) {
                        var Me, je = this._iv;
                        je ? (Me = je, this._iv = undefined) : Me = this._prevBlock;
                        for (var Te = 0; Te < ke; Te++) le[oe + Te] ^= Me[Te]
                    }
                    return Q.Encryptor = Q.extend({
                        processBlock: function(le, oe) {
                            var ke = this._cipher,
                                Me = ke.blockSize;
                            ce.call(this, le, oe, Me), ke.encryptBlock(le, oe), this._prevBlock = le.slice(oe, oe + Me)
                        }
                    }), Q.Decryptor = Q.extend({
                        processBlock: function(le, oe) {
                            var ke = this._cipher,
                                Me = ke.blockSize,
                                je = le.slice(oe, oe + Me);
                            ke.decryptBlock(le, oe), ce.call(this, le, oe, Me), this._prevBlock = je
                        }
                    }), Q
                }(), E = (z.pad = {}).Pkcs7 = {
                    pad: function(Q, ce) {
                        for (var le = 4 * ce, oe = le - Q.sigBytes % le, ke = oe << 24 | oe << 16 | oe << 8 | oe, Me = [], je = 0; je < oe; je += 4) Me.push(ke);
                        var Te = B.create(Me, oe);
                        Q.concat(Te)
                    },
                    unpad: function(Q) {
                        Q.sigBytes -= 255 & Q.words[Q.sigBytes - 1 >>> 2]
                    }
                }, j.BlockCipher = y.extend({
                    cfg: y.cfg.extend({
                        mode: V,
                        padding: E
                    }),
                    reset: function() {
                        var Q;
                        y.reset.call(this);
                        var ce = this.cfg,
                            le = ce.iv,
                            oe = ce.mode;
                        this._xformMode == this._ENC_XFORM_MODE ? Q = oe.createEncryptor : (Q = oe.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == Q ? this._mode.init(this, le && le.words) : (this._mode = Q.call(oe, this, le && le.words), this._mode.__creator = Q)
                    },
                    _doProcessBlock: function(Q, ce) {
                        this._mode.processBlock(Q, ce)
                    },
                    _doFinalize: function() {
                        var Q, ce = this.cfg.padding;
                        return this._xformMode == this._ENC_XFORM_MODE ? (ce.pad(this._data, this.blockSize), Q = this._process(!0)) : (Q = this._process(!0), ce.unpad(Q)), Q
                    },
                    blockSize: 4
                }), G = j.CipherParams = X.extend({
                    init: function(Q) {
                        this.mixIn(Q)
                    },
                    toString: function(Q) {
                        return (Q || this.formatter).stringify(this)
                    }
                }), W = (z.format = {}).OpenSSL = {
                    stringify: function(Q) {
                        var le = Q.ciphertext,
                            oe = Q.salt;
                        return (oe ? B.create([1398893684, 1701076831]).concat(oe).concat(le) : le).toString(N)
                    },
                    parse: function(Q) {
                        var ce, le = N.parse(Q),
                            oe = le.words;
                        return 1398893684 == oe[0] && 1701076831 == oe[1] && (ce = B.create(oe.slice(2, 4)), oe.splice(0, 4), le.sigBytes -= 16), G.create({
                            ciphertext: le,
                            salt: ce
                        })
                    }
                }, de = j.SerializableCipher = X.extend({
                    cfg: X.extend({
                        format: W
                    }),
                    encrypt: function(Q, ce, le, oe) {
                        oe = this.cfg.extend(oe);
                        var ke = Q.createEncryptor(le, oe),
                            Me = ke.finalize(ce),
                            je = ke.cfg;
                        return G.create({
                            ciphertext: Me,
                            key: le,
                            iv: je.iv,
                            algorithm: Q,
                            mode: je.mode,
                            padding: je.padding,
                            blockSize: Q.blockSize,
                            formatter: oe.format
                        })
                    },
                    decrypt: function(Q, ce, le, oe) {
                        return oe = this.cfg.extend(oe), ce = this._parse(ce, oe.format), Q.createDecryptor(le, oe).finalize(ce.ciphertext)
                    },
                    _parse: function(Q, ce) {
                        return "string" == typeof Q ? ce.parse(Q, this) : Q
                    }
                }), fe = (z.kdf = {}).OpenSSL = {
                    execute: function(Q, ce, le, oe) {
                        oe || (oe = B.random(8));
                        var ke = T.create({
                                keySize: ce + le
                            }).compute(Q, oe),
                            Me = B.create(ke.words.slice(ce), 4 * le);
                        return ke.sigBytes = 4 * ce, G.create({
                            key: ke,
                            iv: Me,
                            salt: oe
                        })
                    }
                }, ve = j.PasswordBasedCipher = de.extend({
                    cfg: de.cfg.extend({
                        kdf: fe
                    }),
                    encrypt: function(Q, ce, le, oe) {
                        var ke = (oe = this.cfg.extend(oe)).kdf.execute(le, Q.keySize, Q.ivSize);
                        oe.iv = ke.iv;
                        var Me = de.encrypt.call(this, Q, ce, ke.key, oe);
                        return Me.mixIn(ke), Me
                    },
                    decrypt: function(Q, ce, le, oe) {
                        oe = this.cfg.extend(oe), ce = this._parse(ce, oe.format);
                        var ke = oe.kdf.execute(le, Q.keySize, Q.ivSize, ce.salt);
                        return oe.iv = ke.iv, de.decrypt.call(this, Q, ce, ke.key, oe)
                    }
                }))))
            },
            585: function(me, _e, L) {
                var A;
                me.exports = (A = A || function(w, z) {
                    var j;
                    if ("undefined" != typeof window && window.crypto && (j = window.crypto), "undefined" != typeof self && self.crypto && (j = self.crypto), "undefined" != typeof globalThis && globalThis.crypto && (j = globalThis.crypto), !j && "undefined" != typeof window && window.msCrypto && (j = window.msCrypto), !j && "undefined" != typeof global && global.crypto && (j = global.crypto), !j) try {
                        j = L(480)
                    } catch (x) {}
                    var X = function() {
                            if (j) {
                                if ("function" == typeof j.getRandomValues) try {
                                    return j.getRandomValues(new Uint32Array(1))[0]
                                } catch (x) {}
                                if ("function" == typeof j.randomBytes) try {
                                    return j.randomBytes(4).readInt32LE()
                                } catch (x) {}
                            }
                            throw new Error("Native crypto module could not be used to get secure random number.")
                        },
                        B = Object.create || function() {
                            function x() {}
                            return function(E) {
                                var q;
                                return x.prototype = E, q = new x, x.prototype = null, q
                            }
                        }(),
                        U = {},
                        b = U.lib = {},
                        C = b.Base = {
                            extend: function(x) {
                                var E = B(this);
                                return x && E.mixIn(x), (!E.hasOwnProperty("init") || this.init === E.init) && (E.init = function() {
                                    E.$super.init.apply(this, arguments)
                                }), E.init.prototype = E, E.$super = this, E
                            },
                            create: function() {
                                var x = this.extend();
                                return x.init.apply(x, arguments), x
                            },
                            init: function() {},
                            mixIn: function(x) {
                                for (var E in x) x.hasOwnProperty(E) && (this[E] = x[E]);
                                x.hasOwnProperty("toString") && (this.toString = x.toString)
                            },
                            clone: function() {
                                return this.init.prototype.extend(this)
                            }
                        },
                        N = b.WordArray = C.extend({
                            init: function(x, E) {
                                x = this.words = x || [], this.sigBytes = null != E ? E : 4 * x.length
                            },
                            toString: function(x) {
                                return (x || T).stringify(this)
                            },
                            concat: function(x) {
                                var E = this.words,
                                    q = x.words,
                                    G = this.sigBytes,
                                    K = x.sigBytes;
                                if (this.clamp(), G % 4)
                                    for (var W = 0; W < K; W++) E[G + W >>> 2] |= (q[W >>> 2] >>> 24 - W % 4 * 8 & 255) << 24 - (G + W) % 4 * 8;
                                else
                                    for (var ae = 0; ae < K; ae += 4) E[G + ae >>> 2] = q[ae >>> 2];
                                return this.sigBytes += K, this
                            },
                            clamp: function() {
                                var x = this.words,
                                    E = this.sigBytes;
                                x[E >>> 2] &= 4294967295 << 32 - E % 4 * 8, x.length = w.ceil(E / 4)
                            },
                            clone: function() {
                                var x = C.clone.call(this);
                                return x.words = this.words.slice(0), x
                            },
                            random: function(x) {
                                for (var E = [], q = 0; q < x; q += 4) E.push(X());
                                return new N.init(E, x)
                            }
                        }),
                        v = U.enc = {},
                        T = v.Hex = {
                            stringify: function(x) {
                                for (var E = x.words, q = x.sigBytes, G = [], K = 0; K < q; K++) {
                                    var W = E[K >>> 2] >>> 24 - K % 4 * 8 & 255;
                                    G.push((W >>> 4).toString(16)), G.push((15 & W).toString(16))
                                }
                                return G.join("")
                            },
                            parse: function(x) {
                                for (var E = x.length, q = [], G = 0; G < E; G += 2) q[G >>> 3] |= parseInt(x.substr(G, 2), 16) << 24 - G % 8 * 4;
                                return new N.init(q, E / 2)
                            }
                        },
                        y = v.Latin1 = {
                            stringify: function(x) {
                                for (var E = x.words, q = x.sigBytes, G = [], K = 0; K < q; K++) G.push(String.fromCharCode(E[K >>> 2] >>> 24 - K % 4 * 8 & 255));
                                return G.join("")
                            },
                            parse: function(x) {
                                for (var E = x.length, q = [], G = 0; G < E; G++) q[G >>> 2] |= (255 & x.charCodeAt(G)) << 24 - G % 4 * 8;
                                return new N.init(q, E)
                            }
                        },
                        S = v.Utf8 = {
                            stringify: function(x) {
                                try {
                                    return decodeURIComponent(escape(y.stringify(x)))
                                } catch (E) {
                                    throw new Error("Malformed UTF-8 data")
                                }
                            },
                            parse: function(x) {
                                return y.parse(unescape(encodeURIComponent(x)))
                            }
                        },
                        R = b.BufferedBlockAlgorithm = C.extend({
                            reset: function() {
                                this._data = new N.init, this._nDataBytes = 0
                            },
                            _append: function(x) {
                                "string" == typeof x && (x = S.parse(x)), this._data.concat(x), this._nDataBytes += x.sigBytes
                            },
                            _process: function(x) {
                                var E, q = this._data,
                                    G = q.words,
                                    K = q.sigBytes,
                                    W = this.blockSize,
                                    ae = K / (4 * W),
                                    fe = (ae = x ? w.ceil(ae) : w.max((0 | ae) - this._minBufferSize, 0)) * W,
                                    ve = w.min(4 * fe, K);
                                if (fe) {
                                    for (var Q = 0; Q < fe; Q += W) this._doProcessBlock(G, Q);
                                    E = G.splice(0, fe), q.sigBytes -= ve
                                }
                                return new N.init(E, ve)
                            },
                            clone: function() {
                                var x = C.clone.call(this);
                                return x._data = this._data.clone(), x
                            },
                            _minBufferSize: 0
                        }),
                        V = (b.Hasher = R.extend({
                            cfg: C.extend(),
                            init: function(x) {
                                this.cfg = this.cfg.extend(x), this.reset()
                            },
                            reset: function() {
                                R.reset.call(this), this._doReset()
                            },
                            update: function(x) {
                                return this._append(x), this._process(), this
                            },
                            finalize: function(x) {
                                return x && this._append(x), this._doFinalize()
                            },
                            blockSize: 16,
                            _createHelper: function(x) {
                                return function(E, q) {
                                    return new x.init(q).finalize(E)
                                }
                            },
                            _createHmacHelper: function(x) {
                                return function(E, q) {
                                    return new V.HMAC.init(x, q).finalize(E)
                                }
                            }
                        }), U.algo = {});
                    return U
                }(Math), A)
            },
            319: function(me, _e, L) {
                var A, j;
                me.exports = (A = L(585), j = A.lib.WordArray, A.enc.Base64 = {
                    stringify: function(b) {
                        var C = b.words,
                            N = b.sigBytes,
                            v = this._map;
                        b.clamp();
                        for (var T = [], y = 0; y < N; y += 3)
                            for (var V = (C[y >>> 2] >>> 24 - y % 4 * 8 & 255) << 16 | (C[y + 1 >>> 2] >>> 24 - (y + 1) % 4 * 8 & 255) << 8 | C[y + 2 >>> 2] >>> 24 - (y + 2) % 4 * 8 & 255, x = 0; x < 4 && y + .75 * x < N; x++) T.push(v.charAt(V >>> 6 * (3 - x) & 63));
                        var E = v.charAt(64);
                        if (E)
                            for (; T.length % 4;) T.push(E);
                        return T.join("")
                    },
                    parse: function(b) {
                        var C = b.length,
                            N = this._map,
                            v = this._reverseMap;
                        if (!v) {
                            v = this._reverseMap = [];
                            for (var T = 0; T < N.length; T++) v[N.charCodeAt(T)] = T
                        }
                        var y = N.charAt(64);
                        if (y) {
                            var S = b.indexOf(y); - 1 !== S && (C = S)
                        }
                        return function U(b, C, N) {
                            for (var v = [], T = 0, y = 0; y < C; y++)
                                if (y % 4) {
                                    var S = N[b.charCodeAt(y - 1)] << y % 4 * 2,
                                        R = N[b.charCodeAt(y)] >>> 6 - y % 4 * 2;
                                    v[T >>> 2] |= (S | R) << 24 - T % 4 * 8, T++
                                } return j.create(v, T)
                        }(b, C, v)
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                }, A.enc.Base64)
            },
            410: function(me, _e, L) {
                var A, j;
                me.exports = (A = L(585), j = A.lib.WordArray, A.enc.Base64url = {
                    stringify: function(b, C = !0) {
                        var N = b.words,
                            v = b.sigBytes,
                            T = C ? this._safe_map : this._map;
                        b.clamp();
                        for (var y = [], S = 0; S < v; S += 3)
                            for (var x = (N[S >>> 2] >>> 24 - S % 4 * 8 & 255) << 16 | (N[S + 1 >>> 2] >>> 24 - (S + 1) % 4 * 8 & 255) << 8 | N[S + 2 >>> 2] >>> 24 - (S + 2) % 4 * 8 & 255, E = 0; E < 4 && S + .75 * E < v; E++) y.push(T.charAt(x >>> 6 * (3 - E) & 63));
                        var q = T.charAt(64);
                        if (q)
                            for (; y.length % 4;) y.push(q);
                        return y.join("")
                    },
                    parse: function(b, C = !0) {
                        var N = b.length,
                            v = C ? this._safe_map : this._map,
                            T = this._reverseMap;
                        if (!T) {
                            T = this._reverseMap = [];
                            for (var y = 0; y < v.length; y++) T[v.charCodeAt(y)] = y
                        }
                        var S = v.charAt(64);
                        if (S) {
                            var R = b.indexOf(S); - 1 !== R && (N = R)
                        }
                        return function U(b, C, N) {
                            for (var v = [], T = 0, y = 0; y < C; y++)
                                if (y % 4) {
                                    var S = N[b.charCodeAt(y - 1)] << y % 4 * 2,
                                        R = N[b.charCodeAt(y)] >>> 6 - y % 4 * 2;
                                    v[T >>> 2] |= (S | R) << 24 - T % 4 * 8, T++
                                } return j.create(v, T)
                        }(b, N, T)
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                }, A.enc.Base64url)
            },
            12: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), function() {
                    var j = A.lib.WordArray,
                        X = A.enc;

                    function U(b) {
                        return b << 8 & 4278255360 | b >>> 8 & 16711935
                    }
                    X.Utf16 = X.Utf16BE = {
                        stringify: function(b) {
                            for (var C = b.words, N = b.sigBytes, v = [], T = 0; T < N; T += 2) v.push(String.fromCharCode(C[T >>> 2] >>> 16 - T % 4 * 8 & 65535));
                            return v.join("")
                        },
                        parse: function(b) {
                            for (var C = b.length, N = [], v = 0; v < C; v++) N[v >>> 1] |= b.charCodeAt(v) << 16 - v % 2 * 16;
                            return j.create(N, 2 * C)
                        }
                    }, X.Utf16LE = {
                        stringify: function(b) {
                            for (var C = b.words, N = b.sigBytes, v = [], T = 0; T < N; T += 2) {
                                var y = U(C[T >>> 2] >>> 16 - T % 4 * 8 & 65535);
                                v.push(String.fromCharCode(y))
                            }
                            return v.join("")
                        },
                        parse: function(b) {
                            for (var C = b.length, N = [], v = 0; v < C; v++) N[v >>> 1] |= U(b.charCodeAt(v) << 16 - v % 2 * 16);
                            return j.create(N, 2 * C)
                        }
                    }
                }(), A.enc.Utf16)
            },
            865: function(me, _e, L) {
                var w, z, j, X, B, b, A;
                me.exports = (A = L(585), L(162), L(764), X = (z = (w = A).lib).WordArray, b = (B = w.algo).EvpKDF = (j = z.Base).extend({
                    cfg: j.extend({
                        keySize: 4,
                        hasher: B.MD5,
                        iterations: 1
                    }),
                    init: function(C) {
                        this.cfg = this.cfg.extend(C)
                    },
                    compute: function(C, N) {
                        for (var v, T = this.cfg, y = T.hasher.create(), S = X.create(), R = S.words, $ = T.keySize, V = T.iterations; R.length < $;) {
                            v && y.update(v), v = y.update(C).finalize(N), y.reset();
                            for (var x = 1; x < V; x++) v = y.finalize(v), y.reset();
                            S.concat(v)
                        }
                        return S.sigBytes = 4 * $, S
                    }
                }), w.EvpKDF = function(C, N, v) {
                    return b.create(v).compute(C, N)
                }, A.EvpKDF)
            },
            847: function(me, _e, L) {
                var A, X, U;
                me.exports = (A = L(585), L(57), X = A.lib.CipherParams, U = A.enc.Hex, A.format.Hex = {
                    stringify: function(N) {
                        return N.ciphertext.toString(U)
                    },
                    parse: function(N) {
                        var v = U.parse(N);
                        return X.create({
                            ciphertext: v
                        })
                    }
                }, A.format.Hex)
            },
            764: function(me, _e, L) {
                var A, B;
                me.exports = (A = L(585), B = A.enc.Utf8, void(A.algo.HMAC = A.lib.Base.extend({
                    init: function(C, N) {
                        C = this._hasher = new C.init, "string" == typeof N && (N = B.parse(N));
                        var v = C.blockSize,
                            T = 4 * v;
                        N.sigBytes > T && (N = C.finalize(N)), N.clamp();
                        for (var y = this._oKey = N.clone(), S = this._iKey = N.clone(), R = y.words, $ = S.words, V = 0; V < v; V++) R[V] ^= 1549556828, $[V] ^= 909522486;
                        y.sigBytes = S.sigBytes = T, this.reset()
                    },
                    reset: function() {
                        var C = this._hasher;
                        C.reset(), C.update(this._iKey)
                    },
                    update: function(C) {
                        return this._hasher.update(C), this
                    },
                    finalize: function(C) {
                        var N = this._hasher,
                            v = N.finalize(C);
                        return N.reset(), N.finalize(this._oKey.clone().concat(v))
                    }
                })))
            },
            206: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(401), L(412), L(12), L(319), L(410), L(493), L(162), L(817), L(769), L(351), L(787), L(971), L(973), L(764), L(812), L(865), L(57), L(424), L(635), L(592), L(354), L(934), L(413), L(630), L(187), L(691), L(237), L(847), L(466), L(243), L(486), L(182), L(544), A)
            },
            412: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), function() {
                    if ("function" == typeof ArrayBuffer) {
                        var j = A.lib.WordArray,
                            X = j.init,
                            B = j.init = function(U) {
                                if (U instanceof ArrayBuffer && (U = new Uint8Array(U)), (U instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && U instanceof Uint8ClampedArray || U instanceof Int16Array || U instanceof Uint16Array || U instanceof Int32Array || U instanceof Uint32Array || U instanceof Float32Array || U instanceof Float64Array) && (U = new Uint8Array(U.buffer, U.byteOffset, U.byteLength)), U instanceof Uint8Array) {
                                    for (var b = U.byteLength, C = [], N = 0; N < b; N++) C[N >>> 2] |= U[N] << 24 - N % 4 * 8;
                                    X.call(this, C, b)
                                } else X.apply(this, arguments)
                            };
                        B.prototype = j
                    }
                }(), A.lib.WordArray)
            },
            493: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), function(w) {
                    var z = A,
                        j = z.lib,
                        X = j.WordArray,
                        B = j.Hasher,
                        U = z.algo,
                        b = [];
                    ! function() {
                        for (var S = 0; S < 64; S++) b[S] = 4294967296 * w.abs(w.sin(S + 1)) | 0
                    }();
                    var C = U.MD5 = B.extend({
                        _doReset: function() {
                            this._hash = new X.init([1732584193, 4023233417, 2562383102, 271733878])
                        },
                        _doProcessBlock: function(S, R) {
                            for (var $ = 0; $ < 16; $++) {
                                var V = R + $,
                                    x = S[V];
                                S[V] = 16711935 & (x << 8 | x >>> 24) | 4278255360 & (x << 24 | x >>> 8)
                            }
                            var E = this._hash.words,
                                q = S[R + 0],
                                G = S[R + 1],
                                K = S[R + 2],
                                W = S[R + 3],
                                de = S[R + 4],
                                ae = S[R + 5],
                                fe = S[R + 6],
                                ve = S[R + 7],
                                Q = S[R + 8],
                                ce = S[R + 9],
                                le = S[R + 10],
                                oe = S[R + 11],
                                ke = S[R + 12],
                                Me = S[R + 13],
                                je = S[R + 14],
                                Te = S[R + 15],
                                J = E[0],
                                se = E[1],
                                te = E[2],
                                Z = E[3];
                            J = N(J, se, te, Z, q, 7, b[0]), Z = N(Z, J, se, te, G, 12, b[1]), te = N(te, Z, J, se, K, 17, b[2]), se = N(se, te, Z, J, W, 22, b[3]), J = N(J, se, te, Z, de, 7, b[4]), Z = N(Z, J, se, te, ae, 12, b[5]), te = N(te, Z, J, se, fe, 17, b[6]), se = N(se, te, Z, J, ve, 22, b[7]), J = N(J, se, te, Z, Q, 7, b[8]), Z = N(Z, J, se, te, ce, 12, b[9]), te = N(te, Z, J, se, le, 17, b[10]), se = N(se, te, Z, J, oe, 22, b[11]), J = N(J, se, te, Z, ke, 7, b[12]), Z = N(Z, J, se, te, Me, 12, b[13]), te = N(te, Z, J, se, je, 17, b[14]), J = v(J, se = N(se, te, Z, J, Te, 22, b[15]), te, Z, G, 5, b[16]), Z = v(Z, J, se, te, fe, 9, b[17]), te = v(te, Z, J, se, oe, 14, b[18]), se = v(se, te, Z, J, q, 20, b[19]), J = v(J, se, te, Z, ae, 5, b[20]), Z = v(Z, J, se, te, le, 9, b[21]), te = v(te, Z, J, se, Te, 14, b[22]), se = v(se, te, Z, J, de, 20, b[23]), J = v(J, se, te, Z, ce, 5, b[24]), Z = v(Z, J, se, te, je, 9, b[25]), te = v(te, Z, J, se, W, 14, b[26]), se = v(se, te, Z, J, Q, 20, b[27]), J = v(J, se, te, Z, Me, 5, b[28]), Z = v(Z, J, se, te, K, 9, b[29]), te = v(te, Z, J, se, ve, 14, b[30]), J = T(J, se = v(se, te, Z, J, ke, 20, b[31]), te, Z, ae, 4, b[32]), Z = T(Z, J, se, te, Q, 11, b[33]), te = T(te, Z, J, se, oe, 16, b[34]), se = T(se, te, Z, J, je, 23, b[35]), J = T(J, se, te, Z, G, 4, b[36]), Z = T(Z, J, se, te, de, 11, b[37]), te = T(te, Z, J, se, ve, 16, b[38]), se = T(se, te, Z, J, le, 23, b[39]), J = T(J, se, te, Z, Me, 4, b[40]), Z = T(Z, J, se, te, q, 11, b[41]), te = T(te, Z, J, se, W, 16, b[42]), se = T(se, te, Z, J, fe, 23, b[43]), J = T(J, se, te, Z, ce, 4, b[44]), Z = T(Z, J, se, te, ke, 11, b[45]), te = T(te, Z, J, se, Te, 16, b[46]), J = y(J, se = T(se, te, Z, J, K, 23, b[47]), te, Z, q, 6, b[48]), Z = y(Z, J, se, te, ve, 10, b[49]), te = y(te, Z, J, se, je, 15, b[50]), se = y(se, te, Z, J, ae, 21, b[51]), J = y(J, se, te, Z, ke, 6, b[52]), Z = y(Z, J, se, te, W, 10, b[53]), te = y(te, Z, J, se, le, 15, b[54]), se = y(se, te, Z, J, G, 21, b[55]), J = y(J, se, te, Z, Q, 6, b[56]), Z = y(Z, J, se, te, Te, 10, b[57]), te = y(te, Z, J, se, fe, 15, b[58]), se = y(se, te, Z, J, Me, 21, b[59]), J = y(J, se, te, Z, de, 6, b[60]), Z = y(Z, J, se, te, oe, 10, b[61]), te = y(te, Z, J, se, K, 15, b[62]), se = y(se, te, Z, J, ce, 21, b[63]), E[0] = E[0] + J | 0, E[1] = E[1] + se | 0, E[2] = E[2] + te | 0, E[3] = E[3] + Z | 0
                        },
                        _doFinalize: function() {
                            var S = this._data,
                                R = S.words,
                                $ = 8 * this._nDataBytes,
                                V = 8 * S.sigBytes;
                            R[V >>> 5] |= 128 << 24 - V % 32;
                            var x = w.floor($ / 4294967296),
                                E = $;
                            R[15 + (V + 64 >>> 9 << 4)] = 16711935 & (x << 8 | x >>> 24) | 4278255360 & (x << 24 | x >>> 8), R[14 + (V + 64 >>> 9 << 4)] = 16711935 & (E << 8 | E >>> 24) | 4278255360 & (E << 24 | E >>> 8), S.sigBytes = 4 * (R.length + 1), this._process();
                            for (var q = this._hash, G = q.words, K = 0; K < 4; K++) {
                                var W = G[K];
                                G[K] = 16711935 & (W << 8 | W >>> 24) | 4278255360 & (W << 24 | W >>> 8)
                            }
                            return q
                        },
                        clone: function() {
                            var S = B.clone.call(this);
                            return S._hash = this._hash.clone(), S
                        }
                    });

                    function N(S, R, $, V, x, E, q) {
                        var G = S + (R & $ | ~R & V) + x + q;
                        return (G << E | G >>> 32 - E) + R
                    }

                    function v(S, R, $, V, x, E, q) {
                        var G = S + (R & V | $ & ~V) + x + q;
                        return (G << E | G >>> 32 - E) + R
                    }

                    function T(S, R, $, V, x, E, q) {
                        var G = S + (R ^ $ ^ V) + x + q;
                        return (G << E | G >>> 32 - E) + R
                    }

                    function y(S, R, $, V, x, E, q) {
                        var G = S + ($ ^ (R | ~V)) + x + q;
                        return (G << E | G >>> 32 - E) + R
                    }
                    z.MD5 = B._createHelper(C), z.HmacMD5 = B._createHmacHelper(C)
                }(Math), A.MD5)
            },
            424: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(57), A.mode.CFB = function() {
                    var w = A.lib.BlockCipherMode.extend();

                    function z(j, X, B, U) {
                        var b, C = this._iv;
                        C ? (b = C.slice(0), this._iv = void 0) : b = this._prevBlock, U.encryptBlock(b, 0);
                        for (var N = 0; N < B; N++) j[X + N] ^= b[N]
                    }
                    return w.Encryptor = w.extend({
                        processBlock: function(j, X) {
                            var B = this._cipher,
                                U = B.blockSize;
                            z.call(this, j, X, U, B), this._prevBlock = j.slice(X, X + U)
                        }
                    }), w.Decryptor = w.extend({
                        processBlock: function(j, X) {
                            var B = this._cipher,
                                U = B.blockSize,
                                b = j.slice(X, X + U);
                            z.call(this, j, X, U, B), this._prevBlock = b
                        }
                    }), w
                }(), A.mode.CFB)
            },
            592: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(57), A.mode.CTRGladman = function() {
                    var w = A.lib.BlockCipherMode.extend();

                    function z(B) {
                        if (255 == (B >> 24 & 255)) {
                            var U = B >> 16 & 255,
                                b = B >> 8 & 255,
                                C = 255 & B;
                            255 === U ? (U = 0, 255 === b ? (b = 0, 255 === C ? C = 0 : ++C) : ++b) : ++U, B = 0, B += U << 16, B += b << 8, B += C
                        } else B += 1 << 24;
                        return B
                    }
                    var X = w.Encryptor = w.extend({
                        processBlock: function(B, U) {
                            var b = this._cipher,
                                C = b.blockSize,
                                N = this._iv,
                                v = this._counter;
                            N && (v = this._counter = N.slice(0), this._iv = void 0),
                                function j(B) {
                                    return 0 === (B[0] = z(B[0])) && (B[1] = z(B[1])), B
                                }(v);
                            var T = v.slice(0);
                            b.encryptBlock(T, 0);
                            for (var y = 0; y < C; y++) B[U + y] ^= T[y]
                        }
                    });
                    return w.Decryptor = X, w
                }(), A.mode.CTRGladman)
            },
            635: function(me, _e, L) {
                var w, z, A;
                me.exports = (A = L(585), L(57), A.mode.CTR = (z = (w = A.lib.BlockCipherMode.extend()).Encryptor = w.extend({
                    processBlock: function(j, X) {
                        var B = this._cipher,
                            U = B.blockSize,
                            b = this._iv,
                            C = this._counter;
                        b && (C = this._counter = b.slice(0), this._iv = void 0);
                        var N = C.slice(0);
                        B.encryptBlock(N, 0), C[U - 1] = C[U - 1] + 1 | 0;
                        for (var v = 0; v < U; v++) j[X + v] ^= N[v]
                    }
                }), w.Decryptor = z, w), A.mode.CTR)
            },
            934: function(me, _e, L) {
                var w, A;
                me.exports = (A = L(585), L(57), A.mode.ECB = ((w = A.lib.BlockCipherMode.extend()).Encryptor = w.extend({
                    processBlock: function(z, j) {
                        this._cipher.encryptBlock(z, j)
                    }
                }), w.Decryptor = w.extend({
                    processBlock: function(z, j) {
                        this._cipher.decryptBlock(z, j)
                    }
                }), w), A.mode.ECB)
            },
            354: function(me, _e, L) {
                var w, z, A;
                me.exports = (A = L(585), L(57), A.mode.OFB = (z = (w = A.lib.BlockCipherMode.extend()).Encryptor = w.extend({
                    processBlock: function(j, X) {
                        var B = this._cipher,
                            U = B.blockSize,
                            b = this._iv,
                            C = this._keystream;
                        b && (C = this._keystream = b.slice(0), this._iv = void 0), B.encryptBlock(C, 0);
                        for (var N = 0; N < U; N++) j[X + N] ^= C[N]
                    }
                }), w.Decryptor = z, w), A.mode.OFB)
            },
            413: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(57), A.pad.AnsiX923 = {
                    pad: function(w, z) {
                        var j = w.sigBytes,
                            X = 4 * z,
                            B = X - j % X,
                            U = j + B - 1;
                        w.clamp(), w.words[U >>> 2] |= B << 24 - U % 4 * 8, w.sigBytes += B
                    },
                    unpad: function(w) {
                        w.sigBytes -= 255 & w.words[w.sigBytes - 1 >>> 2]
                    }
                }, A.pad.Ansix923)
            },
            630: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(57), A.pad.Iso10126 = {
                    pad: function(w, z) {
                        var j = 4 * z,
                            X = j - w.sigBytes % j;
                        w.concat(A.lib.WordArray.random(X - 1)).concat(A.lib.WordArray.create([X << 24], 1))
                    },
                    unpad: function(w) {
                        w.sigBytes -= 255 & w.words[w.sigBytes - 1 >>> 2]
                    }
                }, A.pad.Iso10126)
            },
            187: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(57), A.pad.Iso97971 = {
                    pad: function(w, z) {
                        w.concat(A.lib.WordArray.create([2147483648], 1)), A.pad.ZeroPadding.pad(w, z)
                    },
                    unpad: function(w) {
                        A.pad.ZeroPadding.unpad(w), w.sigBytes--
                    }
                }, A.pad.Iso97971)
            },
            237: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(57), A.pad.NoPadding = {
                    pad: function() {},
                    unpad: function() {}
                }, A.pad.NoPadding)
            },
            691: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(57), A.pad.ZeroPadding = {
                    pad: function(w, z) {
                        var j = 4 * z;
                        w.clamp(), w.sigBytes += j - (w.sigBytes % j || j)
                    },
                    unpad: function(w) {
                        var z = w.words,
                            j = w.sigBytes - 1;
                        for (j = w.sigBytes - 1; j >= 0; j--)
                            if (z[j >>> 2] >>> 24 - j % 4 * 8 & 255) {
                                w.sigBytes = j + 1;
                                break
                            }
                    }
                }, A.pad.ZeroPadding)
            },
            812: function(me, _e, L) {
                var w, z, j, X, B, b, C, A;
                me.exports = (A = L(585), L(162), L(764), X = (z = (w = A).lib).WordArray, b = (B = w.algo).HMAC, C = B.PBKDF2 = (j = z.Base).extend({
                    cfg: j.extend({
                        keySize: 4,
                        hasher: B.SHA1,
                        iterations: 1
                    }),
                    init: function(N) {
                        this.cfg = this.cfg.extend(N)
                    },
                    compute: function(N, v) {
                        for (var T = this.cfg, y = b.create(T.hasher, N), S = X.create(), R = X.create([1]), $ = S.words, V = R.words, x = T.keySize, E = T.iterations; $.length < x;) {
                            var q = y.update(v).finalize(R);
                            y.reset();
                            for (var G = q.words, K = G.length, W = q, de = 1; de < E; de++) {
                                W = y.finalize(W), y.reset();
                                for (var ae = W.words, fe = 0; fe < K; fe++) G[fe] ^= ae[fe]
                            }
                            S.concat(q), V[0]++
                        }
                        return S.sigBytes = 4 * x, S
                    }
                }), w.PBKDF2 = function(N, v, T) {
                    return C.create(T).compute(N, v)
                }, A.PBKDF2)
            },
            544: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(319), L(493), L(865), L(57), function() {
                    var w = A,
                        j = w.lib.StreamCipher,
                        B = [],
                        U = [],
                        b = [],
                        C = w.algo.RabbitLegacy = j.extend({
                            _doReset: function() {
                                var v = this._key.words,
                                    T = this.cfg.iv,
                                    y = this._X = [v[0], v[3] << 16 | v[2] >>> 16, v[1], v[0] << 16 | v[3] >>> 16, v[2], v[1] << 16 | v[0] >>> 16, v[3], v[2] << 16 | v[1] >>> 16],
                                    S = this._C = [v[2] << 16 | v[2] >>> 16, 4294901760 & v[0] | 65535 & v[1], v[3] << 16 | v[3] >>> 16, 4294901760 & v[1] | 65535 & v[2], v[0] << 16 | v[0] >>> 16, 4294901760 & v[2] | 65535 & v[3], v[1] << 16 | v[1] >>> 16, 4294901760 & v[3] | 65535 & v[0]];
                                this._b = 0;
                                for (var R = 0; R < 4; R++) N.call(this);
                                for (R = 0; R < 8; R++) S[R] ^= y[R + 4 & 7];
                                if (T) {
                                    var $ = T.words,
                                        V = $[0],
                                        x = $[1],
                                        E = 16711935 & (V << 8 | V >>> 24) | 4278255360 & (V << 24 | V >>> 8),
                                        q = 16711935 & (x << 8 | x >>> 24) | 4278255360 & (x << 24 | x >>> 8),
                                        G = E >>> 16 | 4294901760 & q,
                                        K = q << 16 | 65535 & E;
                                    for (S[0] ^= E, S[1] ^= G, S[2] ^= q, S[3] ^= K, S[4] ^= E, S[5] ^= G, S[6] ^= q, S[7] ^= K, R = 0; R < 4; R++) N.call(this)
                                }
                            },
                            _doProcessBlock: function(v, T) {
                                var y = this._X;
                                N.call(this), B[0] = y[0] ^ y[5] >>> 16 ^ y[3] << 16, B[1] = y[2] ^ y[7] >>> 16 ^ y[5] << 16, B[2] = y[4] ^ y[1] >>> 16 ^ y[7] << 16, B[3] = y[6] ^ y[3] >>> 16 ^ y[1] << 16;
                                for (var S = 0; S < 4; S++) B[S] = 16711935 & (B[S] << 8 | B[S] >>> 24) | 4278255360 & (B[S] << 24 | B[S] >>> 8), v[T + S] ^= B[S]
                            },
                            blockSize: 4,
                            ivSize: 2
                        });

                    function N() {
                        for (var v = this._X, T = this._C, y = 0; y < 8; y++) U[y] = T[y];
                        for (T[0] = T[0] + 1295307597 + this._b | 0, T[1] = T[1] + 3545052371 + (T[0] >>> 0 < U[0] >>> 0 ? 1 : 0) | 0, T[2] = T[2] + 886263092 + (T[1] >>> 0 < U[1] >>> 0 ? 1 : 0) | 0, T[3] = T[3] + 1295307597 + (T[2] >>> 0 < U[2] >>> 0 ? 1 : 0) | 0, T[4] = T[4] + 3545052371 + (T[3] >>> 0 < U[3] >>> 0 ? 1 : 0) | 0, T[5] = T[5] + 886263092 + (T[4] >>> 0 < U[4] >>> 0 ? 1 : 0) | 0, T[6] = T[6] + 1295307597 + (T[5] >>> 0 < U[5] >>> 0 ? 1 : 0) | 0, T[7] = T[7] + 3545052371 + (T[6] >>> 0 < U[6] >>> 0 ? 1 : 0) | 0, this._b = T[7] >>> 0 < U[7] >>> 0 ? 1 : 0, y = 0; y < 8; y++) {
                            var S = v[y] + T[y],
                                R = 65535 & S,
                                $ = S >>> 16;
                            b[y] = ((R * R >>> 17) + R * $ >>> 15) + $ * $ ^ ((4294901760 & S) * S | 0) + ((65535 & S) * S | 0)
                        }
                        v[0] = b[0] + (b[7] << 16 | b[7] >>> 16) + (b[6] << 16 | b[6] >>> 16) | 0, v[1] = b[1] + (b[0] << 8 | b[0] >>> 24) + b[7] | 0, v[2] = b[2] + (b[1] << 16 | b[1] >>> 16) + (b[0] << 16 | b[0] >>> 16) | 0, v[3] = b[3] + (b[2] << 8 | b[2] >>> 24) + b[1] | 0, v[4] = b[4] + (b[3] << 16 | b[3] >>> 16) + (b[2] << 16 | b[2] >>> 16) | 0, v[5] = b[5] + (b[4] << 8 | b[4] >>> 24) + b[3] | 0, v[6] = b[6] + (b[5] << 16 | b[5] >>> 16) + (b[4] << 16 | b[4] >>> 16) | 0, v[7] = b[7] + (b[6] << 8 | b[6] >>> 24) + b[5] | 0
                    }
                    w.RabbitLegacy = j._createHelper(C)
                }(), A.RabbitLegacy)
            },
            182: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(319), L(493), L(865), L(57), function() {
                    var w = A,
                        j = w.lib.StreamCipher,
                        B = [],
                        U = [],
                        b = [],
                        C = w.algo.Rabbit = j.extend({
                            _doReset: function() {
                                for (var v = this._key.words, T = this.cfg.iv, y = 0; y < 4; y++) v[y] = 16711935 & (v[y] << 8 | v[y] >>> 24) | 4278255360 & (v[y] << 24 | v[y] >>> 8);
                                var S = this._X = [v[0], v[3] << 16 | v[2] >>> 16, v[1], v[0] << 16 | v[3] >>> 16, v[2], v[1] << 16 | v[0] >>> 16, v[3], v[2] << 16 | v[1] >>> 16],
                                    R = this._C = [v[2] << 16 | v[2] >>> 16, 4294901760 & v[0] | 65535 & v[1], v[3] << 16 | v[3] >>> 16, 4294901760 & v[1] | 65535 & v[2], v[0] << 16 | v[0] >>> 16, 4294901760 & v[2] | 65535 & v[3], v[1] << 16 | v[1] >>> 16, 4294901760 & v[3] | 65535 & v[0]];
                                for (this._b = 0, y = 0; y < 4; y++) N.call(this);
                                for (y = 0; y < 8; y++) R[y] ^= S[y + 4 & 7];
                                if (T) {
                                    var $ = T.words,
                                        V = $[0],
                                        x = $[1],
                                        E = 16711935 & (V << 8 | V >>> 24) | 4278255360 & (V << 24 | V >>> 8),
                                        q = 16711935 & (x << 8 | x >>> 24) | 4278255360 & (x << 24 | x >>> 8),
                                        G = E >>> 16 | 4294901760 & q,
                                        K = q << 16 | 65535 & E;
                                    for (R[0] ^= E, R[1] ^= G, R[2] ^= q, R[3] ^= K, R[4] ^= E, R[5] ^= G, R[6] ^= q, R[7] ^= K, y = 0; y < 4; y++) N.call(this)
                                }
                            },
                            _doProcessBlock: function(v, T) {
                                var y = this._X;
                                N.call(this), B[0] = y[0] ^ y[5] >>> 16 ^ y[3] << 16, B[1] = y[2] ^ y[7] >>> 16 ^ y[5] << 16, B[2] = y[4] ^ y[1] >>> 16 ^ y[7] << 16, B[3] = y[6] ^ y[3] >>> 16 ^ y[1] << 16;
                                for (var S = 0; S < 4; S++) B[S] = 16711935 & (B[S] << 8 | B[S] >>> 24) | 4278255360 & (B[S] << 24 | B[S] >>> 8), v[T + S] ^= B[S]
                            },
                            blockSize: 4,
                            ivSize: 2
                        });

                    function N() {
                        for (var v = this._X, T = this._C, y = 0; y < 8; y++) U[y] = T[y];
                        for (T[0] = T[0] + 1295307597 + this._b | 0, T[1] = T[1] + 3545052371 + (T[0] >>> 0 < U[0] >>> 0 ? 1 : 0) | 0, T[2] = T[2] + 886263092 + (T[1] >>> 0 < U[1] >>> 0 ? 1 : 0) | 0, T[3] = T[3] + 1295307597 + (T[2] >>> 0 < U[2] >>> 0 ? 1 : 0) | 0, T[4] = T[4] + 3545052371 + (T[3] >>> 0 < U[3] >>> 0 ? 1 : 0) | 0, T[5] = T[5] + 886263092 + (T[4] >>> 0 < U[4] >>> 0 ? 1 : 0) | 0, T[6] = T[6] + 1295307597 + (T[5] >>> 0 < U[5] >>> 0 ? 1 : 0) | 0, T[7] = T[7] + 3545052371 + (T[6] >>> 0 < U[6] >>> 0 ? 1 : 0) | 0, this._b = T[7] >>> 0 < U[7] >>> 0 ? 1 : 0, y = 0; y < 8; y++) {
                            var S = v[y] + T[y],
                                R = 65535 & S,
                                $ = S >>> 16;
                            b[y] = ((R * R >>> 17) + R * $ >>> 15) + $ * $ ^ ((4294901760 & S) * S | 0) + ((65535 & S) * S | 0)
                        }
                        v[0] = b[0] + (b[7] << 16 | b[7] >>> 16) + (b[6] << 16 | b[6] >>> 16) | 0, v[1] = b[1] + (b[0] << 8 | b[0] >>> 24) + b[7] | 0, v[2] = b[2] + (b[1] << 16 | b[1] >>> 16) + (b[0] << 16 | b[0] >>> 16) | 0, v[3] = b[3] + (b[2] << 8 | b[2] >>> 24) + b[1] | 0, v[4] = b[4] + (b[3] << 16 | b[3] >>> 16) + (b[2] << 16 | b[2] >>> 16) | 0, v[5] = b[5] + (b[4] << 8 | b[4] >>> 24) + b[3] | 0, v[6] = b[6] + (b[5] << 16 | b[5] >>> 16) + (b[4] << 16 | b[4] >>> 16) | 0, v[7] = b[7] + (b[6] << 8 | b[6] >>> 24) + b[5] | 0
                    }
                    w.Rabbit = j._createHelper(C)
                }(), A.Rabbit)
            },
            486: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(319), L(493), L(865), L(57), function() {
                    var w = A,
                        j = w.lib.StreamCipher,
                        X = w.algo,
                        B = X.RC4 = j.extend({
                            _doReset: function() {
                                for (var C = this._key, N = C.words, v = C.sigBytes, T = this._S = [], y = 0; y < 256; y++) T[y] = y;
                                y = 0;
                                for (var S = 0; y < 256; y++) {
                                    var R = y % v,
                                        V = T[y];
                                    T[y] = T[S = (S + T[y] + (N[R >>> 2] >>> 24 - R % 4 * 8 & 255)) % 256], T[S] = V
                                }
                                this._i = this._j = 0
                            },
                            _doProcessBlock: function(C, N) {
                                C[N] ^= U.call(this)
                            },
                            keySize: 8,
                            ivSize: 0
                        });

                    function U() {
                        for (var C = this._S, N = this._i, v = this._j, T = 0, y = 0; y < 4; y++) {
                            var S = C[N = (N + 1) % 256];
                            C[N] = C[v = (v + C[N]) % 256], C[v] = S, T |= C[(C[N] + C[v]) % 256] << 24 - 8 * y
                        }
                        return this._i = N, this._j = v, T
                    }
                    w.RC4 = j._createHelper(B);
                    var b = X.RC4Drop = B.extend({
                        cfg: B.cfg.extend({
                            drop: 192
                        }),
                        _doReset: function() {
                            B._doReset.call(this);
                            for (var C = this.cfg.drop; C > 0; C--) U.call(this)
                        }
                    });
                    w.RC4Drop = j._createHelper(b)
                }(), A.RC4)
            },
            973: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), function(w) {
                    var z = A,
                        j = z.lib,
                        X = j.WordArray,
                        B = j.Hasher,
                        U = z.algo,
                        b = X.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]),
                        C = X.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]),
                        N = X.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]),
                        v = X.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]),
                        T = X.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                        y = X.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
                        S = U.RIPEMD160 = B.extend({
                            _doReset: function() {
                                this._hash = X.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                            },
                            _doProcessBlock: function(G, K) {
                                for (var W = 0; W < 16; W++) {
                                    var de = K + W,
                                        ae = G[de];
                                    G[de] = 16711935 & (ae << 8 | ae >>> 24) | 4278255360 & (ae << 24 | ae >>> 8)
                                }
                                var Me, je, Te, J, se, te, Z, Ge, tt, sn, Fe, fe = this._hash.words,
                                    ve = T.words,
                                    Q = y.words,
                                    ce = b.words,
                                    le = C.words,
                                    oe = N.words,
                                    ke = v.words;
                                for (te = Me = fe[0], Z = je = fe[1], Ge = Te = fe[2], tt = J = fe[3], sn = se = fe[4], W = 0; W < 80; W += 1) Fe = Me + G[K + ce[W]] | 0, Fe += W < 16 ? R(je, Te, J) + ve[0] : W < 32 ? $(je, Te, J) + ve[1] : W < 48 ? V(je, Te, J) + ve[2] : W < 64 ? x(je, Te, J) + ve[3] : E(je, Te, J) + ve[4], Fe = (Fe = q(Fe |= 0, oe[W])) + se | 0, Me = se, se = J, J = q(Te, 10), Te = je, je = Fe, Fe = te + G[K + le[W]] | 0, Fe += W < 16 ? E(Z, Ge, tt) + Q[0] : W < 32 ? x(Z, Ge, tt) + Q[1] : W < 48 ? V(Z, Ge, tt) + Q[2] : W < 64 ? $(Z, Ge, tt) + Q[3] : R(Z, Ge, tt) + Q[4], Fe = (Fe = q(Fe |= 0, ke[W])) + sn | 0, te = sn, sn = tt, tt = q(Ge, 10), Ge = Z, Z = Fe;
                                Fe = fe[1] + Te + tt | 0, fe[1] = fe[2] + J + sn | 0, fe[2] = fe[3] + se + te | 0, fe[3] = fe[4] + Me + Z | 0, fe[4] = fe[0] + je + Ge | 0, fe[0] = Fe
                            },
                            _doFinalize: function() {
                                var G = this._data,
                                    K = G.words,
                                    W = 8 * this._nDataBytes,
                                    de = 8 * G.sigBytes;
                                K[de >>> 5] |= 128 << 24 - de % 32, K[14 + (de + 64 >>> 9 << 4)] = 16711935 & (W << 8 | W >>> 24) | 4278255360 & (W << 24 | W >>> 8), G.sigBytes = 4 * (K.length + 1), this._process();
                                for (var ae = this._hash, fe = ae.words, ve = 0; ve < 5; ve++) {
                                    var Q = fe[ve];
                                    fe[ve] = 16711935 & (Q << 8 | Q >>> 24) | 4278255360 & (Q << 24 | Q >>> 8)
                                }
                                return ae
                            },
                            clone: function() {
                                var G = B.clone.call(this);
                                return G._hash = this._hash.clone(), G
                            }
                        });

                    function R(G, K, W) {
                        return G ^ K ^ W
                    }

                    function $(G, K, W) {
                        return G & K | ~G & W
                    }

                    function V(G, K, W) {
                        return (G | ~K) ^ W
                    }

                    function x(G, K, W) {
                        return G & W | K & ~W
                    }

                    function E(G, K, W) {
                        return G ^ (K | ~W)
                    }

                    function q(G, K) {
                        return G << K | G >>> 32 - K
                    }
                    z.RIPEMD160 = B._createHelper(S), z.HmacRIPEMD160 = B._createHmacHelper(S)
                }(Math), A.RIPEMD160)
            },
            162: function(me, _e, L) {
                var w, z, j, X, U, b, A;
                me.exports = (A = L(585), j = (z = (w = A).lib).WordArray, U = [], b = w.algo.SHA1 = (X = z.Hasher).extend({
                    _doReset: function() {
                        this._hash = new j.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                    },
                    _doProcessBlock: function(C, N) {
                        for (var v = this._hash.words, T = v[0], y = v[1], S = v[2], R = v[3], $ = v[4], V = 0; V < 80; V++) {
                            if (V < 16) U[V] = 0 | C[N + V];
                            else {
                                var x = U[V - 3] ^ U[V - 8] ^ U[V - 14] ^ U[V - 16];
                                U[V] = x << 1 | x >>> 31
                            }
                            var E = (T << 5 | T >>> 27) + $ + U[V];
                            E += V < 20 ? 1518500249 + (y & S | ~y & R) : V < 40 ? 1859775393 + (y ^ S ^ R) : V < 60 ? (y & S | y & R | S & R) - 1894007588 : (y ^ S ^ R) - 899497514, $ = R, R = S, S = y << 30 | y >>> 2, y = T, T = E
                        }
                        v[0] = v[0] + T | 0, v[1] = v[1] + y | 0, v[2] = v[2] + S | 0, v[3] = v[3] + R | 0, v[4] = v[4] + $ | 0
                    },
                    _doFinalize: function() {
                        var C = this._data,
                            N = C.words,
                            v = 8 * this._nDataBytes,
                            T = 8 * C.sigBytes;
                        return N[T >>> 5] |= 128 << 24 - T % 32, N[14 + (T + 64 >>> 9 << 4)] = Math.floor(v / 4294967296), N[15 + (T + 64 >>> 9 << 4)] = v, C.sigBytes = 4 * N.length, this._process(), this._hash
                    },
                    clone: function() {
                        var C = X.clone.call(this);
                        return C._hash = this._hash.clone(), C
                    }
                }), w.SHA1 = X._createHelper(b), w.HmacSHA1 = X._createHmacHelper(b), A.SHA1)
            },
            769: function(me, _e, L) {
                var w, j, X, B, U, A;
                me.exports = (A = L(585), L(817), j = (w = A).lib.WordArray, U = (X = w.algo).SHA224 = (B = X.SHA256).extend({
                    _doReset: function() {
                        this._hash = new j.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428])
                    },
                    _doFinalize: function() {
                        var b = B._doFinalize.call(this);
                        return b.sigBytes -= 4, b
                    }
                }), w.SHA224 = B._createHelper(U), w.HmacSHA224 = B._createHmacHelper(U), A.SHA224)
            },
            817: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), function(w) {
                    var z = A,
                        j = z.lib,
                        X = j.WordArray,
                        B = j.Hasher,
                        U = z.algo,
                        b = [],
                        C = [];
                    ! function() {
                        function T($) {
                            for (var V = w.sqrt($), x = 2; x <= V; x++)
                                if (!($ % x)) return !1;
                            return !0
                        }

                        function y($) {
                            return 4294967296 * ($ - (0 | $)) | 0
                        }
                        for (var S = 2, R = 0; R < 64;) T(S) && (R < 8 && (b[R] = y(w.pow(S, .5))), C[R] = y(w.pow(S, 1 / 3)), R++), S++
                    }();
                    var N = [],
                        v = U.SHA256 = B.extend({
                            _doReset: function() {
                                this._hash = new X.init(b.slice(0))
                            },
                            _doProcessBlock: function(T, y) {
                                for (var S = this._hash.words, R = S[0], $ = S[1], V = S[2], x = S[3], E = S[4], q = S[5], G = S[6], K = S[7], W = 0; W < 64; W++) {
                                    if (W < 16) N[W] = 0 | T[y + W];
                                    else {
                                        var de = N[W - 15],
                                            fe = N[W - 2];
                                        N[W] = ((de << 25 | de >>> 7) ^ (de << 14 | de >>> 18) ^ de >>> 3) + N[W - 7] + ((fe << 15 | fe >>> 17) ^ (fe << 13 | fe >>> 19) ^ fe >>> 10) + N[W - 16]
                                    }
                                    var ce = R & $ ^ R & V ^ $ & V,
                                        ke = K + ((E << 26 | E >>> 6) ^ (E << 21 | E >>> 11) ^ (E << 7 | E >>> 25)) + (E & q ^ ~E & G) + C[W] + N[W];
                                    K = G, G = q, q = E, E = x + ke | 0, x = V, V = $, $ = R, R = ke + (((R << 30 | R >>> 2) ^ (R << 19 | R >>> 13) ^ (R << 10 | R >>> 22)) + ce) | 0
                                }
                                S[0] = S[0] + R | 0, S[1] = S[1] + $ | 0, S[2] = S[2] + V | 0, S[3] = S[3] + x | 0, S[4] = S[4] + E | 0, S[5] = S[5] + q | 0, S[6] = S[6] + G | 0, S[7] = S[7] + K | 0
                            },
                            _doFinalize: function() {
                                var T = this._data,
                                    y = T.words,
                                    S = 8 * this._nDataBytes,
                                    R = 8 * T.sigBytes;
                                return y[R >>> 5] |= 128 << 24 - R % 32, y[14 + (R + 64 >>> 9 << 4)] = w.floor(S / 4294967296), y[15 + (R + 64 >>> 9 << 4)] = S, T.sigBytes = 4 * y.length, this._process(), this._hash
                            },
                            clone: function() {
                                var T = B.clone.call(this);
                                return T._hash = this._hash.clone(), T
                            }
                        });
                    z.SHA256 = B._createHelper(v), z.HmacSHA256 = B._createHmacHelper(v)
                }(Math), A.SHA256)
            },
            971: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(401), function(w) {
                    var z = A,
                        j = z.lib,
                        X = j.WordArray,
                        B = j.Hasher,
                        b = z.x64.Word,
                        C = z.algo,
                        N = [],
                        v = [],
                        T = [];
                    ! function() {
                        for (var R = 1, $ = 0, V = 0; V < 24; V++) {
                            N[R + 5 * $] = (V + 1) * (V + 2) / 2 % 64;
                            var E = (2 * R + 3 * $) % 5;
                            R = $ % 5, $ = E
                        }
                        for (R = 0; R < 5; R++)
                            for ($ = 0; $ < 5; $++) v[R + 5 * $] = $ + (2 * R + 3 * $) % 5 * 5;
                        for (var q = 1, G = 0; G < 24; G++) {
                            for (var K = 0, W = 0, de = 0; de < 7; de++) {
                                if (1 & q) {
                                    var ae = (1 << de) - 1;
                                    ae < 32 ? W ^= 1 << ae : K ^= 1 << ae - 32
                                }
                                128 & q ? q = q << 1 ^ 113 : q <<= 1
                            }
                            T[G] = b.create(K, W)
                        }
                    }();
                    var y = [];
                    ! function() {
                        for (var R = 0; R < 25; R++) y[R] = b.create()
                    }();
                    var S = C.SHA3 = B.extend({
                        cfg: B.cfg.extend({
                            outputLength: 512
                        }),
                        _doReset: function() {
                            for (var R = this._state = [], $ = 0; $ < 25; $++) R[$] = new b.init;
                            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32
                        },
                        _doProcessBlock: function(R, $) {
                            for (var V = this._state, x = this.blockSize / 2, E = 0; E < x; E++) {
                                var q = R[$ + 2 * E],
                                    G = R[$ + 2 * E + 1];
                                q = 16711935 & (q << 8 | q >>> 24) | 4278255360 & (q << 24 | q >>> 8), (K = V[E]).high ^= G = 16711935 & (G << 8 | G >>> 24) | 4278255360 & (G << 24 | G >>> 8), K.low ^= q
                            }
                            for (var W = 0; W < 24; W++) {
                                for (var de = 0; de < 5; de++) {
                                    for (var ae = 0, fe = 0, ve = 0; ve < 5; ve++) ae ^= (K = V[de + 5 * ve]).high, fe ^= K.low;
                                    var Q = y[de];
                                    Q.high = ae, Q.low = fe
                                }
                                for (de = 0; de < 5; de++) {
                                    var ce = y[(de + 4) % 5],
                                        le = y[(de + 1) % 5],
                                        oe = le.high,
                                        ke = le.low;
                                    for (ae = ce.high ^ (oe << 1 | ke >>> 31), fe = ce.low ^ (ke << 1 | oe >>> 31), ve = 0; ve < 5; ve++)(K = V[de + 5 * ve]).high ^= ae, K.low ^= fe
                                }
                                for (var Me = 1; Me < 25; Me++) {
                                    var je = (K = V[Me]).high,
                                        Te = K.low,
                                        J = N[Me];
                                    J < 32 ? (ae = je << J | Te >>> 32 - J, fe = Te << J | je >>> 32 - J) : (ae = Te << J - 32 | je >>> 64 - J, fe = je << J - 32 | Te >>> 64 - J);
                                    var se = y[v[Me]];
                                    se.high = ae, se.low = fe
                                }
                                var te = y[0],
                                    Z = V[0];
                                for (te.high = Z.high, te.low = Z.low, de = 0; de < 5; de++)
                                    for (ve = 0; ve < 5; ve++) {
                                        var Ge = y[Me = de + 5 * ve],
                                            tt = y[(de + 1) % 5 + 5 * ve],
                                            sn = y[(de + 2) % 5 + 5 * ve];
                                        (K = V[Me]).high = Ge.high ^ ~tt.high & sn.high, K.low = Ge.low ^ ~tt.low & sn.low
                                    }
                                var K, Fe = T[W];
                                (K = V[0]).high ^= Fe.high, K.low ^= Fe.low
                            }
                        },
                        _doFinalize: function() {
                            var R = this._data,
                                $ = R.words,
                                x = 8 * R.sigBytes,
                                E = 32 * this.blockSize;
                            $[x >>> 5] |= 1 << 24 - x % 32, $[(w.ceil((x + 1) / E) * E >>> 5) - 1] |= 128, R.sigBytes = 4 * $.length, this._process();
                            for (var q = this._state, G = this.cfg.outputLength / 8, K = G / 8, W = [], de = 0; de < K; de++) {
                                var ae = q[de],
                                    fe = ae.high,
                                    ve = ae.low;
                                fe = 16711935 & (fe << 8 | fe >>> 24) | 4278255360 & (fe << 24 | fe >>> 8), W.push(ve = 16711935 & (ve << 8 | ve >>> 24) | 4278255360 & (ve << 24 | ve >>> 8)), W.push(fe)
                            }
                            return new X.init(W, G)
                        },
                        clone: function() {
                            for (var R = B.clone.call(this), $ = R._state = this._state.slice(0), V = 0; V < 25; V++) $[V] = $[V].clone();
                            return R
                        }
                    });
                    z.SHA3 = B._createHelper(S), z.HmacSHA3 = B._createHmacHelper(S)
                }(Math), A.SHA3)
            },
            787: function(me, _e, L) {
                var w, z, j, X, B, U, b, A;
                me.exports = (A = L(585), L(401), L(351), j = (z = (w = A).x64).Word, X = z.WordArray, b = (B = w.algo).SHA384 = (U = B.SHA512).extend({
                    _doReset: function() {
                        this._hash = new X.init([new j.init(3418070365, 3238371032), new j.init(1654270250, 914150663), new j.init(2438529370, 812702999), new j.init(355462360, 4144912697), new j.init(1731405415, 4290775857), new j.init(2394180231, 1750603025), new j.init(3675008525, 1694076839), new j.init(1203062813, 3204075428)])
                    },
                    _doFinalize: function() {
                        var C = U._doFinalize.call(this);
                        return C.sigBytes -= 16, C
                    }
                }), w.SHA384 = U._createHelper(b), w.HmacSHA384 = U._createHmacHelper(b), A.SHA384)
            },
            351: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(401), function() {
                    var w = A,
                        j = w.lib.Hasher,
                        X = w.x64,
                        B = X.Word,
                        U = X.WordArray,
                        b = w.algo;

                    function C() {
                        return B.create.apply(B, arguments)
                    }
                    var N = [C(1116352408, 3609767458), C(1899447441, 602891725), C(3049323471, 3964484399), C(3921009573, 2173295548), C(961987163, 4081628472), C(1508970993, 3053834265), C(2453635748, 2937671579), C(2870763221, 3664609560), C(3624381080, 2734883394), C(310598401, 1164996542), C(607225278, 1323610764), C(1426881987, 3590304994), C(1925078388, 4068182383), C(2162078206, 991336113), C(2614888103, 633803317), C(3248222580, 3479774868), C(3835390401, 2666613458), C(4022224774, 944711139), C(264347078, 2341262773), C(604807628, 2007800933), C(770255983, 1495990901), C(1249150122, 1856431235), C(1555081692, 3175218132), C(1996064986, 2198950837), C(2554220882, 3999719339), C(2821834349, 766784016), C(2952996808, 2566594879), C(3210313671, 3203337956), C(3336571891, 1034457026), C(3584528711, 2466948901), C(113926993, 3758326383), C(338241895, 168717936), C(666307205, 1188179964), C(773529912, 1546045734), C(1294757372, 1522805485), C(1396182291, 2643833823), C(1695183700, 2343527390), C(1986661051, 1014477480), C(2177026350, 1206759142), C(2456956037, 344077627), C(2730485921, 1290863460), C(2820302411, 3158454273), C(3259730800, 3505952657), C(3345764771, 106217008), C(3516065817, 3606008344), C(3600352804, 1432725776), C(4094571909, 1467031594), C(275423344, 851169720), C(430227734, 3100823752), C(506948616, 1363258195), C(659060556, 3750685593), C(883997877, 3785050280), C(958139571, 3318307427), C(1322822218, 3812723403), C(1537002063, 2003034995), C(1747873779, 3602036899), C(1955562222, 1575990012), C(2024104815, 1125592928), C(2227730452, 2716904306), C(2361852424, 442776044), C(2428436474, 593698344), C(2756734187, 3733110249), C(3204031479, 2999351573), C(3329325298, 3815920427), C(3391569614, 3928383900), C(3515267271, 566280711), C(3940187606, 3454069534), C(4118630271, 4000239992), C(116418474, 1914138554), C(174292421, 2731055270), C(289380356, 3203993006), C(460393269, 320620315), C(685471733, 587496836), C(852142971, 1086792851), C(1017036298, 365543100), C(1126000580, 2618297676), C(1288033470, 3409855158), C(1501505948, 4234509866), C(1607167915, 987167468), C(1816402316, 1246189591)],
                        v = [];
                    ! function() {
                        for (var y = 0; y < 80; y++) v[y] = C()
                    }();
                    var T = b.SHA512 = j.extend({
                        _doReset: function() {
                            this._hash = new U.init([new B.init(1779033703, 4089235720), new B.init(3144134277, 2227873595), new B.init(1013904242, 4271175723), new B.init(2773480762, 1595750129), new B.init(1359893119, 2917565137), new B.init(2600822924, 725511199), new B.init(528734635, 4215389547), new B.init(1541459225, 327033209)])
                        },
                        _doProcessBlock: function(y, S) {
                            for (var R = this._hash.words, $ = R[0], V = R[1], x = R[2], E = R[3], q = R[4], G = R[5], K = R[6], W = R[7], de = $.high, ae = $.low, fe = V.high, ve = V.low, Q = x.high, ce = x.low, le = E.high, oe = E.low, ke = q.high, Me = q.low, je = G.high, Te = G.low, J = K.high, se = K.low, te = W.high, Z = W.low, Ge = de, tt = ae, sn = fe, Fe = ve, Ur = Q, mr = ce, Ca = le, zr = oe, Cn = ke, bn = Me, _r = je, Wr = Te, vr = J, yr = se, Ma = te, Yr = Z, Bn = 0; Bn < 80; Bn++) {
                                var Ot, bi, no = v[Bn];
                                if (Bn < 16) bi = no.high = 0 | y[S + 2 * Bn], Ot = no.low = 0 | y[S + 2 * Bn + 1];
                                else {
                                    var Ta = v[Bn - 15],
                                        br = Ta.high,
                                        Dr = Ta.low,
                                        Lc = (Dr >>> 1 | br << 31) ^ (Dr >>> 8 | br << 24) ^ (Dr >>> 7 | br << 25),
                                        Vc = v[Bn - 2],
                                        xr = Vc.high,
                                        Bi = Vc.low,
                                        io = (Bi >>> 19 | xr << 13) ^ (Bi << 3 | xr >>> 29) ^ (Bi >>> 6 | xr << 26),
                                        ro = v[Bn - 7],
                                        so = v[Bn - 16],
                                        oo = so.low;
                                    no.high = bi = (bi = (bi = ((br >>> 1 | Dr << 31) ^ (br >>> 8 | Dr << 24) ^ br >>> 7) + ro.high + ((Ot = Lc + ro.low) >>> 0 < Lc >>> 0 ? 1 : 0)) + ((xr >>> 19 | Bi << 13) ^ (xr << 3 | Bi >>> 29) ^ xr >>> 6) + ((Ot += io) >>> 0 < io >>> 0 ? 1 : 0)) + so.high + ((Ot += oo) >>> 0 < oo >>> 0 ? 1 : 0), no.low = Ot
                                }
                                var Lt, Na = Cn & _r ^ ~Cn & vr,
                                    Wt = bn & Wr ^ ~bn & yr,
                                    jc = Ge & sn ^ Ge & Ur ^ sn & Ur,
                                    Aa = (tt >>> 28 | Ge << 4) ^ (tt << 30 | Ge >>> 2) ^ (tt << 25 | Ge >>> 7),
                                    Oa = N[Bn],
                                    Ra = Oa.low,
                                    Qn = Ma + ((Cn >>> 14 | bn << 18) ^ (Cn >>> 18 | bn << 14) ^ (Cn << 23 | bn >>> 9)) + ((Lt = Yr + ((bn >>> 14 | Cn << 18) ^ (bn >>> 18 | Cn << 14) ^ (bn << 23 | Cn >>> 9))) >>> 0 < Yr >>> 0 ? 1 : 0),
                                    Ki = Aa + (tt & Fe ^ tt & mr ^ Fe & mr);
                                Ma = vr, Yr = yr, vr = _r, yr = Wr, _r = Cn, Wr = bn, Cn = Ca + (Qn = (Qn = (Qn = Qn + Na + ((Lt += Wt) >>> 0 < Wt >>> 0 ? 1 : 0)) + Oa.high + ((Lt += Ra) >>> 0 < Ra >>> 0 ? 1 : 0)) + bi + ((Lt += Ot) >>> 0 < Ot >>> 0 ? 1 : 0)) + ((bn = zr + Lt | 0) >>> 0 < zr >>> 0 ? 1 : 0) | 0, Ca = Ur, zr = mr, Ur = sn, mr = Fe, sn = Ge, Fe = tt, Ge = Qn + (((Ge >>> 28 | tt << 4) ^ (Ge << 30 | tt >>> 2) ^ (Ge << 25 | tt >>> 7)) + jc + (Ki >>> 0 < Aa >>> 0 ? 1 : 0)) + ((tt = Lt + Ki | 0) >>> 0 < Lt >>> 0 ? 1 : 0) | 0
                            }
                            ae = $.low = ae + tt, $.high = de + Ge + (ae >>> 0 < tt >>> 0 ? 1 : 0), ve = V.low = ve + Fe, V.high = fe + sn + (ve >>> 0 < Fe >>> 0 ? 1 : 0), ce = x.low = ce + mr, x.high = Q + Ur + (ce >>> 0 < mr >>> 0 ? 1 : 0), oe = E.low = oe + zr, E.high = le + Ca + (oe >>> 0 < zr >>> 0 ? 1 : 0), Me = q.low = Me + bn, q.high = ke + Cn + (Me >>> 0 < bn >>> 0 ? 1 : 0), Te = G.low = Te + Wr, G.high = je + _r + (Te >>> 0 < Wr >>> 0 ? 1 : 0), se = K.low = se + yr, K.high = J + vr + (se >>> 0 < yr >>> 0 ? 1 : 0), Z = W.low = Z + Yr, W.high = te + Ma + (Z >>> 0 < Yr >>> 0 ? 1 : 0)
                        },
                        _doFinalize: function() {
                            var y = this._data,
                                S = y.words,
                                R = 8 * this._nDataBytes,
                                $ = 8 * y.sigBytes;
                            return S[$ >>> 5] |= 128 << 24 - $ % 32, S[30 + ($ + 128 >>> 10 << 5)] = Math.floor(R / 4294967296), S[31 + ($ + 128 >>> 10 << 5)] = R, y.sigBytes = 4 * S.length, this._process(), this._hash.toX32()
                        },
                        clone: function() {
                            var y = j.clone.call(this);
                            return y._hash = this._hash.clone(), y
                        },
                        blockSize: 32
                    });
                    w.SHA512 = j._createHelper(T), w.HmacSHA512 = j._createHmacHelper(T)
                }(), A.SHA512)
            },
            243: function(me, _e, L) {
                var A;
                me.exports = (A = L(585), L(319), L(493), L(865), L(57), function() {
                    var w = A,
                        z = w.lib,
                        j = z.WordArray,
                        X = z.BlockCipher,
                        B = w.algo,
                        U = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],
                        b = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],
                        C = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
                        N = [{
                            0: 8421888,
                            268435456: 32768,
                            536870912: 8421378,
                            805306368: 2,
                            1073741824: 512,
                            1342177280: 8421890,
                            1610612736: 8389122,
                            1879048192: 8388608,
                            2147483648: 514,
                            2415919104: 8389120,
                            2684354560: 33280,
                            2952790016: 8421376,
                            3221225472: 32770,
                            3489660928: 8388610,
                            3758096384: 0,
                            4026531840: 33282,
                            134217728: 0,
                            402653184: 8421890,
                            671088640: 33282,
                            939524096: 32768,
                            1207959552: 8421888,
                            1476395008: 512,
                            1744830464: 8421378,
                            2013265920: 2,
                            2281701376: 8389120,
                            2550136832: 33280,
                            2818572288: 8421376,
                            3087007744: 8389122,
                            3355443200: 8388610,
                            3623878656: 32770,
                            3892314112: 514,
                            4160749568: 8388608,
                            1: 32768,
                            268435457: 2,
                            536870913: 8421888,
                            805306369: 8388608,
                            1073741825: 8421378,
                            1342177281: 33280,
                            1610612737: 512,
                            1879048193: 8389122,
                            2147483649: 8421890,
                            2415919105: 8421376,
                            2684354561: 8388610,
                            2952790017: 33282,
                            3221225473: 514,
                            3489660929: 8389120,
                            3758096385: 32770,
                            4026531841: 0,
                            134217729: 8421890,
                            402653185: 8421376,
                            671088641: 8388608,
                            939524097: 512,
                            1207959553: 32768,
                            1476395009: 8388610,
                            1744830465: 2,
                            2013265921: 33282,
                            2281701377: 32770,
                            2550136833: 8389122,
                            2818572289: 514,
                            3087007745: 8421888,
                            3355443201: 8389120,
                            3623878657: 0,
                            3892314113: 33280,
                            4160749569: 8421378
                        }, {
                            0: 1074282512,
                            16777216: 16384,
                            33554432: 524288,
                            50331648: 1074266128,
                            67108864: 1073741840,
                            83886080: 1074282496,
                            100663296: 1073758208,
                            117440512: 16,
                            134217728: 540672,
                            150994944: 1073758224,
                            167772160: 1073741824,
                            184549376: 540688,
                            201326592: 524304,
                            218103808: 0,
                            234881024: 16400,
                            251658240: 1074266112,
                            8388608: 1073758208,
                            25165824: 540688,
                            41943040: 16,
                            58720256: 1073758224,
                            75497472: 1074282512,
                            92274688: 1073741824,
                            109051904: 524288,
                            125829120: 1074266128,
                            142606336: 524304,
                            159383552: 0,
                            176160768: 16384,
                            192937984: 1074266112,
                            209715200: 1073741840,
                            226492416: 540672,
                            243269632: 1074282496,
                            260046848: 16400,
                            268435456: 0,
                            285212672: 1074266128,
                            301989888: 1073758224,
                            318767104: 1074282496,
                            335544320: 1074266112,
                            352321536: 16,
                            369098752: 540688,
                            385875968: 16384,
                            402653184: 16400,
                            419430400: 524288,
                            436207616: 524304,
                            452984832: 1073741840,
                            469762048: 540672,
                            486539264: 1073758208,
                            503316480: 1073741824,
                            520093696: 1074282512,
                            276824064: 540688,
                            293601280: 524288,
                            310378496: 1074266112,
                            327155712: 16384,
                            343932928: 1073758208,
                            360710144: 1074282512,
                            377487360: 16,
                            394264576: 1073741824,
                            411041792: 1074282496,
                            427819008: 1073741840,
                            444596224: 1073758224,
                            461373440: 524304,
                            478150656: 0,
                            494927872: 16400,
                            511705088: 1074266128,
                            528482304: 540672
                        }, {
                            0: 260,
                            1048576: 0,
                            2097152: 67109120,
                            3145728: 65796,
                            4194304: 65540,
                            5242880: 67108868,
                            6291456: 67174660,
                            7340032: 67174400,
                            8388608: 67108864,
                            9437184: 67174656,
                            10485760: 65792,
                            11534336: 67174404,
                            12582912: 67109124,
                            13631488: 65536,
                            14680064: 4,
                            15728640: 256,
                            524288: 67174656,
                            1572864: 67174404,
                            2621440: 0,
                            3670016: 67109120,
                            4718592: 67108868,
                            5767168: 65536,
                            6815744: 65540,
                            7864320: 260,
                            8912896: 4,
                            9961472: 256,
                            11010048: 67174400,
                            12058624: 65796,
                            13107200: 65792,
                            14155776: 67109124,
                            15204352: 67174660,
                            16252928: 67108864,
                            16777216: 67174656,
                            17825792: 65540,
                            18874368: 65536,
                            19922944: 67109120,
                            20971520: 256,
                            22020096: 67174660,
                            23068672: 67108868,
                            24117248: 0,
                            25165824: 67109124,
                            26214400: 67108864,
                            27262976: 4,
                            28311552: 65792,
                            29360128: 67174400,
                            30408704: 260,
                            31457280: 65796,
                            32505856: 67174404,
                            17301504: 67108864,
                            18350080: 260,
                            19398656: 67174656,
                            20447232: 0,
                            21495808: 65540,
                            22544384: 67109120,
                            23592960: 256,
                            24641536: 67174404,
                            25690112: 65536,
                            26738688: 67174660,
                            27787264: 65796,
                            28835840: 67108868,
                            29884416: 67109124,
                            30932992: 67174400,
                            31981568: 4,
                            33030144: 65792
                        }, {
                            0: 2151682048,
                            65536: 2147487808,
                            131072: 4198464,
                            196608: 2151677952,
                            262144: 0,
                            327680: 4198400,
                            393216: 2147483712,
                            458752: 4194368,
                            524288: 2147483648,
                            589824: 4194304,
                            655360: 64,
                            720896: 2147487744,
                            786432: 2151678016,
                            851968: 4160,
                            917504: 4096,
                            983040: 2151682112,
                            32768: 2147487808,
                            98304: 64,
                            163840: 2151678016,
                            229376: 2147487744,
                            294912: 4198400,
                            360448: 2151682112,
                            425984: 0,
                            491520: 2151677952,
                            557056: 4096,
                            622592: 2151682048,
                            688128: 4194304,
                            753664: 4160,
                            819200: 2147483648,
                            884736: 4194368,
                            950272: 4198464,
                            1015808: 2147483712,
                            1048576: 4194368,
                            1114112: 4198400,
                            1179648: 2147483712,
                            1245184: 0,
                            1310720: 4160,
                            1376256: 2151678016,
                            1441792: 2151682048,
                            1507328: 2147487808,
                            1572864: 2151682112,
                            1638400: 2147483648,
                            1703936: 2151677952,
                            1769472: 4198464,
                            1835008: 2147487744,
                            1900544: 4194304,
                            1966080: 64,
                            2031616: 4096,
                            1081344: 2151677952,
                            1146880: 2151682112,
                            1212416: 0,
                            1277952: 4198400,
                            1343488: 4194368,
                            1409024: 2147483648,
                            1474560: 2147487808,
                            1540096: 64,
                            1605632: 2147483712,
                            1671168: 4096,
                            1736704: 2147487744,
                            1802240: 2151678016,
                            1867776: 4160,
                            1933312: 2151682048,
                            1998848: 4194304,
                            2064384: 4198464
                        }, {
                            0: 128,
                            4096: 17039360,
                            8192: 262144,
                            12288: 536870912,
                            16384: 537133184,
                            20480: 16777344,
                            24576: 553648256,
                            28672: 262272,
                            32768: 16777216,
                            36864: 537133056,
                            40960: 536871040,
                            45056: 553910400,
                            49152: 553910272,
                            53248: 0,
                            57344: 17039488,
                            61440: 553648128,
                            2048: 17039488,
                            6144: 553648256,
                            10240: 128,
                            14336: 17039360,
                            18432: 262144,
                            22528: 537133184,
                            26624: 553910272,
                            30720: 536870912,
                            34816: 537133056,
                            38912: 0,
                            43008: 553910400,
                            47104: 16777344,
                            51200: 536871040,
                            55296: 553648128,
                            59392: 16777216,
                            63488: 262272,
                            65536: 262144,
                            69632: 128,
                            73728: 536870912,
                            77824: 553648256,
                            81920: 16777344,
                            86016: 553910272,
                            90112: 537133184,
                            94208: 16777216,
                            98304: 553910400,
                            102400: 553648128,
                            106496: 17039360,
                            110592: 537133056,
                            114688: 262272,
                            118784: 536871040,
                            122880: 0,
                            126976: 17039488,
                            67584: 553648256,
                            71680: 16777216,
                            75776: 17039360,
                            79872: 537133184,
                            83968: 536870912,
                            88064: 17039488,
                            92160: 128,
                            96256: 553910272,
                            100352: 262272,
                            104448: 553910400,
                            108544: 0,
                            112640: 553648128,
                            116736: 16777344,
                            120832: 262144,
                            124928: 537133056,
                            129024: 536871040
                        }, {
                            0: 268435464,
                            256: 8192,
                            512: 270532608,
                            768: 270540808,
                            1024: 268443648,
                            1280: 2097152,
                            1536: 2097160,
                            1792: 268435456,
                            2048: 0,
                            2304: 268443656,
                            2560: 2105344,
                            2816: 8,
                            3072: 270532616,
                            3328: 2105352,
                            3584: 8200,
                            3840: 270540800,
                            128: 270532608,
                            384: 270540808,
                            640: 8,
                            896: 2097152,
                            1152: 2105352,
                            1408: 268435464,
                            1664: 268443648,
                            1920: 8200,
                            2176: 2097160,
                            2432: 8192,
                            2688: 268443656,
                            2944: 270532616,
                            3200: 0,
                            3456: 270540800,
                            3712: 2105344,
                            3968: 268435456,
                            4096: 268443648,
                            4352: 270532616,
                            4608: 270540808,
                            4864: 8200,
                            5120: 2097152,
                            5376: 268435456,
                            5632: 268435464,
                            5888: 2105344,
                            6144: 2105352,
                            6400: 0,
                            6656: 8,
                            6912: 270532608,
                            7168: 8192,
                            7424: 268443656,
                            7680: 270540800,
                            7936: 2097160,
                            4224: 8,
                            4480: 2105344,
                            4736: 2097152,
                            4992: 268435464,
                            5248: 268443648,
                            5504: 8200,
                            5760: 270540808,
                            6016: 270532608,
                            6272: 270540800,
                            6528: 270532616,
                            6784: 8192,
                            7040: 2105352,
                            7296: 2097160,
                            7552: 0,
                            7808: 268435456,
                            8064: 268443656
                        }, {
                            0: 1048576,
                            16: 33555457,
                            32: 1024,
                            48: 1049601,
                            64: 34604033,
                            80: 0,
                            96: 1,
                            112: 34603009,
                            128: 33555456,
                            144: 1048577,
                            160: 33554433,
                            176: 34604032,
                            192: 34603008,
                            208: 1025,
                            224: 1049600,
                            240: 33554432,
                            8: 34603009,
                            24: 0,
                            40: 33555457,
                            56: 34604032,
                            72: 1048576,
                            88: 33554433,
                            104: 33554432,
                            120: 1025,
                            136: 1049601,
                            152: 33555456,
                            168: 34603008,
                            184: 1048577,
                            200: 1024,
                            216: 34604033,
                            232: 1,
                            248: 1049600,
                            256: 33554432,
                            272: 1048576,
                            288: 33555457,
                            304: 34603009,
                            320: 1048577,
                            336: 33555456,
                            352: 34604032,
                            368: 1049601,
                            384: 1025,
                            400: 34604033,
                            416: 1049600,
                            432: 1,
                            448: 0,
                            464: 34603008,
                            480: 33554433,
                            496: 1024,
                            264: 1049600,
                            280: 33555457,
                            296: 34603009,
                            312: 1,
                            328: 33554432,
                            344: 1048576,
                            360: 1025,
                            376: 34604032,
                            392: 33554433,
                            408: 34603008,
                            424: 0,
                            440: 34604033,
                            456: 1049601,
                            472: 1024,
                            488: 33555456,
                            504: 1048577
                        }, {
                            0: 134219808,
                            1: 131072,
                            2: 134217728,
                            3: 32,
                            4: 131104,
                            5: 134350880,
                            6: 134350848,
                            7: 2048,
                            8: 134348800,
                            9: 134219776,
                            10: 133120,
                            11: 134348832,
                            12: 2080,
                            13: 0,
                            14: 134217760,
                            15: 133152,
                            2147483648: 2048,
                            2147483649: 134350880,
                            2147483650: 134219808,
                            2147483651: 134217728,
                            2147483652: 134348800,
                            2147483653: 133120,
                            2147483654: 133152,
                            2147483655: 32,
                            2147483656: 134217760,
                            2147483657: 2080,
                            2147483658: 131104,
                            2147483659: 134350848,
                            2147483660: 0,
                            2147483661: 134348832,
                            2147483662: 134219776,
                            2147483663: 131072,
                            16: 133152,
                            17: 134350848,
                            18: 32,
                            19: 2048,
                            20: 134219776,
                            21: 134217760,
                            22: 134348832,
                            23: 131072,
                            24: 0,
                            25: 131104,
                            26: 134348800,
                            27: 134219808,
                            28: 134350880,
                            29: 133120,
                            30: 2080,
                            31: 134217728,
                            2147483664: 131072,
                            2147483665: 2048,
                            2147483666: 134348832,
                            2147483667: 133152,
                            2147483668: 32,
                            2147483669: 134348800,
                            2147483670: 134217728,
                            2147483671: 134219808,
                            2147483672: 134350880,
                            2147483673: 134217760,
                            2147483674: 134219776,
                            2147483675: 0,
                            2147483676: 133120,
                            2147483677: 2080,
                            2147483678: 131104,
                            2147483679: 134350848
                        }],
                        v = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
                        T = B.DES = X.extend({
                            _doReset: function() {
                                for (var V = this._key.words, x = [], E = 0; E < 56; E++) {
                                    var q = U[E] - 1;
                                    x[E] = V[q >>> 5] >>> 31 - q % 32 & 1
                                }
                                for (var G = this._subKeys = [], K = 0; K < 16; K++) {
                                    var W = G[K] = [],
                                        de = C[K];
                                    for (E = 0; E < 24; E++) W[E / 6 | 0] |= x[(b[E] - 1 + de) % 28] << 31 - E % 6, W[4 + (E / 6 | 0)] |= x[28 + (b[E + 24] - 1 + de) % 28] << 31 - E % 6;
                                    for (W[0] = W[0] << 1 | W[0] >>> 31, E = 1; E < 7; E++) W[E] = W[E] >>> 4 * (E - 1) + 3;
                                    W[7] = W[7] << 5 | W[7] >>> 27
                                }
                                var ae = this._invSubKeys = [];
                                for (E = 0; E < 16; E++) ae[E] = G[15 - E]
                            },
                            encryptBlock: function($, V) {
                                this._doCryptBlock($, V, this._subKeys)
                            },
                            decryptBlock: function($, V) {
                                this._doCryptBlock($, V, this._invSubKeys)
                            },
                            _doCryptBlock: function($, V, x) {
                                this._lBlock = $[V], this._rBlock = $[V + 1], y.call(this, 4, 252645135), y.call(this, 16, 65535), S.call(this, 2, 858993459), S.call(this, 8, 16711935), y.call(this, 1, 1431655765);
                                for (var E = 0; E < 16; E++) {
                                    for (var q = x[E], G = this._lBlock, K = this._rBlock, W = 0, de = 0; de < 8; de++) W |= N[de][((K ^ q[de]) & v[de]) >>> 0];
                                    this._lBlock = K, this._rBlock = G ^ W
                                }
                                var ae = this._lBlock;
                                this._lBlock = this._rBlock, this._rBlock = ae, y.call(this, 1, 1431655765), S.call(this, 8, 16711935), S.call(this, 2, 858993459), y.call(this, 16, 65535), y.call(this, 4, 252645135), $[V] = this._lBlock, $[V + 1] = this._rBlock
                            },
                            keySize: 2,
                            ivSize: 2,
                            blockSize: 2
                        });

                    function y($, V) {
                        var x = (this._lBlock >>> $ ^ this._rBlock) & V;
                        this._rBlock ^= x, this._lBlock ^= x << $
                    }

                    function S($, V) {
                        var x = (this._rBlock >>> $ ^ this._lBlock) & V;
                        this._lBlock ^= x, this._rBlock ^= x << $
                    }
                    w.DES = X._createHelper(T);
                    var R = B.TripleDES = X.extend({
                        _doReset: function() {
                            var V = this._key.words;
                            if (2 !== V.length && 4 !== V.length && V.length < 6) throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                            var x = V.slice(0, 2),
                                E = V.length < 4 ? V.slice(0, 2) : V.slice(2, 4),
                                q = V.length < 6 ? V.slice(0, 2) : V.slice(4, 6);
                            this._des1 = T.createEncryptor(j.create(x)), this._des2 = T.createEncryptor(j.create(E)), this._des3 = T.createEncryptor(j.create(q))
                        },
                        encryptBlock: function($, V) {
                            this._des1.encryptBlock($, V), this._des2.decryptBlock($, V), this._des3.encryptBlock($, V)
                        },
                        decryptBlock: function($, V) {
                            this._des3.decryptBlock($, V), this._des2.encryptBlock($, V), this._des1.decryptBlock($, V)
                        },
                        keySize: 6,
                        ivSize: 2,
                        blockSize: 2
                    });
                    w.TripleDES = X._createHelper(R)
                }(), A.TripleDES)
            },
            401: function(me, _e, L) {
                var j, X, B, U, A;
                me.exports = (A = L(585), X = (j = A.lib).Base, B = j.WordArray, (U = A.x64 = {}).Word = X.extend({
                    init: function(N, v) {
                        this.high = N, this.low = v
                    }
                }), U.WordArray = X.extend({
                    init: function(N, v) {
                        N = this.words = N || [], this.sigBytes = null != v ? v : 8 * N.length
                    },
                    toX32: function() {
                        for (var N = this.words, v = N.length, T = [], y = 0; y < v; y++) {
                            var S = N[y];
                            T.push(S.high), T.push(S.low)
                        }
                        return B.create(T, this.sigBytes)
                    },
                    clone: function() {
                        for (var N = X.clone.call(this), v = N.words = this.words.slice(0), T = v.length, y = 0; y < T; y++) v[y] = v[y].clone();
                        return N
                    }
                }), A)
            },
            327: function(me, _e) {
                var w;
                void 0 !== (w = function() {
                    "use strict";

                    function j(N, v, T) {
                        var y = new XMLHttpRequest;
                        y.open("GET", N), y.responseType = "blob", y.onload = function() {
                            C(y.response, v, T)
                        }, y.onerror = function() {
                            console.error("could not download file")
                        }, y.send()
                    }

                    function X(N) {
                        var v = new XMLHttpRequest;
                        v.open("HEAD", N, !1);
                        try {
                            v.send()
                        } catch (T) {}
                        return 200 <= v.status && 299 >= v.status
                    }

                    function B(N) {
                        try {
                            N.dispatchEvent(new MouseEvent("click"))
                        } catch (T) {
                            var v = document.createEvent("MouseEvents");
                            v.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), N.dispatchEvent(v)
                        }
                    }
                    var U = "object" == typeof window && window.window === window ? window : "object" == typeof self && self.self === self ? self : "object" == typeof global && global.global === global ? global : void 0,
                        b = U.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent),
                        C = U.saveAs || ("object" != typeof window || window !== U ? function() {} : "download" in HTMLAnchorElement.prototype && !b ? function(N, v, T) {
                            var y = U.URL || U.webkitURL,
                                S = document.createElement("a");
                            S.download = v = v || N.name || "download", S.rel = "noopener", "string" == typeof N ? (S.href = N, S.origin === location.origin ? B(S) : X(S.href) ? j(N, v, T) : B(S, S.target = "_blank")) : (S.href = y.createObjectURL(N), setTimeout(function() {
                                y.revokeObjectURL(S.href)
                            }, 4e4), setTimeout(function() {
                                B(S)
                            }, 0))
                        } : "msSaveOrOpenBlob" in navigator ? function(N, v, T) {
                            if (v = v || N.name || "download", "string" != typeof N) navigator.msSaveOrOpenBlob(function z(N, v) {
                                return void 0 === v ? v = {
                                    autoBom: !1
                                } : "object" != typeof v && (console.warn("Deprecated: Expected third argument to be a object"), v = {
                                    autoBom: !v
                                }), v.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(N.type) ? new Blob(["\ufeff", N], {
                                    type: N.type
                                }) : N
                            }(N, T), v);
                            else if (X(N)) j(N, v, T);
                            else {
                                var y = document.createElement("a");
                                y.href = N, y.target = "_blank", setTimeout(function() {
                                    B(y)
                                })
                            }
                        } : function(N, v, T, y) {
                            if ((y = y || open("", "_blank")) && (y.document.title = y.document.body.innerText = "downloading..."), "string" == typeof N) return j(N, v, T);
                            var S = "application/octet-stream" === N.type,
                                R = /constructor/i.test(U.HTMLElement) || U.safari,
                                $ = /CriOS\/[\d]+/.test(navigator.userAgent);
                            if (($ || S && R || b) && "undefined" != typeof FileReader) {
                                var V = new FileReader;
                                V.onloadend = function() {
                                    var q = V.result;
                                    q = $ ? q : q.replace(/^data:[^;]*;/, "data:attachment/file;"), y ? y.location.href = q : location = q, y = null
                                }, V.readAsDataURL(N)
                            } else {
                                var x = U.URL || U.webkitURL,
                                    E = x.createObjectURL(N);
                                y ? y.location = E : location.href = E, y = null, setTimeout(function() {
                                    x.revokeObjectURL(E)
                                }, 4e4)
                            }
                        });
                    U.saveAs = C.saveAs = C, me.exports = C
                }.apply(_e, [])) && (me.exports = w)
            },
            480: () => {}
        },
        me => {
            me(me.s = 952)
        }
    ]);

}
/*
     FILE ARCHIVED ON 21:35:07 Mar 08, 2023 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 23:49:56 Sep 25, 2025.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 0.661
  exclusion.robots: 0.029
  exclusion.robots.policy: 0.017
  esindex: 0.015
  cdx.remote: 33.084
  LoadShardBlock: 143.66 (3)
  PetaboxLoader3.resolve: 194.216 (4)
  PetaboxLoader3.datanode: 150.534 (5)
  load_resource: 275.738 (2)
*/
